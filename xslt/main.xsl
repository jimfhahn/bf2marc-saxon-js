<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:exsl="http://exslt.org/common" xmlns:date="http://exslt.org/dates-and-times" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:marc="http://www.loc.gov/MARC21/slim" xmlns:bf="http://id.loc.gov/ontologies/bibframe/" xmlns:bflc="http://id.loc.gov/ontologies/bflc/" xmlns:madsrdf="http://www.loc.gov/mads/rdf/v1#" xmlns:local="http://example.org/local" version="1.0" extension-element-prefixes="exsl date" exclude-result-prefixes="fn rdf rdfs bf bflc madsrdf local">
  <xsl:output encoding="UTF-8" method="xml" indent="yes"/>
  <xsl:strip-space elements="*"/>
  <xsl:param name="pRecordId" select="'default'"/>
  <xsl:param name="pCatScript" select="'Latn'"/>
  <xsl:param name="pGenerationDatestamp">
    <xsl:choose>
      <xsl:when test="function-available('date:date-time')">
        <xsl:value-of select="concat(translate(substring(date:date-time(),1,19),'-:T',''),'.0')"/>
      </xsl:when>
      <xsl:when test="function-available('fn:current-dateTime')">
        <xsl:value-of select="concat(translate(substring(fn:current-dateTime(),1,19),'-:T',''),'.0')"/>
      </xsl:when>
    </xsl:choose>
  </xsl:param>
  <xsl:param name="pSourceRecordId"/>
  <xsl:param name="pConversionAgency" select="'DLC'"/>
  <xsl:param name="pGenerationUri" select="'https://github.com/lcnetdev/bibframe2marc'"/>
  <xsl:param name="pSRULookup"/>
  <xsl:variable name="lower">abcdefghijklmnopqrstuvwxyz</xsl:variable>
  <xsl:variable name="upper">ABCDEFGHIJKLMNOPQRSTUVWXYZ</xsl:variable>
  <xsl:variable name="vCurrentVersion">DLC bibframe2marc v2.0.0</xsl:variable>
  <xsl:variable name="df880script">
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>arab</lang>
      <code>(3</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>cyrl</lang>
      <code>(N</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>grek</lang>
      <code>(S</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>hang</lang>
      <code>$1</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>hani</lang>
      <code>$1</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>hebr</lang>
      <code>$2</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>jpan</lang>
      <code>$1</code>
    </script>
    <script xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <lang>latn</lang>
      <code>(B</code>
    </script>
  </xsl:variable>
  <xsl:variable name="df045BCEtimePeriods">
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>a0</code>
      <edtfDate>-XXXX/-3000</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b0</code>
      <edtfDate>-29XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b1</code>
      <edtfDate>-28XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b2</code>
      <edtfDate>-27XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b3</code>
      <edtfDate>-26XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b4</code>
      <edtfDate>-25XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b5</code>
      <edtfDate>-24XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b6</code>
      <edtfDate>-23XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b7</code>
      <edtfDate>-22XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b8</code>
      <edtfDate>-21XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>b9</code>
      <edtfDate>-20XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c0</code>
      <edtfDate>-19XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c1</code>
      <edtfDate>-18XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c2</code>
      <edtfDate>-17XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c3</code>
      <edtfDate>-16XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c4</code>
      <edtfDate>-15XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c5</code>
      <edtfDate>-14XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c6</code>
      <edtfDate>-13XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c7</code>
      <edtfDate>-12XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c8</code>
      <edtfDate>-11XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>c9</code>
      <edtfDate>-10XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d0</code>
      <edtfDate>-09XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d1</code>
      <edtfDate>-08XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d2</code>
      <edtfDate>-07XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d3</code>
      <edtfDate>-06XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d4</code>
      <edtfDate>-05XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d5</code>
      <edtfDate>-04XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d6</code>
      <edtfDate>-03XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d7</code>
      <edtfDate>-02XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d8</code>
      <edtfDate>-01XX</edtfDate>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>d9</code>
      <edtfDate>-00XX</edtfDate>
    </timePeriod>
  </xsl:variable>
  <xsl:variable name="df045CEtimePeriods">
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>e</code>
      <century>00</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>f</code>
      <century>01</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>g</code>
      <century>02</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>h</code>
      <century>03</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>i</code>
      <century>04</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>j</code>
      <century>05</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>k</code>
      <century>06</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>l</code>
      <century>07</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>m</code>
      <century>08</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>n</code>
      <century>09</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>o</code>
      <century>10</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>p</code>
      <century>11</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>q</code>
      <century>12</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>r</code>
      <century>13</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>s</code>
      <century>14</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>t</code>
      <century>15</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>u</code>
      <century>16</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>v</code>
      <century>17</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>w</code>
      <century>18</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>x</code>
      <century>19</century>
    </timePeriod>
    <timePeriod xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>y</code>
      <century>20</century>
    </timePeriod>
  </xsl:variable>
  <xsl:variable name="df048performers">
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ba</code>
      <type>brass</type>
      <label>horn</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bb</code>
      <type>brass</type>
      <label>trumpet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bc</code>
      <type>brass</type>
      <label>coronet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bd</code>
      <type>brass</type>
      <label>trombone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>be</code>
      <type>brass</type>
      <label>tuba</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bf</code>
      <type>brass</type>
      <label>baritone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>bn</code>
      <type>brass</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>by</code>
      <type>brass, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ca</code>
      <type>chorus</type>
      <label>mixed chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cb</code>
      <type>chorus</type>
      <label>female chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cc</code>
      <type>chorus</type>
      <label>male chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cd</code>
      <type>chorus</type>
      <label>children chorus</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cn</code>
      <type>chorus</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>cy</code>
      <type>chorus, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ea</code>
      <type>electronic</type>
      <label>electronic synthesizer</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>eb</code>
      <type>electronic</type>
      <label>electronic tape</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ec</code>
      <type>electronic</type>
      <label>computer</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ed</code>
      <type>electronic</type>
      <label>ondes martinot</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>en</code>
      <type>electronic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ka</code>
      <type>keyboard</type>
      <label>piano</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kb</code>
      <type>keyboard</type>
      <label>organ</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kc</code>
      <type>keyboard</type>
      <label>harpsichord</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kd</code>
      <type>keyboard</type>
      <label>clavichord</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ke</code>
      <type>keyboard</type>
      <label>continuo</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kf</code>
      <type>keyboard</type>
      <label>celeste</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>kn</code>
      <type>keyboard</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ky</code>
      <type>keyboard, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oa</code>
      <type>instrumental</type>
      <label>orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ob</code>
      <type>instrumental</type>
      <label>chamber orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oc</code>
      <type>instrumental</type>
      <label>string orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>od</code>
      <type>instrumental</type>
      <label>band</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oe</code>
      <type>instrumental</type>
      <label>dance orchestra</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>of</code>
      <type>instrumental</type>
      <label>brass band</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>on</code>
      <type>instrumental</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>oy</code>
      <type>instrumental, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pa</code>
      <type>percussion</type>
      <label>timpani</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pb</code>
      <type>percussion</type>
      <label>xylophone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pc</code>
      <type>percussion</type>
      <label>marimba</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pd</code>
      <type>percussion</type>
      <label>drum</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>pn</code>
      <type>percussion</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>py</code>
      <type>percussion, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sa</code>
      <type>string, bowed</type>
      <label>violin</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sb</code>
      <type>string, bowed</type>
      <label>viola</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sc</code>
      <type>string, bowed</type>
      <label>violoncello</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sd</code>
      <type>string, bowed</type>
      <label>double bass</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>se</code>
      <type>string, bowed</type>
      <label>viol</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sf</code>
      <type>string, bowed</type>
      <label>viola d'amore</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sg</code>
      <type>string, bowed</type>
      <label>viola da gamba</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sn</code>
      <type>string, bowed</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>sy</code>
      <type>string, bowed, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ta</code>
      <type>string, plucked</type>
      <label>harp</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>tb</code>
      <type>string, plucked</type>
      <label>guitar</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>tc</code>
      <type>string, plucked</type>
      <label>lute</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>td</code>
      <type>string, plucked</type>
      <label>mandolin</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>tn</code>
      <type>string, plucked</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ty</code>
      <type>string, plucked, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>va</code>
      <type>voice</type>
      <label>soprano</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vb</code>
      <type>voice</type>
      <label>mezzo soprano</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vc</code>
      <type>voice</type>
      <label>alto</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vd</code>
      <type>voice</type>
      <label>tenor</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>ve</code>
      <type>voice</type>
      <label>baritone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vf</code>
      <type>voice</type>
      <label>bass</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vg</code>
      <type>voice</type>
      <label>counter tenor</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vh</code>
      <type>voice</type>
      <label>high voice</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vi</code>
      <type>voice</type>
      <label>medium voice</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vj</code>
      <type>voice</type>
      <label>low voice</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vn</code>
      <type>voice</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>vy</code>
      <type>voice, ethnic</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wa</code>
      <type>woodwind</type>
      <label>flute</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wb</code>
      <type>woodwind</type>
      <label>oboe</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wc</code>
      <type>woodwind</type>
      <label>clarinet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wd</code>
      <type>woodwind</type>
      <label/>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>we</code>
      <type>woodwind</type>
      <label>bassoon</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wf</code>
      <type>woodwind</type>
      <label>English horn</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wg</code>
      <type>woodwind</type>
      <label>bass clarinet</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wh</code>
      <type>woodwind</type>
      <label>recorder</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wi</code>
      <type>woodwind</type>
      <label>saxophone</label>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wn</code>
      <type>woodwind</type>
    </performer>
    <performer xmlns:bf2marc="http://www.loc.gov/bf2marc">
      <code>wy</code>
      <type>woodwind, ethnic</type>
    </performer>
  </xsl:variable>
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="rdf:RDF">
        <xsl:choose>
          <xsl:when test="count(rdf:RDF/bf:Instance) = 1">
            <xsl:choose>
              <xsl:when test="count(rdf:RDF/bf:Work) = 0"/>
              <xsl:when test="count(rdf:RDF/bf:Work) = 1">
                <xsl:choose>
                  <xsl:when test="rdf:RDF/bf:Instance/bf:instanceOf[@rdf:resource=/rdf:RDF/bf:Work/@rdf:about]"/>
                  <xsl:when test="rdf:RDF/bf:Work/bf:hasInstance[@rdf:resource=/rdf:RDF/bf:Instance/@rdf:about]"/>
                  <xsl:otherwise>
                    <xsl:message terminate="yes">Invalid document: top-level Instance and Work are not linked</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message terminate="yes">Invalid document: document can only have 0 or 1 top-level Work element</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message terminate="yes">Invalid document: document must have exactly one top-level Instance element</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message terminate="yes">Invalid document: no RDF root element</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates/>
  </xsl:template>
  <xsl:template match="rdf:RDF">
    <xsl:variable name="vAdminMetadata" select="bf:Instance/bf:adminMetadata/bf:AdminMetadata | bf:Work/bf:adminMetadata/bf:AdminMetadata[not(/rdf:RDF/bf:Instance/bf:adminMetadata/bf:AdminMetadata)]"/>
    <xsl:variable name="vRecordId">
      <xsl:choose>
        <xsl:when test="$pRecordId = 'default'">
          <xsl:choose>
            <xsl:when test="$vAdminMetadata/bf:identifiedBy/bf:Local[not(bf:source) or bf:source/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/rdfs:label='DLC']/rdf:value">
              <xsl:value-of select="$vAdminMetadata/bf:identifiedBy/bf:Local[not(bf:source) or bf:source/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or bf:source/bf:Source/rdfs:label='DLC']/rdf:value"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="generate-id()"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$pRecordId"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <marc:record>
      <marc:leader>
        <xsl:attribute name="xml:space">preserve</xsl:attribute>
        <xsl:text>     </xsl:text>
        <xsl:variable name="vPosition-2">
          <xsl:choose>
            <xsl:when test="$vAdminMetadata/bf:status[@rdf:resource] or                       $vAdminMetadata/bf:status/bf:Status[@rdf:about]">
              <xsl:for-each select="$vAdminMetadata/bf:status/@rdf:resource |                            $vAdminMetadata/bf:status/bf:Status/@rdf:about">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:value-of select="substring(.,string-length(.),1)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element LDR.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:when test="string-length($vAdminMetadata/bf:status/bf:Status/bf:code) = 1">
              <xsl:for-each select="$vAdminMetadata/bf:status/bf:Status/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:value-of select="."/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element LDR.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vPosition-2 != ''">
            <xsl:value-of select="$vPosition-2"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>n</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:variable name="vPosition-3">
          <xsl:choose>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NotatedMusic'] and bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manuscript']">
              <xsl:text>d</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NotatedMusic']">
              <xsl:text>c</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography'] and bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manuscript']">
              <xsl:text>f</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography']">
              <xsl:text>e</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage']">
              <xsl:text>g</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NonMusicAudio']">
              <xsl:text>i</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicAudio']">
              <xsl:text>j</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage']">
              <xsl:text>k</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Multimedia']">
              <xsl:text>m</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MixedMaterial']">
              <xsl:text>p</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Object']">
              <xsl:text>r</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Text'] and bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manuscript']">
              <xsl:text>t</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vPosition-3 != ''">
            <xsl:value-of select="$vPosition-3"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>a</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:variable name="vPosition-4">
          <xsl:choose>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Collection']">
              <xsl:text>c</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Integrating']">
              <xsl:text>i</xsl:text>
            </xsl:when>
            <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Serial']">
              <xsl:text>s</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vPosition-4 != ''">
            <xsl:value-of select="$vPosition-4"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>m</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:text> a22     </xsl:text>
        <xsl:variable name="vPosition-6">
          <xsl:choose>
            <xsl:when test="$vAdminMetadata/bflc:encodingLevel[@rdf:resource] or                       $vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel[@rdf:about]">
              <xsl:for-each select="$vAdminMetadata/bflc:encodingLevel/@rdf:resource |                            $vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel/@rdf:about">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:variable name="vLdr17" select="substring(.,string-length(.),1)"/>
                    <xsl:choose>
                      <xsl:when test="$vLdr17='f'">
                        <xsl:text> </xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$vLdr17"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element LDR.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:when test="string-length($vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel/bf:code) = 1">
              <xsl:for-each select="$vAdminMetadata/bflc:encodingLevel/bflc:EncodingLevel/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:value-of select="."/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element LDR.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vPosition-6 != ''">
            <xsl:value-of select="$vPosition-6"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>u</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:text>c 4500</xsl:text>
      </marc:leader>
      <marc:controlfield>
        <xsl:attribute name="xml:space">preserve</xsl:attribute>
        <xsl:attribute name="tag">001</xsl:attribute>
        <xsl:value-of select="$vRecordId"/>
      </marc:controlfield>
      <marc:controlfield>
        <xsl:attribute name="xml:space">preserve</xsl:attribute>
        <xsl:attribute name="tag">003</xsl:attribute>
        <xsl:choose>
          <xsl:when test="$pConversionAgency != 'DLC' and $pRecordId != ''">
            <xsl:value-of select="$pConversionAgency"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:choose>
              <xsl:when test="$vAdminMetadata/bf:identifiedBy/*[local-name()='Local' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']/bf:assigner/*/*[local-name()='code']">
                <xsl:value-of select="$vAdminMetadata/bf:identifiedBy/*[local-name()='Local' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']/bf:assigner/*/*[local-name()='code']"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$pConversionAgency"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:otherwise>
        </xsl:choose>
      </marc:controlfield>
      <xsl:choose>
        <xsl:when test="$vAdminMetadata/bf:changeDate">
          <xsl:choose>
            <xsl:when test="$vAdminMetadata/bf:changeDate/@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime'">
              <marc:controlfield>
                <xsl:attribute name="xml:space">preserve</xsl:attribute>
                <xsl:attribute name="tag">005</xsl:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),substring($vAdminMetadata/bf:changeDate,12,2),substring($vAdminMetadata/bf:changeDate,15,2),substring($vAdminMetadata/bf:changeDate,18,2),'.0')"/>
              </marc:controlfield>
            </xsl:when>
            <xsl:when test="$vAdminMetadata/bf:changeDate/@rdf:datatype='http://www.w3.org/2001/XMLSchema#date'">
              <marc:controlfield>
                <xsl:attribute name="xml:space">preserve</xsl:attribute>
                <xsl:attribute name="tag">005</xsl:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),'000000.0')"/>
              </marc:controlfield>
            </xsl:when>
            <xsl:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 19 and                     substring($vAdminMetadata/bf:changeDate,5,1) = '-' and                     substring($vAdminMetadata/bf:changeDate,8,1) = '-' and                     substring($vAdminMetadata/bf:changeDate,11,1) = 'T' and                     substring($vAdminMetadata/bf:changeDate,14,1) = ':' and                     substring($vAdminMetadata/bf:changeDate,17,1) = ':'">
              <marc:controlfield>
                <xsl:attribute name="xml:space">preserve</xsl:attribute>
                <xsl:attribute name="tag">005</xsl:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),substring($vAdminMetadata/bf:changeDate,12,2),substring($vAdminMetadata/bf:changeDate,15,2),substring($vAdminMetadata/bf:changeDate,18,2),'.0')"/>
              </marc:controlfield>
            </xsl:when>
            <xsl:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 10 and                     substring($vAdminMetadata/bf:changeDate,5,1) = '-' and                     substring($vAdminMetadata/bf:changeDate,8,1) = '-'">
              <marc:controlfield>
                <xsl:attribute name="xml:space">preserve</xsl:attribute>
                <xsl:attribute name="tag">005</xsl:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,4),substring($vAdminMetadata/bf:changeDate,6,2),substring($vAdminMetadata/bf:changeDate,9,2),'000000.0')"/>
              </marc:controlfield>
            </xsl:when>
            <xsl:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 14 and                     translate($vAdminMetadata/bf:changeDate,'-:.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','') = $vAdminMetadata/bf:changeDate">
              <marc:controlfield>
                <xsl:attribute name="xml:space">preserve</xsl:attribute>
                <xsl:attribute name="tag">005</xsl:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,14),'.0')"/>
              </marc:controlfield>
            </xsl:when>
            <xsl:when test="string-length($vAdminMetadata/bf:changeDate) &gt;= 8 and                     translate($vAdminMetadata/bf:changeDate,'-:.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ','') = $vAdminMetadata/bf:changeDate">
              <marc:controlfield>
                <xsl:attribute name="xml:space">preserve</xsl:attribute>
                <xsl:attribute name="tag">005</xsl:attribute>
                <xsl:value-of select="concat(substring($vAdminMetadata/bf:changeDate,1,8),'000000.0')"/>
              </marc:controlfield>
            </xsl:when>
            <xsl:otherwise>
              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed bf:changeDate. Invalid datatype for 005.</xsl:message>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='Cartography'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography') and                     (bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026058' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026058' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026061' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026061' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026387' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026387' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026113' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026113' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027245' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027245' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026530' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026530' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026295' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026295' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026045' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026045')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='Multimedia'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Multimedia') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/c' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/c')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='Cartography'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography') and                     (bf:Work/bf:content/@rdf:resource='http://id.loc.gov/vocabulary/contentTypes/crf' or bf:Work/bf:content/*/@rdf:about='http://id.loc.gov/vocabulary/contentTypes/crf') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/n' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n') and                     (bf:Instance/bf:carrier/@rdf:resource='http://id.loc.gov/vocabulary/carriers/nr' or bf:Instance/bf:carrier/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='StillImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/g' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/g') and                     not(bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026406' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026406')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='Text'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Text') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/h' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/h')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='StillImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/n' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='MovingImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/g' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/g')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='Audio'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Audio') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/s' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/s')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF[(*[local-name()='MovingImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/v' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/v')]" mode="generate-007">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="/rdf:RDF" mode="generate-008">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[         (local-name()='Lccn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']) and         not(           bf:status/bf:Status/rdfs:label[text()='invalid'] or           bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or           bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'         )]" mode="generate-010">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Nbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Nbn']]" mode="generate-015">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:adminMetadata/bf:AdminMetadata/bf:identifiedBy/bf:Local[bf:source/bf:Source] |                     bf:Work/bf:adminMetadata/bf:AdminMetadata/bf:identifiedBy/bf:Local[bf:source/bf:Source]" mode="generate-016">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='CopyrightNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CopyrightNumber']]" mode="generate-017">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[(local-name()='Isbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']) and rdf:value/text()]" mode="generate-020">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()] |        bf:Work/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()]" mode="generate-022">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Isrc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isrc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Upc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Upc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ismn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ismn']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ean' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ean']] |       bf:Instance/bf:identifiedBy/*[local-name()='Sici' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Sici']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ansi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ansi']] |       bf:Instance/bf:identifiedBy/*[local-name()='Doi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Doi']] |       bf:Work/bf:identifiedBy/*[local-name()='Eidr' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Eidr']] |       bf:Instance/bf:identifiedBy/*[local-name()='Gtin14Number' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Gtin14Number']] |       bf:Instance/bf:identifiedBy/*[local-name()='Hdl' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hdl']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isan' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isan']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isni' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isni']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iso' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iso']] |       bf:Instance/bf:identifiedBy/*[local-name()='Istc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Istc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iswc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iswc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Urn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Urn']] |       bf:Instance/bf:identifiedBy/bf:Identifier[not(rdf:type or bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo')]" mode="generate-024">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']] |                     //bf:Item/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']]" mode="generate-025">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]|                     //bf:Item/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]" mode="generate-026">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Strn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn']]" mode="generate-027">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[(local-name()='AudioIssueNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AudioIssueNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MatrixNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MatrixNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPlate' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPlate']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPublishingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPublishingNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='VideoRecordingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VideoRecordingNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='PublisherNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PublisherNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicDistributorNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicDistributorNumber']) and rdf:value/text()]" mode="generate-028">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Coden' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden']]" mode="generate-030">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='PostalRegistration' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PostalRegistration']]" mode="generate-032">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:capture/bf:Capture[bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf'] or bf:place/@rdf:resource]" mode="generate-033">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:scale/bf:Scale[starts-with(rdfs:label,'linear') or starts-with(rdfs:label,'angular')]" mode="generate-034">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='Local' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']]" mode="generate-035">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='StudyNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StudyNumber']]" mode="generate-036">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:acquisitionSource/bf:AcquisitionSource |                     //bf:Item/bf:acquisitionSource/bf:AcquisitionSource" mode="generate-037">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="$vAdminMetadata/bflc:metadataLicensor">
          <marc:datafield>
            <xsl:attribute name="tag">038</xsl:attribute>
            <xsl:attribute name="ind1">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:attribute name="ind2">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:variable name="v038-a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="$vAdminMetadata/bflc:metadataLicensor/bflc:MetadataLicensor/rdfs:label|$vAdminMetadata/bflc:metadataLicensor/*[local-name()='Authority' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]/madsrdf:code[@rdf:datatype='http://id.loc.gov/datatypes/orgs/code']"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:if test="$v038-a != ''">
              <marc:subfield code="a">
                <xsl:value-of select="$v038-a"/>
              </marc:subfield>
            </xsl:if>
          </marc:datafield>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Instance/bf:adminMetadata/bf:AdminMetadata/bf:assigner |                     bf:Work/bf:adminMetadata/bf:AdminMetadata/bf:assigner" mode="generate-040">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work[count(bf:language/bf:Language[not(bf:source)])&gt;1]">
          <marc:datafield>
            <xsl:attribute name="tag">041</xsl:attribute>
            <xsl:attribute name="ind1">
              <xsl:variable name="vInd">
                <xsl:choose>
                  <xsl:when test="bf:Work/bf:note/bf:Note[rdfs:label='Includes translation']">
                    <xsl:text>1</xsl:text>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vInd != ''">
                  <xsl:value-of select="$vInd"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text> </xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
            <xsl:attribute name="ind2">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:variable name="vPrimaryLangElement" select="bf:Work/bf:language/bf:Language[not(bf:source) and not(bf:part)][1]"/>
            <xsl:variable name="vPrimaryLang">
              <xsl:choose>
                <xsl:when test="starts-with($vPrimaryLangElement/@rdf:about,'http://id.loc.gov/vocabulary/languages/')">
                  <xsl:value-of select="substring-after($vPrimaryLangElement/@rdf:about,'http://id.loc.gov/vocabulary/languages/')"/>
                </xsl:when>
                <xsl:when test="$vPrimaryLangElement/madsrdf:code">
                  <xsl:value-of select="$vPrimaryLangElement/madsrdf:code"/>
                </xsl:when>
                <xsl:when test="starts-with($vPrimaryLangElement/rdf:value,'http://id.loc.gov/vocabulary/languages/')">
                  <xsl:value-of select="substring-after($vPrimaryLangElement/rdf:value,'http://id.loc.gov/vocabulary/languages/')"/>
                </xsl:when>
                <xsl:when test="starts-with($vPrimaryLangElement/rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                  <xsl:value-of select="substring-after($vPrimaryLangElement/rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')"/>
                </xsl:when>
                <xsl:when test="$vPrimaryLangElement/rdf:value">
                  <xsl:value-of select="$vPrimaryLangElement/rdf:value"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$vPrimaryLangElement/rdfs:label"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:for-each select="bf:Work/bf:language/bf:Language[not(bf:source) and not(bf:part)]">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <marc:subfield code="a">
                    <xsl:value-of select="$vPrimaryLang"/>
                  </marc:subfield>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:variable name="vCurrentLang">
                    <xsl:choose>
                      <xsl:when test="starts-with(@rdf:about,'http://id.loc.gov/vocabulary/languages/')">
                        <xsl:value-of select="substring-after(@rdf:about,'http://id.loc.gov/vocabulary/languages/')"/>
                      </xsl:when>
                      <xsl:when test="madsrdf:code">
                        <xsl:value-of select="madsrdf:code"/>
                      </xsl:when>
                      <xsl:when test="starts-with(rdf:value,'http://id.loc.gov/vocabulary/languages/')">
                        <xsl:value-of select="substring-after(rdf:value,'http://id.loc.gov/vocabulary/languages/')"/>
                      </xsl:when>
                      <xsl:when test="starts-with($vPrimaryLangElement/rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                        <xsl:value-of select="substring-after(rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')"/>
                      </xsl:when>
                      <xsl:when test="rdf:value">
                        <xsl:value-of select="rdf:value"/>
                      </xsl:when>
                      <xsl:when test="rdfs:label">
                        <xsl:value-of select="rdfs:label"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vCurrentLang != '' and $vCurrentLang != $vPrimaryLang">
                      <marc:subfield code="a">
                        <xsl:value-of select="$vCurrentLang"/>
                      </marc:subfield>
                    </xsl:when>
                  </xsl:choose>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
            <xsl:for-each select="bf:Work/bf:language/bf:Language[not(bf:source) and bf:part]">
              <xsl:variable name="vSubfield">
                <xsl:choose>
                  <xsl:when test="bf:part='summary'">b</xsl:when>
                  <xsl:when test="bf:part='sung or spoken text'">d</xsl:when>
                  <xsl:when test="bf:part='libretto'">e</xsl:when>
                  <xsl:when test="bf:part='table of contents'">f</xsl:when>
                  <xsl:when test="bf:part='accompanying material'">g</xsl:when>
                  <xsl:when test="bf:part='original'">h</xsl:when>
                  <xsl:when test="bf:part='intertitles'">i</xsl:when>
                  <xsl:when test="bf:part='subtitles or captions'">j</xsl:when>
                  <xsl:when test="bf:part='intermediate translations'">k</xsl:when>
                  <xsl:when test="bf:part='original accompanying materials'">m</xsl:when>
                  <xsl:when test="bf:part='original libretto'">n</xsl:when>
                  <xsl:when test="bf:part='captions'">p</xsl:when>
                  <xsl:when test="bf:part='accessible audio'">q</xsl:when>
                  <xsl:when test="bf:part='accessible visual material'">r</xsl:when>
                  <xsl:when test="bf:part='accompanying transcripts'">t</xsl:when>
                  <xsl:otherwise>a</xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <marc:subfield>
                <xsl:attribute name="code">
                  <xsl:value-of select="$vSubfield"/>
                </xsl:attribute>
                <xsl:choose>
                  <xsl:when test="starts-with(@rdf:about,'http://id.loc.gov/vocabulary/languages/')">
                    <xsl:value-of select="substring-after(@rdf:about,'http://id.loc.gov/vocabulary/languages/')"/>
                  </xsl:when>
                  <xsl:when test="madsrdf:code">
                    <xsl:value-of select="madsrdf:code"/>
                  </xsl:when>
                  <xsl:when test="starts-with(rdf:value,'http://id.loc.gov/vocabulary/languages/')">
                    <xsl:value-of select="substring-after(rdf:value,'http://id.loc.gov/vocabulary/languages/')"/>
                  </xsl:when>
                  <xsl:when test="starts-with(rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                    <xsl:value-of select="substring-after(rdf:value/@rdf:resource,'http://id.loc.gov/vocabulary/languages/')"/>
                  </xsl:when>
                  <xsl:when test="rdf:value">
                    <xsl:value-of select="rdf:value"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="rdfs:label"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </marc:subfield>
            </xsl:for-each>
          </marc:datafield>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Work/bf:language/bf:Language[bf:source]" mode="generate-041">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="$vAdminMetadata/bf:descriptionAuthentication">
          <marc:datafield>
            <xsl:attribute name="tag">042</xsl:attribute>
            <xsl:attribute name="ind1">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:attribute name="ind2">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:for-each select="$vAdminMetadata/bf:descriptionAuthentication">
              <marc:subfield code="a">
                <xsl:choose>
                  <xsl:when test="*/rdf:value">
                    <xsl:value-of select="*/rdf:value"/>
                  </xsl:when>
                  <xsl:when test="*/*[local-name()='code']">
                    <xsl:value-of select="*/*[local-name()='code']"/>
                  </xsl:when>
                  <xsl:when test="starts-with(*/@rdf:about,'http://id.loc.gov/vocabulary/marcauthen/')">
                    <xsl:value-of select="substring-after(*/@rdf:about,'http://id.loc.gov/vocabulary/marcauthen/')"/>
                  </xsl:when>
                  <xsl:when test="starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/marcauthen/')">
                    <xsl:value-of select="substring-after(@rdf:resource,'http://id.loc.gov/vocabulary/marcauthen/')"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: missing value from bf:descriptionAuthentication property</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </marc:subfield>
            </xsl:for-each>
          </marc:datafield>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Work/bf:geographicCoverage[contains(@rdf:resource,'id.loc.gov/vocabulary/geographicAreas') or                     contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/vocabulary/geographicAreas') or                     bf:GeographicCoverage/rdf:value]" mode="generate-043">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:temporalCoverage">
          <marc:datafield>
            <xsl:attribute name="tag">045</xsl:attribute>
            <xsl:attribute name="ind1">
              <xsl:variable name="vInd">
                <xsl:choose>
                  <xsl:when test="count(bf:Work/bf:temporalCoverage[(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not(contains(.,'X')) and not (contains(.,'/'))]) = 1">
                    <xsl:text>0</xsl:text>
                  </xsl:when>
                  <xsl:when test="count(bf:Work/bf:temporalCoverage[(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not(contains(.,'X')) and not (contains(.,'/'))]) &gt; 1">
                    <xsl:text>1</xsl:text>
                  </xsl:when>
                  <xsl:when test="count(bf:Work/bf:temporalCoverage[(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not(contains(.,'X')) and contains(.,'/')]) = 1">
                    <xsl:text>2</xsl:text>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vInd != ''">
                  <xsl:value-of select="$vInd"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text> </xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
            <xsl:attribute name="ind2">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:for-each select="bf:Work/bf:temporalCoverage[@rdf:datatype='http://id.loc.gov/datatypes/edtf' and contains(.,'X')]">
              <marc:subfield code="a">
                <xsl:choose>
                  <xsl:when test="contains(.,'/')">
                    <xsl:variable name="v045Date1">
                      <xsl:variable name="vDate1">
                        <xsl:call-template name="EDTF-Date1">
                          <xsl:with-param name="pEDTFDate" select="."/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="starts-with($vDate1,'-')">
                          <xsl:value-of select="exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vDate1]/code"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:variable name="vCentury" select="exsl:node-set($df045CEtimePeriods)/*[century=substring($vDate1,1,2)]/code"/>
                          <xsl:variable name="vDecade">
                            <xsl:choose>
                              <xsl:when test="substring($vDate1,3,1)='X'">-</xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="substring($vDate1,3,1)"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:variable>
                          <xsl:value-of select="concat($vCentury,$vDecade)"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="v045Date2">
                      <xsl:variable name="vDate2">
                        <xsl:call-template name="EDTF-Date2">
                          <xsl:with-param name="pEDTFDate" select="."/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="starts-with($vDate2,'-')">
                          <xsl:value-of select="exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vDate2]/code"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:variable name="vCentury" select="exsl:node-set($df045CEtimePeriods)/*[century=substring($vDate2,1,2)]/code"/>
                          <xsl:variable name="vDecade">
                            <xsl:choose>
                              <xsl:when test="substring($vDate2,3,1)='X'">-</xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="substring($vDate2,3,1)"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:variable>
                          <xsl:value-of select="concat($vCentury,$vDecade)"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:value-of select="concat($v045Date1,$v045Date2)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:choose>
                      <xsl:when test="starts-with(.,'-')">
                        <xsl:variable name="vEdtfDate" select="."/>
                        <xsl:value-of select="concat(exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vEdtfDate]/code,exsl:node-set($df045BCEtimePeriods)/*[edtfDate=$vEdtfDate]/code)"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:variable name="vEdtfDate" select="."/>
                        <xsl:variable name="vCentury" select="exsl:node-set($df045CEtimePeriods)/*[century=substring($vEdtfDate,1,2)]/code"/>
                        <xsl:choose>
                          <xsl:when test="substring($vEdtfDate,3,1)='X'">
                            <xsl:value-of select="concat($vCentury,'-',$vCentury,'-')"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="concat($vCentury,substring($vEdtfDate,3,1),$vCentury,substring($vEdtfDate,3,1))"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:otherwise>
                </xsl:choose>
              </marc:subfield>
            </xsl:for-each>
            <xsl:for-each select="bf:Work/bf:temporalCoverage[not(contains(.,'X'))]">
              <xsl:choose>
                <xsl:when test="@rdf:datatype='http://id.loc.gov/datatypes/edtf' and contains(.,'/')">
                  <xsl:variable name="vDate1">
                    <xsl:call-template name="EDTF-Date1">
                      <xsl:with-param name="pEDTFDate" select="."/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:variable name="vDate2">
                    <xsl:call-template name="EDTF-Date2">
                      <xsl:with-param name="pEDTFDate" select="."/>
                    </xsl:call-template>
                  </xsl:variable>
                  <marc:subfield code="b">
                    <xsl:choose>
                      <xsl:when test="substring($vDate1,1,1) = '-'">
                        <xsl:value-of select="concat('c',translate($vDate1,' -:T',''))"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat('d',translate($vDate1,' -:T',''))"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </marc:subfield>
                  <marc:subfield code="b">
                    <xsl:choose>
                      <xsl:when test="substring($vDate2,1,1) = '-'">
                        <xsl:value-of select="concat('c',translate($vDate2,' -:T',''))"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat('d',translate($vDate2,' -:T',''))"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </marc:subfield>
                </xsl:when>
                <xsl:when test="(@rdf:datatype='http://id.loc.gov/datatypes/edtf' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime') and not (contains(.,'/'))">
                  <marc:subfield code="b">
                    <xsl:choose>
                      <xsl:when test="substring(.,1,1) = '-'">
                        <xsl:value-of select="concat('c',translate(.,' -:T',''))"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat('d',translate(.,' -:T',''))"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </marc:subfield>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: no datatype for bf:temporalCoverage predicate, putting unformatted string into 045 $b</xsl:message>
                  <marc:subfield code="b">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </marc:datafield>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Work/bf:originDate[@rdf:datatype='http://id.loc.gov/datatypes/edtf']" mode="generate-046">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:instrument/bf:MusicInstrument or       bf:Work/bf:ensemble/bf:MusicEnsemble or       bf:Work/bf:voice/bf:MusicVoice">
          <marc:datafield>
            <xsl:attribute name="tag">048</xsl:attribute>
            <xsl:attribute name="ind1">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:attribute name="ind2">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:for-each select="bf:Work/bf:instrument/bf:MusicInstrument|bf:Work/bf:ensemble/bf:MusicEnsemble|bf:Work/bf:voice/bf:MusicVoice">
              <xsl:variable name="v048-a">
                <xsl:variable name="vType">
                  <xsl:choose>
                    <xsl:when test="local-name() = 'MusicInstrument'">
                      <xsl:value-of select="bf:instrumentalType"/>
                    </xsl:when>
                    <xsl:when test="local-name() = 'MusicEnsemble'">
                      <xsl:value-of select="bf:ensembleType"/>
                    </xsl:when>
                    <xsl:when test="local-name() = 'MusicVoice'">
                      <xsl:value-of select="bf:voiceType"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vLabel">
                  <xsl:value-of select="rdfs:label"/>
                </xsl:variable>
                <xsl:variable name="vCode">
                  <xsl:choose>
                    <xsl:when test="rdfs:label and $vType != ''">
                      <xsl:choose>
                        <xsl:when test="exsl:node-set($df048performers)/performer[type=$vType and label=$vLabel]">
                          <xsl:value-of select="exsl:node-set($df048performers)/performer[type=$vType and label=$vLabel]/code"/>
                        </xsl:when>
                        <xsl:when test="exsl:node-set($df048performers)/performer[type=$vType and not(label)]">
                          <xsl:value-of select="exsl:node-set($df048performers)/performer[type=$vType and not(label)]/code"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$vType != ''">
                      <xsl:value-of select="exsl:node-set($df048performers)/performer[type=$vType and not(label)]/code"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vCount">
                  <xsl:if test="bf:count">
                    <xsl:value-of select="format-number(bf:count,'00')"/>
                  </xsl:if>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vCode != ''">
                    <xsl:value-of select="concat($vCode,$vCount)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: no 048 performer match for <xsl:value-of select="name()"/>[<xsl:value-of select="position()"/>]</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v048-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$v048-a"/>
                </marc:subfield>
              </xsl:if>
            </xsl:for-each>
          </marc:datafield>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Work/bf:classification/*[bf:classificationPortion/text() and (local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and not(bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada'])]" mode="generate-050">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="count(//bf:Item[(bf:heldBy/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or *[local-name()='label']='United States, Library of Congress' or *[local-name()='code']='DLC'] or bf:heldBy[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc']) and (bf:shelfMark/*[local-name()='ShelfMarkLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ShelfMarkLcc']/rdfs:label)]) &gt; 1">
          <xsl:for-each select="//bf:Item[(bf:heldBy/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or *[local-name()='label']='United States, Library of Congress' or *[local-name()='code']='DLC'] or bf:heldBy[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc']) and bf:shelfMark/*[local-name()='ShelfMarkLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ShelfMarkLcc']]">
            <xsl:choose>
              <xsl:when test="position() &gt; 1">
                <marc:datafield>
                  <xsl:attribute name="tag">051</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:for-each select="bf:shelfMark/*[local-name()='ShelfMarkLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ShelfMarkLcc']/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="a">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 051 $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:shelfMark/*[local-name()='ShelfMarkLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ShelfMarkLcc']/bf:note/bf:Note/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="c">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 051 $c.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Work/bf:geographicCoverage[contains(@rdf:resource,'id.loc.gov/authorities/classification/G') or                contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/authorities/classification/G')]" mode="generate-052">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:classification/*[(local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */@rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada']]" mode="generate-055">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:classification/*[local-name()='ClassificationNlm' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationNlm']" mode="generate-060">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:classification/bf:Classification[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal' or                     bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal']" mode="generate-070">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:subject/bf:Topic[*[local-name()='code']]" mode="generate-072">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo']" mode="generate-074">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:classification/*[(local-name()='ClassificationDdc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationDdc') and bf:classificationPortion/text()]" mode="generate-082">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:classification/bf:Classification[not(rdf:type or bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal')]" mode="generate-084">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="//bf:Item/bf:shelfMark/bf:ShelfMark[not(rdf:type)]" mode="generate-084">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:classification/bf:Classification[bf:source]" mode="generate-086">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:identifiedBy/*[local-name()='ReportNumber' or rdf:type='http://id.loc.gov/ontologies/bibframe/ReportNumber']" mode="generate-088">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]/bf:agent/*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]/bf:agent/*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:variable name="vNameAuth">
              <xsl:choose>
                <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                  <xsl:call-template name="tGetMARCAuth">
                    <xsl:with-param name="pUri" select="@rdf:about"/>
                  </xsl:call-template>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vMainEntryTag">
              <xsl:choose>
                <xsl:when test="exsl:node-set($vNameAuth)//marc:record">
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']">
                      <xsl:text>100</xsl:text>
                    </xsl:when>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']">
                      <xsl:text>110</xsl:text>
                    </xsl:when>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']">
                      <xsl:text>111</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:when>
                <xsl:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xsl:text>110</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xsl:text>111</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>100</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vAuthSubfields">
              <xsl:choose>
                <xsl:when test="$vMainEntryTag='100'">
                  <xsl:text>abcdgjq</xsl:text>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='110'">
                  <xsl:text>abcdgn</xsl:text>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='111'">
                  <xsl:text>acdegnq</xsl:text>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vSourceUri">
              <xsl:choose>
                <xsl:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource"/>
                </xsl:when>
                <xsl:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="rdfs:label/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">
                    <xsl:value-of select="$vMainEntryTag"/>
                  </xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]">
                          <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]/@ind1"/>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:choose>
                            <xsl:when test="contains(local-name(),'Family')">
                              <xsl:text>3</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:text>1</xsl:text>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='110'">
                          <xsl:choose>
                            <xsl:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                              <xsl:text>1</xsl:text>
                            </xsl:when>
                          </xsl:choose>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>2</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]">
                      <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]/marc:subfield[contains($vAuthSubfields,@code)]">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code"/>
                          </xsl:attribute>
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:variable name="vvMainEntryTag-a">
                        <xsl:choose>
                          <xsl:when test="$vMainEntryTag='100'">
                            <xsl:choose>
                              <xsl:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                                <xsl:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="madsrdf:authoritativeLabel">
                                <xsl:for-each select="madsrdf:authoritativeLabel">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:for-each select="rdfs:label">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:choose>
                              <xsl:when test="madsrdf:elementList">
                                <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="madsrdf:authoritativeLabel">
                                <xsl:for-each select="madsrdf:authoritativeLabel">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:for-each select="rdfs:label">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvMainEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$vvMainEntryTag-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='110'">
                          <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='111'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $q.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='111'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="@rdf:about[                                     not(contains(.,'example.org')) and                                      not(contains(.,'REPLACE')) and                                      not(contains(., '/agents/'))                 ]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[           contains(., '/agents/')           ]">
                    <marc:subfield code="1">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vMainEntryTag='100' or $vMainEntryTag='110'">
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="e">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:choose>
                    <xsl:when test="$vMainEntryTag='111'">
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="j">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xsl:choose>
                        <xsl:when test="madsrdf:code">
                          <xsl:for-each select="madsrdf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="bf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/*/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xsl:variable name="vvMainEntryTag-2">
                        <xsl:choose>
                          <xsl:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:when test="$vSourceUri != ''">
                            <xsl:choose>
                              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode">
                                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="$vSourceUri"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvMainEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xsl:value-of select="$vvMainEntryTag-2"/>
                        </marc:subfield>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (vMainEntryTag).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]/bf:agent/*">
            <xsl:variable name="vNameAuth">
              <xsl:choose>
                <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                  <xsl:call-template name="tGetMARCAuth">
                    <xsl:with-param name="pUri" select="@rdf:about"/>
                  </xsl:call-template>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vMainEntryTag">
              <xsl:choose>
                <xsl:when test="exsl:node-set($vNameAuth)//marc:record">
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']">
                      <xsl:text>100</xsl:text>
                    </xsl:when>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']">
                      <xsl:text>110</xsl:text>
                    </xsl:when>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']">
                      <xsl:text>111</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:when>
                <xsl:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xsl:text>110</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xsl:text>111</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>100</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vAuthSubfields">
              <xsl:choose>
                <xsl:when test="$vMainEntryTag='100'">
                  <xsl:text>abcdgjq</xsl:text>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='110'">
                  <xsl:text>abcdgn</xsl:text>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='111'">
                  <xsl:text>acdegnq</xsl:text>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vSourceUri">
              <xsl:choose>
                <xsl:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource"/>
                </xsl:when>
                <xsl:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="rdfs:label/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">
                    <xsl:value-of select="$vMainEntryTag"/>
                  </xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]">
                          <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]/@ind1"/>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:choose>
                            <xsl:when test="contains(local-name(),'Family')">
                              <xsl:text>3</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:text>1</xsl:text>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='110'">
                          <xsl:choose>
                            <xsl:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                              <xsl:text>1</xsl:text>
                            </xsl:when>
                          </xsl:choose>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>2</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]">
                      <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]/marc:subfield[contains($vAuthSubfields,@code)]">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code"/>
                          </xsl:attribute>
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:variable name="vvMainEntryTag-a">
                        <xsl:choose>
                          <xsl:when test="$vMainEntryTag='100'">
                            <xsl:choose>
                              <xsl:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                                <xsl:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="madsrdf:authoritativeLabel">
                                <xsl:for-each select="madsrdf:authoritativeLabel">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:for-each select="rdfs:label">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:choose>
                              <xsl:when test="madsrdf:elementList">
                                <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="madsrdf:authoritativeLabel">
                                <xsl:for-each select="madsrdf:authoritativeLabel">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:for-each select="rdfs:label">
                                  <xsl:choose>
                                    <xsl:when test="position() = 1">
                                      <xsl:call-template name="tChopPunct">
                                        <xsl:with-param name="pString" select="."/>
                                      </xsl:call-template>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvMainEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$vvMainEntryTag-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='110'">
                          <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='111'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vMainEntryTag='100'">
                          <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $q.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="$vMainEntryTag='111'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="@rdf:about[                                     not(contains(.,'example.org')) and                                      not(contains(.,'REPLACE')) and                                      not(contains(., '/agents/'))                 ]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[           contains(., '/agents/')           ]">
                    <marc:subfield code="1">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vMainEntryTag='100' or $vMainEntryTag='110'">
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="e">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:choose>
                    <xsl:when test="$vMainEntryTag='111'">
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="j">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xsl:choose>
                        <xsl:when test="madsrdf:code">
                          <xsl:for-each select="madsrdf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="bf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/*/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xsl:variable name="vvMainEntryTag-2">
                        <xsl:choose>
                          <xsl:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:when test="$vSourceUri != ''">
                            <xsl:choose>
                              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode">
                                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="$vSourceUri"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvMainEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xsl:value-of select="$vvMainEntryTag-2"/>
                        </marc:subfield>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (vMainEntryTag).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title and not(../../bf:contribution/bflc:PrimaryContribution) and not(../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title and not(../../bf:contribution/bflc:PrimaryContribution) and not(../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="bf:mainTitle/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">130</xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:variable name="v130-a">
                    <xsl:choose>
                      <xsl:when test="bf:title/bf:Title/rdfs:label">
                        <xsl:for-each select="bf:title/bf:Title/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 130 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:title/bf:Title/bf:mainTitle">
                        <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 130 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v130-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v130-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (130).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title and not(../../bf:contribution/bflc:PrimaryContribution) and not(../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]">
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="bf:mainTitle/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">130</xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:variable name="v130-a">
                    <xsl:choose>
                      <xsl:when test="bf:title/bf:Title/rdfs:label">
                        <xsl:for-each select="bf:title/bf:Title/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 130 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:title/bf:Title/bf:mainTitle">
                        <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 130 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v130-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v130-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (130).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates select="bf:Instance/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']] |                     bf:Work/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']]" mode="generate-210">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:title/*[local-name() = 'KeyTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/KeyTitle']]" mode="generate-222">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/bflc:PrimaryContribution or ../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/bflc:PrimaryContribution or ../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="bf:mainTitle/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">240</xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:text>1</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bf:title/bf:Title/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:variable name="v240-a">
                    <xsl:choose>
                      <xsl:when test="bf:title/bf:Title/rdfs:label">
                        <xsl:for-each select="bf:title/bf:Title/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 240 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:title/bf:Title/bf:mainTitle">
                        <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 240 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v240-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v240-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (240).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/bflc:PrimaryContribution or ../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]">
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="bf:mainTitle/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">240</xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:text>1</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bf:title/bf:Title/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:variable name="v240-a">
                    <xsl:choose>
                      <xsl:when test="bf:title/bf:Title/rdfs:label">
                        <xsl:for-each select="bf:title/bf:Title/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 240 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:title/bf:Title/bf:mainTitle">
                        <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 240 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v240-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v240-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (240).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates select="bf:Instance/bf:title/*[(local-name() = 'VariantTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']) and bf:variantType = 'translated']" mode="generate-242">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ][not(bf:mainTitle/@xml:lang) or contains(translate(bf:mainTitle/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="bf:mainTitle/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">243</xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:text>1</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="bf:mainTitle">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="a">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 243 $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (243).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ]">
            <xsl:choose>
              <xsl:when test="position()=1">
                <xsl:variable name="vXmlLang">
                  <xsl:value-of select="bf:mainTitle/@xml:lang"/>
                </xsl:variable>
                <marc:datafield>
                  <xsl:attribute name="tag">243</xsl:attribute>
                  <xsl:if test="$vXmlLang != ''">
                    <xsl:attribute name="xml:lang">
                      <xsl:value-of select="$vXmlLang"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="ind1">
                    <xsl:text>1</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="bf:mainTitle">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="a">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 243 $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (243).</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates select="bf:Instance/bf:title/bf:Title[not(rdf:type)]" mode="generate-245">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Instance/bf:title/bf:Title[not(rdf:type)]">
        <xsl:variable name="v880Script">
          <xsl:variable name="vlang">
            <xsl:value-of select="translate(substring-after(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]/@xml:lang,'-'),$upper,$lower)"/>
          </xsl:variable>
          <xsl:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code"/>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="position()=1 and (count(bf:mainTitle)=2 and bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))] and bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))])">
            <marc:datafield>
              <xsl:attribute name="tag">880</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="/rdf:RDF/bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]">
                      <xsl:text>1</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>0</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))] and                           (string-length(bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]) &lt; string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]))">
                      <xsl:value-of select="string-length(bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]) - string-length(bflc:titleSortKey[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))])"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>0</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:variable name="v880-6">
                <xsl:choose>
                  <xsl:when test="$v880Script != ''">
                    <xsl:value-of select="concat('245-01/',$v880Script)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>245-01</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v880-6 != ''">
                <marc:subfield code="6">
                  <xsl:value-of select="$v880-6"/>
                </marc:subfield>
              </xsl:if>
              <xsl:for-each select="bf:mainTitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:subtitle[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="b">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $b.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="c">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $c.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:partNumber[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                <marc:subfield code="n">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:partName[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                <marc:subfield code="p">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="//bf:title/*[(                       local-name()='VariantTitle' or                       local-name()='ParallelTitle' or                       local-name()='TranscribedTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']                     ) and                     not(bf:variantType = 'translated') and                     not(bf:variantType = 'former')]" mode="generate-246">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="//bf:title/*[(                       local-name()='VariantTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']                     ) and                     bf:variantType = 'former']" mode="generate-247">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Instance/bf:editionStatement">
        <xsl:variable name="v880Script">
          <xsl:choose>
            <xsl:when test="@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xsl:variable name="vlang">
                <xsl:value-of select="translate(substring-after(@xml:lang,'-'),$upper,$lower)"/>
              </xsl:variable>
              <xsl:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$v880Script != ''">
            <marc:datafield>
              <xsl:attribute name="tag">880</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:variable name="v880-6">
                <xsl:value-of select="concat('250-00/',$v880Script)"/>
              </xsl:variable>
              <xsl:if test="$v880-6 != ''">
                <marc:subfield code="6">
                  <xsl:value-of select="$v880-6"/>
                </marc:subfield>
              </xsl:if>
              <marc:subfield code="a">
                <xsl:value-of select="."/>
              </marc:subfield>
            </marc:datafield>
          </xsl:when>
          <xsl:otherwise>
            <marc:datafield>
              <xsl:attribute name="tag">250</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <marc:subfield code="a">
                <xsl:value-of select="."/>
              </marc:subfield>
            </marc:datafield>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="bf:Work/bf:musicFormat/bf:MusicFormat" mode="generate-254">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:scale[not(bf:Scale)]" mode="generate-255">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Work/bf:scale/bf:Scale/rdfs:label">
        <xsl:choose>
          <xsl:when test="translate(.,$upper,$lower) != 'linear scale'">
            <marc:datafield>
              <xsl:attribute name="tag">255</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <marc:subfield code="a">
                <xsl:value-of select="."/>
              </marc:subfield>
            </marc:datafield>
          </xsl:when>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="bf:Work/bf:scale/bf:Scale/bf:note/bf:Note/rdfs:label" mode="generate-255">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:cartographicAttributes/bf:Cartographic[bf:projection or                     bf:coordinates or                     bf:ascensionAndDeclination or                     bf:equinox or                     bf:outerGRing or                     bf:exclusionGRing]" mode="generate-255">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:originPlace/bf:Place" mode="generate-257">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bflc:projectedProvisionDate" mode="generate-263">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Instance/bf:provisionActivity/*[                     (local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production'] or                     local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution'] or                     local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture'] or                     local-name()='Publication' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Publication']) and                     (                       (bflc:simplePlace or bflc:simpleAgent or bflc:simpleDate) or                        (bf:place/bf:*/rdfs:label or bf:agent/bf:*/rdfs:label or bf:date[not(@rdf:datatype)])                     )]">
        <xsl:variable name="v880Script">
          <xsl:choose>
            <xsl:when test="bflc:simplePlace/@xml:lang and not(contains(translate(bflc:simplePlace/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xsl:variable name="vlang">
                <xsl:value-of select="translate(substring-after(bflc:simplePlace/@xml:lang,'-'),$upper,$lower)"/>
              </xsl:variable>
              <xsl:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code"/>
            </xsl:when>
            <xsl:when test="bf:place/*/rdfs:label/@xml:lang and not(contains(translate(bf:place/*/rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xsl:variable name="vlang">
                <xsl:value-of select="translate(substring-after(bf:place/*/rdfs:label/@xml:lang,'-'),$upper,$lower)"/>
              </xsl:variable>
              <xsl:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="v880Occurence">
          <xsl:value-of select="10+position()"/>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$v880Occurence &lt; 21">
            <marc:datafield>
              <xsl:attribute name="tag">264</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/current'">
                      <xsl:text>3</xsl:text>
                    </xsl:when>
                    <xsl:when test="bf:status/@rdf:resource = 'http://id.loc.gov/vocabulary/mstatus/current'">
                      <xsl:text>3</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                    <xsl:when test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                    <xsl:when test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">
                      <xsl:text>3</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>1</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="$v880Script != ''">
                  <xsl:variable name="v264-6">
                    <xsl:value-of select="concat('880-',$v880Occurence)"/>
                  </xsl:variable>
                  <xsl:if test="$v264-6 != ''">
                    <marc:subfield code="6">
                      <xsl:value-of select="$v264-6"/>
                    </marc:subfield>
                  </xsl:if>
                </xsl:when>
              </xsl:choose>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:variable name="v264-a">
                <xsl:choose>
                  <xsl:when test="bflc:simplePlace[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <xsl:for-each select="bflc:simplePlace[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:value-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $a.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="bf:place/*[                       (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and                       rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]                      ]">
                    <xsl:for-each select="bf:place/bf:*/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:value-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $a.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="bf:place/*[                       (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and                       madsrdf:authoritativeLabel[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]                      ]">
                    <xsl:for-each select="bf:place/bf:*/madsrdf:authoritativeLabel[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:value-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $a.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v264-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$v264-a"/>
                </marc:subfield>
              </xsl:if>
              <xsl:variable name="v264-b">
                <xsl:choose>
                  <xsl:when test="bflc:simpleAgent[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <xsl:for-each select="bflc:simpleAgent[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:value-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $b.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="bf:agent/bf:Agent/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <xsl:for-each select="bf:agent/bf:Agent/rdfs:label[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:value-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $b.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v264-b != ''">
                <marc:subfield code="b">
                  <xsl:value-of select="$v264-b"/>
                </marc:subfield>
              </xsl:if>
              <xsl:variable name="v264-c">
                <xsl:choose>
                  <xsl:when test="bflc:simpleDate[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <xsl:for-each select="bflc:simpleDate[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:value-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $c.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="bf:date[not(@rdf:datatype) and not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                    <xsl:for-each select="bf:date[not(@rdf:datatype) and not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:value-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 264 $c.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v264-c != ''">
                <marc:subfield code="c">
                  <xsl:value-of select="$v264-c"/>
                </marc:subfield>
              </xsl:if>
            </marc:datafield>
            <xsl:choose>
              <xsl:when test="$v880Script != ''">
                <marc:datafield>
                  <xsl:attribute name="tag">880</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/current'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="bf:status/@rdf:resource = 'http://id.loc.gov/vocabulary/mstatus/current'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text> </xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="local-name()='Production' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Production']">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="local-name()='Distribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Distribution']">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="local-name()='Manufacture' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Manufacture']">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>1</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:variable name="v880-6">
                    <xsl:value-of select="concat('264-',$v880Occurence,'/',$v880Script)"/>
                  </xsl:variable>
                  <xsl:if test="$v880-6 != ''">
                    <marc:subfield code="6">
                      <xsl:value-of select="$v880-6"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:variable name="v880-a">
                    <xsl:choose>
                      <xsl:when test="bflc:simplePlace[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <xsl:for-each select="bflc:simplePlace[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:value-of select="."/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:place/*[                               (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and                               rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]                              ]">
                        <xsl:for-each select="bf:place/bf:*/rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:value-of select="."/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:place/*[                               (local-name()='Place' or local-name()='Geographic' or local-name()='Authority') and                               madsrdf:authoritativeLabel[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]                              ]">
                        <xsl:for-each select="bf:place/bf:*/madsrdf:authoritativeLabel[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:value-of select="."/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v880-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v880-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:variable name="v880-b">
                    <xsl:choose>
                      <xsl:when test="bflc:simpleAgent[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <xsl:for-each select="bflc:simpleAgent[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:value-of select="."/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $b.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:agent/bf:Agent/rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <xsl:for-each select="bf:agent/bf:Agent/rdfs:label[@xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:value-of select="."/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $b.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v880-b != ''">
                    <marc:subfield code="b">
                      <xsl:value-of select="$v880-b"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:variable name="v880-c">
                    <xsl:choose>
                      <xsl:when test="bflc:simpleDate[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <xsl:for-each select="bflc:simpleDate[@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:value-of select="."/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $c.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="bf:date[not(@rdf:datatype) and @xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                        <xsl:for-each select="bf:date[not(@rdf:datatype) and @xml:lang or not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:value-of select="."/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 880 $c.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v880-c != ''">
                    <marc:subfield code="c">
                      <xsl:value-of select="$v880-c"/>
                    </marc:subfield>
                  </xsl:if>
                </marc:datafield>
              </xsl:when>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Maximum number of 264 fields reached (10).</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="bf:Instance/bf:copyrightDate" mode="generate-264">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:extent/bf:Extent" mode="generate-300">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Instance/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']">
          <marc:datafield>
            <xsl:attribute name="tag">306</xsl:attribute>
            <xsl:attribute name="ind1">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:attribute name="ind2">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:for-each select="bf:Instance/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']">
              <marc:subfield code="a">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="."/>
                </xsl:call-template>
              </marc:subfield>
            </xsl:for-each>
          </marc:datafield>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Instance/bf:frequency/bf:Frequency" mode="generate-vFreqTag">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:issuance" mode="generate-334">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:content/*[local-name()='Content' or                                                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Content'] or                                                  local-name()='Authority' or                                                  rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-336">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:media/*[local-name()='Media' or                                                    rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Media'] or                                                    local-name()='Authority' or                                                    rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-337">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:carrier/*[local-name()='Carrier' or                                                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Carrier'] or                                                      local-name()='Authority' or                                                      rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-338">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:baseMaterial/bf:BaseMaterial |                     bf:Instance/bf:appliedMaterial/bf:AppliedMaterial |                     bf:Instance/bf:productionMethod/bf:ProductionMethod |                     bf:Instance/bf:mount/bf:Mount |                     bf:Instance/bf:reductionRatio/bf:ReductionRatio |                     bf:Work/bf:colorContent/bf:ColorContent |                     bf:Instance/bf:generation/bf:Generation |                     bf:Instance/bf:layout/bf:Layout |                     bf:Instance/bf:bookFormat/bf:BookFormat |                     bf:Instance/bf:fontSize/bf:FontSize |                     bf:Instance/bf:polarity/bf:Polarity |                     bf:Instance/bf:binding/bf:Binding |                     bf:Work/bf:illustrativeContent/bf:Illustration" mode="generate-340">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:soundCharacteristic/bf:RecordingMethod |                     bf:Instance/bf:soundCharacteristic/bf:RecordingMedium |                     bf:Instance/bf:soundCharacteristic/bf:PlayingSpeed |                     bf:Instance/bf:soundCharacteristic/bf:GrooveCharacteristic |                     bf:Instance/bf:soundCharacteristic/bf:TrackConfig |                     bf:Instance/bf:soundCharacteristic/bf:TapeConfig |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackChannels |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackCharacteristic |                     bf:Instance/bf:soundCharacteristic/bflc:CaptureStorage |                     bf:Work/bf:soundContent/bf:SoundContent" mode="generate-344">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:projectionCharacteristic/bf:PresentationFormat |                     bf:Instance/bf:projectionCharacteristic/bf:ProjectionSpeed" mode="generate-345">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:aspectRatio/bf:AspectRatio[rdfs:label|rdf:value]" mode="generate-345">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:videoCharacteristic/bf:VideoFormat |                     bf:Instance/bf:videoCharacteristic/bf:BroadcastStandard" mode="generate-346">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:digitalCharacteristic/bf:FileType |                     bf:Instance/bf:digitalCharacteristic/bf:EncodingFormat |                     bf:Instance/bf:digitalCharacteristic/bf:FileSize |                     bf:Instance/bf:digitalCharacteristic/bf:Resolution |                     bf:Instance/bf:digitalCharacteristic/bf:RegionalEncoding |                     bf:Instance/bf:digitalCharacteristic/bf:EncodedBitrate" mode="generate-347">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:musicFormat/bf:MusicFormat" mode="generate-348">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:collectionArrangement/bf:CollectionArrangement" mode="generate-351">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:digitalCharacteristic/bf:CartographicDataType |                     bf:Instance/bf:digitalCharacteristic/bf:CartographicObjectType" mode="generate-352">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[@rdf:about]" mode="generate-353">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:firstIssue" mode="generate-362">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:originPlace/bf:Place" mode="generate-370">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:musicMedium/bf:MusicMedium[bflc:readMarc382]" mode="generate-382">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:musicSerialNumber or                 bf:Work/bf:musicOpusNumber or                 bf:Work/bf:musicThematicNumber">
          <marc:datafield>
            <xsl:attribute name="tag">383</xsl:attribute>
            <xsl:attribute name="ind1">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:attribute name="ind2">
              <xsl:text> </xsl:text>
            </xsl:attribute>
            <xsl:for-each select="bf:Work/bf:musicSerialNumber |                        bf:Work/bf:musicOpusNumber |                        bf:Work/bf:musicThematicNumber">
              <xsl:choose>
                <xsl:when test="local-name() = 'musicSerialNumber'">
                  <marc:subfield code="a">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:when>
                <xsl:when test="local-name() = 'musicOpusNumber'">
                  <marc:subfield code="b">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:when>
                <xsl:when test="local-name() = 'musicThematicNumber'">
                  <marc:subfield code="c">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:when>
              </xsl:choose>
            </xsl:for-each>
          </marc:datafield>
        </xsl:when>
      </xsl:choose>
      <xsl:apply-templates select="bf:Work/bf:musicKey" mode="generate-384">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Work/bf:intendedAudience">
        <xsl:variable name="vSourceUri">
          <xsl:choose>
            <xsl:when test="*/bf:source/@rdf:resource">
              <xsl:value-of select="*/bf:source/@rdf:resource"/>
            </xsl:when>
            <xsl:when test="*/bf:source/bf:Source/@rdf:about">
              <xsl:value-of select="*/bf:source/bf:Source/@rdf:about"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="@rdf:resource or bf:IntendedAudience[@rdf:about or bflc:demographicGroup or bf:source]">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="bf:IntendedAudience/rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">385</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bf:IntendedAudience/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 385 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:IntendedAudience/bflc:demographicGroup/bflc:DemographicGroup[not(@rdf:about)]/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="m">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 385 $m.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:IntendedAudience/bflc:demographicGroup[@rdf:resource or */@rdf:about]">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="n">
                      <xsl:variable name="vDGUri">
                        <xsl:choose>
                          <xsl:when test="@rdf:resource">
                            <xsl:value-of select="@rdf:resource"/>
                          </xsl:when>
                          <xsl:when test="*/@rdf:about">
                            <xsl:value-of select="*/@rdf:resource"/>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="*/rdfs:label">
                          <xsl:value-of select="*/rdfs:label"/>
                        </xsl:when>
                        <xsl:when test="contains($vDGUri,'id.loc.gov')">
                          <xsl:call-template name="tUriCode">
                            <xsl:with-param name="pUri" select="$vDGUri"/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="."/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 385 $n.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:IntendedAudience/rdfs:label">
                <marc:subfield code="a">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:choose>
                <xsl:when test="*/bf:source/bf:Source/*[local-name()='code']">
                  <xsl:variable name="v385-2">
                    <xsl:value-of select="*/bf:source/bf:Source/*[local-name()='code'][1]"/>
                  </xsl:variable>
                  <xsl:if test="$v385-2 != ''">
                    <marc:subfield code="2">
                      <xsl:value-of select="$v385-2"/>
                    </marc:subfield>
                  </xsl:if>
                </xsl:when>
                <xsl:when test="$vSourceUri != ''">
                  <xsl:variable name="v385-2">
                    <xsl:choose>
                      <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                        <xsl:call-template name="tUriCode">
                          <xsl:with-param name="pUri" select="$vSourceUri"/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$vSourceUri"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v385-2 != ''">
                    <marc:subfield code="2">
                      <xsl:value-of select="$v385-2"/>
                    </marc:subfield>
                  </xsl:if>
                </xsl:when>
              </xsl:choose>
              <xsl:for-each select="@rdf:resource|bf:IntendedAudience/@rdf:about">
                <marc:subfield code="0">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="bf:IntendedAudience/rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">521</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'reading grade level'">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                    <xsl:when test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'interest age level'">
                      <xsl:text>1</xsl:text>
                    </xsl:when>
                    <xsl:when test="bf:IntendedAudience/bf:note/bf:Note/rdfs:label = 'interest grade level'">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bf:IntendedAudience/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 521 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:IntendedAudience/rdfs:label">
                <marc:subfield code="a">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="bf:Work/bflc:creatorCharacteristic" mode="generate-386">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Work/bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:relatedTo/bf:*[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']] |         //bf:Item/bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:relatedTo/bf:*[bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t'] or bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t']]">
        <xsl:variable name="vScriptSubtag">
          <xsl:call-template name="tScriptCode">
            <xsl:with-param name="pXmlLang" select="rdfs:label/@xml:lang"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vScriptSubtag='' or translate($vScriptSubtag,$upper,$lower)=translate($pCatScript,$upper,$lower)">
            <marc:datafield>
              <xsl:attribute name="tag">490</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled'">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>1</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 490 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:variable name="vMainTitle">
                <xsl:choose>
                  <xsl:when test="bf:title/bf:Title/bf:mainTitle">
                    <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xsl:value-of select="."/>
                    </xsl:for-each>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="vParallelTitle">
                <xsl:choose>
                  <xsl:when test="bf:title/bf:ParallelTitle/bf:mainTitle">
                    <xsl:for-each select="bf:title/bf:ParallelTitle/bf:mainTitle">
                      <xsl:value-of select="."/>
                    </xsl:for-each>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="v490-a">
                <xsl:choose>
                  <xsl:when test="$vMainTitle != '' and $vParallelTitle != ''">
                    <xsl:value-of select="concat($vMainTitle, ' =')"/>
                  </xsl:when>
                  <xsl:when test="$vMainTitle != ''">
                    <xsl:value-of select="$vMainTitle"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v490-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$v490-a"/>
                </marc:subfield>
              </xsl:if>
              <xsl:variable name="v490-a">
                <xsl:choose>
                  <xsl:when test="$vParallelTitle != ''">
                    <xsl:value-of select="$vParallelTitle"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v490-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$v490-a"/>
                </marc:subfield>
              </xsl:if>
              <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <marc:subfield code="x">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/*[(local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn') and (bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/incorrect' or bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/incorrect')]/rdf:value">
                <marc:subfield code="y">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/*[(local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn') and (bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/caninv' or bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/caninv')]/rdf:value">
                <marc:subfield code="z">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="../../bf:seriesEnumeration">
                <marc:subfield code="v">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:Instance/bf:seriesStatement">
        <xsl:variable name="v880Script">
          <xsl:choose>
            <xsl:when test="@xml:lang and not(contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower)))">
              <xsl:variable name="vlang">
                <xsl:value-of select="translate(substring-after(@xml:lang,'-'),$upper,$lower)"/>
              </xsl:variable>
              <xsl:value-of select="exsl:node-set($df880script)/*[lang=$vlang]/code"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$v880Script != ''">
            <marc:datafield>
              <xsl:attribute name="tag">880</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text>0</xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:variable name="v880-6">
                <xsl:value-of select="concat('490-00/',$v880Script)"/>
              </xsl:variable>
              <xsl:if test="$v880-6 != ''">
                <marc:subfield code="6">
                  <xsl:value-of select="$v880-6"/>
                </marc:subfield>
              </xsl:if>
              <marc:subfield code="a">
                <xsl:value-of select="."/>
              </marc:subfield>
            </marc:datafield>
          </xsl:when>
          <xsl:otherwise>
            <marc:datafield>
              <xsl:attribute name="tag">490</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text>0</xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <marc:subfield code="a">
                <xsl:value-of select="."/>
              </marc:subfield>
            </marc:datafield>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:Instance/bf:note/bf:Note|bf:Work/bf:note/bf:Note|//bf:Item/bf:note/bf:Note">
        <xsl:choose>
          <xsl:when test="local-name(../..)='Instance' and                   (rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/computer' or translate(bf:noteType,$upper,$lower)='computer file characteristics')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">256</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 256 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='numbering' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/number')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">362</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text>1</xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 362 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='with' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/with')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">501</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 501 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 501 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='report type' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/report')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">513</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 513 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='issuance information' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/issuance')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">515</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 515 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='type of computer data' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/computer')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">516</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 516 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='additional physical form' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/addphys')">
            <marc:datafield>
              <xsl:attribute name="tag">530</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 530 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 530 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/*[local-name()='StockNumber' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StockNumber']/rdf:value">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="d">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 530 $d.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='reproduction version' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/repro')">
            <marc:datafield>
              <xsl:attribute name="tag">533</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 533 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 533 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/*/*[local-name()='code']">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 533 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='original version' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/orig')">
            <marc:datafield>
              <xsl:attribute name="tag">534</xsl:attribute>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <marc:subfield code="3">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 534 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <marc:subfield code="x">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/*[local-name()='Isbn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']/rdf:value">
                <marc:subfield code="z">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='funding information' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/fundinfo')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">536</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="starts-with(.,'Contract:')">
                    <xsl:variable name="v536-b">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="substring-after(.,'Contract:')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:if test="$v536-b != ''">
                      <marc:subfield code="b">
                        <xsl:value-of select="$v536-b"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="starts-with(.,'Grant:')">
                    <xsl:variable name="v536-c">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="substring-after(.,'Grant:')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:if test="$v536-c != ''">
                      <marc:subfield code="c">
                        <xsl:value-of select="$v536-c"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="starts-with(.,'Program element:')">
                    <xsl:variable name="v536-e">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="substring-after(.,'Program element:')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:if test="$v536-e != ''">
                      <marc:subfield code="e">
                        <xsl:value-of select="$v536-e"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="starts-with(.,'Project:')">
                    <xsl:variable name="v536-f">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="substring-after(.,'Project:')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:if test="$v536-f != ''">
                      <marc:subfield code="f">
                        <xsl:value-of select="$v536-f"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="starts-with(.,'Task:')">
                    <xsl:variable name="v536-g">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="substring-after(.,'Task:')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:if test="$v536-g != ''">
                      <marc:subfield code="g">
                        <xsl:value-of select="$v536-g"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="starts-with(.,'Work unit:')">
                    <xsl:variable name="v536-h">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="substring-after(.,'Work unit:')"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:if test="$v536-h != ''">
                      <marc:subfield code="h">
                        <xsl:value-of select="$v536-h"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:otherwise>
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and                   (translate(bf:noteType,$upper,$lower)='biographical data' or translate(bf:noteType,$upper,$lower)='administrative history' or                   rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/biogdata' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/adminhist')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">545</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="translate(bf:noteType,$upper,$lower)='biographical data' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/biogdata'">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                    <xsl:when test="translate(bf:noteType,$upper,$lower)='administrative history' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/adminhist'">
                      <xsl:text>1</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 545 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='issuing body' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/issuing')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">550</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 550 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and                   (translate(bf:noteType,$upper,$lower)='index' or translate(bf:noteType,$upper,$lower)='finding aid' or                   rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/index' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/finding')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">555</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="translate(bf:noteType,$upper,$lower)='index' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/index'">
                      <xsl:text> </xsl:text>
                    </xsl:when>
                    <xsl:when test="translate(bf:noteType,$upper,$lower)='finding aid' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/finding'">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>8</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 555 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Item' and (translate(bf:noteType,$upper,$lower)='binding' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/binding')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">563</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 563 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <marc:subfield code="5">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Instance' and (translate(bf:noteType,$upper,$lower)='related material' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/related')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">581</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text>8</xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 581 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/*[local-name()='Isbn' or rdf:type/rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']/rdf:value">
                <marc:subfield code="z">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="local-name(../..)='Item' and (translate(bf:noteType,$upper,$lower)='action' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/action')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">583</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 583 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:variable name="v583-a">
                <xsl:variable name="vLabel">
                  <xsl:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
                    <xsl:value-of select="concat(.,' ')"/>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="$vLabel"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:if test="$v583-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$v583-a"/>
                </marc:subfield>
              </xsl:if>
              <xsl:for-each select="bf:date">
                <marc:subfield code="c">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:agent/*/rdfs:label">
                <marc:subfield code="k">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:status/*/rdfs:label">
                <marc:subfield code="l">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:note/bf:Note/rdfs:label">
                <marc:subfield code="z">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:source/bf:Source/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="2">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 583 $2.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <marc:subfield code="5">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='exhibition' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/exhibit')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">585</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 585 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 585 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 585 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and (translate(bf:noteType,$upper,$lower)='description source' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/descsource')">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">588</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="starts-with(rdfs:label,'Source of description:') or starts-with(rdfs:label,'Description based on:')">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                    <xsl:when test="starts-with(rdfs:label,'Latest issue consulted:')">
                      <xsl:text>1</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:choose>
                        <xsl:when test="starts-with(.,'Source of description:')">
                          <xsl:value-of select="normalize-space(substring-after(.,'Source of description:'))"/>
                        </xsl:when>
                        <xsl:when test="starts-with(.,'Latest issue consulted:')">
                          <xsl:value-of select="normalize-space(substring-after(.,'Latest issue consulted:'))"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="."/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 588 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 588 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:when test="(local-name(../..)='Instance' or local-name(../..)='Item') and                    (                     (translate(bf:noteType,$upper,$lower)='physical details' or translate(bf:noteType,$upper,$lower)='accompanying material') or                      (rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/physical' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/accmat')                   )"/>
          <xsl:otherwise>
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">500</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 500 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:variable name="v500-a">
                <xsl:variable name="vNoteText">
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = last()">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="concat(.,' ')"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="$vNoteText"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:if test="$v500-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$v500-a"/>
                </marc:subfield>
              </xsl:if>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 500 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="bf:Work/bf:dissertation/bf:Dissertation" mode="generate-502">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label and not(@rdf:about)]|bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label and not(@rdf:about)]" mode="generate-504">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:tableOfContents/bf:TableOfContents[rdfs:label]" mode="generate-505">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Instance/bf:usageAndAccessPolicy/* | //bf:Item/bf:usageAndAccessPolicy/*">
        <xsl:choose>
          <xsl:when test="local-name()='UsePolicy' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/UsePolicy'">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">540</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 540 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdfs:label[not(@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI')]">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 540 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:note/bf:Note/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="d">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 540 $d.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:source/bf:Source/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="2">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 540 $2.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 540 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">506</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 506 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 506 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
                <marc:subfield code="u">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:source/bf:Source/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="2">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 506 $2.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 506 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="bf:Instance/bf:credits[not(starts-with(text(),'Cast:'))]" mode="generate-508">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bflc:indexedIn/bf:Work |                     bf:Work/bf:references/bf:Work" mode="generate-510">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:credits[starts-with(text(),'Cast:')]" mode="generate-511">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:capture/bf:Capture[not(bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf']) and not(bf:place/@rdf:resource)]" mode="generate-518">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:summary/bf:Summary" mode="generate-520">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:geographicCoverage/*[not(bf:source/@rdf:resource='http://id.loc.gov/authorities/classification/G' or bf:source/bf:Source/@rdf:about='http://id.loc.gov/authorities/classification/G') and rdfs:label]" mode="generate-522">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:preferredCitation" mode="generate-524">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:contentAccessibility/bf:ContentAccessibility/rdfs:label" mode="generate-532">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Instance/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))] |                     //bf:Item/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))]" mode="generate-538">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="//bf:Item/bf:immediateAcquisition/bf:ImmediateAcquisition" mode="generate-541">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:language/bf:Language[bf:note/bf:Note/rdfs:label]" mode="generate-546">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:notation/bf:Notation" mode="generate-546">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="//bf:Item/bf:custodialHistory" mode="generate-561">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:awards" mode="generate-586">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Work/bf:subject[not(*/*[local-name()='code'])]">
        <xsl:variable name="vScriptSubtag">
          <xsl:call-template name="tScriptCode">
            <xsl:with-param name="pXmlLang" select="*/rdfs:label/@xml:lang"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vScriptSubtag='' or translate($vScriptSubtag,$upper,$lower)=translate($pCatScript,$upper,$lower)">
            <xsl:choose>
              <xsl:when test="*[(local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or                       local-name(madsrdf:componentList/*[1])='PersonalName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName' or                       local-name(madsrdf:componentList/*[1])='FamilyName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName' or                       local-name(madsrdf:componentList/*[1])='Person' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person' or                       local-name(madsrdf:componentList/*[1])='Family' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family' or                       bf:contribution/*/bf:agent/*[local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']] or                       madsrdf:componentList/*[1]/bf:contribution/*/bf:agent/*[local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']]) and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xsl:attribute name="tag">600</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or                               local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                               local-name(madsrdf:componentList/*[1])='Family' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family' or                               local-name(madsrdf:componentList/*[1])='FamilyName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName' or                               bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']] or                               bf:Hub/bf:contribution/*/bf:agent/*[local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']] or                               madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']] or                               madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*[local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']]]">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>1</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                          <xsl:text>7</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>4</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*[local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']] |                              */madsrdf:componentList/*[1] |                              bf:Hub/bf:contribution/*/bf:agent/* |                              */madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*">
                    <xsl:variable name="vNameAuth">
                      <xsl:choose>
                        <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                          <xsl:call-template name="tGetMARCAuth">
                            <xsl:with-param name="pUri" select="@rdf:about"/>
                          </xsl:call-template>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']">
                        <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']/marc:subfield[contains('abcdgjq',@code)]">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code"/>
                            </xsl:attribute>
                            <xsl:value-of select="."/>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:variable name="v600-a">
                          <xsl:choose>
                            <xsl:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                              <xsl:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v600-a != ''">
                          <marc:subfield code="a">
                            <xsl:value-of select="$v600-a"/>
                          </marc:subfield>
                        </xsl:if>
                        <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                        <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <marc:subfield code="d">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </marc:subfield>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $d.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                        <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <marc:subfield code="q">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </marc:subfield>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $q.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="e">
                        <xsl:choose>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xsl:choose>
                          <xsl:when test="madsrdf:code">
                            <xsl:for-each select="madsrdf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="bf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="bf:Hub">
                    <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="t">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $t.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:originDate">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="f">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $f.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                      <marc:subfield code="n">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                      <marc:subfield code="p">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:musicKey">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="r">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $r.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="*/madsrdf:componentList/*">
                    <xsl:choose>
                      <xsl:when test="position() &gt; 1">
                        <xsl:choose>
                          <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xsl:variable name="v600-v">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v600-v != ''">
                              <marc:subfield code="v">
                                <xsl:value-of select="$v600-v"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xsl:variable name="v600-y">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v600-y != ''">
                              <marc:subfield code="y">
                                <xsl:value-of select="$v600-y"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xsl:variable name="v600-z">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v600-z != ''">
                              <marc:subfield code="z">
                                <xsl:value-of select="$v600-z"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:variable name="v600-x">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 600 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v600-x != ''">
                              <marc:subfield code="x">
                                <xsl:value-of select="$v600-x"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                               bf:Source/bf:code != 'lcsh' and                               $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                               bf:Source/bf:code != 'lcshac' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                               bf:Source/bf:code != 'mesh' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                               bf:Source/bf:code != 'nal' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                               bf:Source/bf:code != 'cash' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                               bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v600-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v600-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v600-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[(local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction'] or                       local-name(madsrdf:componentList/*[1])='CorporateName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName' or                       local-name(madsrdf:componentList/*[1])='Organization' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization' or                       local-name(madsrdf:componentList/*[1])='Jurisdiction' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction' or                       bf:contribution/*/bf:agent/*[local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']] or                       madsrdf:componentList/*[1]/bf:contribution/*/bf:agent/*[local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]) and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xsl:attribute name="tag">610</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction'] or                               local-name(madsrdf:componentList/*[1])='Jurisdiction' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction' or                               bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']] or                               madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]]">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>2</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                          <xsl:text>7</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>4</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*[local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']] |                              */madsrdf:componentList/*[1] |                              bf:Hub/bf:contribution/*/bf:agent/* |                              */madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*">
                    <xsl:variable name="vNameAuth">
                      <xsl:choose>
                        <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                          <xsl:call-template name="tGetMARCAuth">
                            <xsl:with-param name="pUri" select="@rdf:about"/>
                          </xsl:call-template>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']">
                        <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']/marc:subfield[contains('abcdgn',@code)]">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code"/>
                            </xsl:attribute>
                            <xsl:value-of select="."/>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:variable name="v610-a">
                          <xsl:choose>
                            <xsl:when test="madsrdf:elementList">
                              <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v610-a != ''">
                          <marc:subfield code="a">
                            <xsl:value-of select="$v610-a"/>
                          </marc:subfield>
                        </xsl:if>
                        <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="b">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="e">
                        <xsl:choose>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xsl:choose>
                          <xsl:when test="madsrdf:code">
                            <xsl:for-each select="madsrdf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="bf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="bf:Hub">
                    <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="t">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $t.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:legalDate">
                      <marc:subfield code="d">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:originDate">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="f">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $f.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="l">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $l.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                      <marc:subfield code="n">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                      <marc:subfield code="p">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:musicKey">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="r">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $r.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="*/madsrdf:componentList/*">
                    <xsl:choose>
                      <xsl:when test="position() &gt; 1">
                        <xsl:choose>
                          <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xsl:variable name="v610-v">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v610-v != ''">
                              <marc:subfield code="v">
                                <xsl:value-of select="$v610-v"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xsl:variable name="v610-y">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v610-y != ''">
                              <marc:subfield code="y">
                                <xsl:value-of select="$v610-y"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xsl:variable name="v610-z">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v610-z != ''">
                              <marc:subfield code="z">
                                <xsl:value-of select="$v610-z"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:variable name="v610-x">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 610 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v610-x != ''">
                              <marc:subfield code="x">
                                <xsl:value-of select="$v610-x"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                               bf:Source/bf:code != 'lcsh' and                               $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                               bf:Source/bf:code != 'lcshac' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                               bf:Source/bf:code != 'mesh' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                               bf:Source/bf:code != 'nal' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                               bf:Source/bf:code != 'cash' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                               bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v610-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v610-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v610-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[(local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting'] or                       local-name(madsrdf:componentList/*[1])='ConferenceName' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName' or                       local-name(madsrdf:componentList/*[1])='Meeting' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting' or                       bf:contribution/*/bf:agent/*[local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']] or                       madsrdf:componentList/*[1]/bf:contribution/*/bf:agent/*[local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']]) and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xsl:attribute name="tag">611</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text>2</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                          <xsl:text>7</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>4</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*[local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']] |                              */madsrdf:componentList/*[1] |                              bf:Hub/bf:contribution/*/bf:agent/* |                              */madsrdf:componentList/*[1]/bf:Hub/bf:contribution/*/bf:agent/*">
                    <xsl:variable name="vNameAuth">
                      <xsl:choose>
                        <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                          <xsl:call-template name="tGetMARCAuth">
                            <xsl:with-param name="pUri" select="@rdf:about"/>
                          </xsl:call-template>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']">
                        <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']/marc:subfield[contains('acdegnq',@code)]">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code"/>
                            </xsl:attribute>
                            <xsl:value-of select="."/>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:variable name="v611-a">
                          <xsl:choose>
                            <xsl:when test="madsrdf:elementList">
                              <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v611-a != ''">
                          <marc:subfield code="a">
                            <xsl:value-of select="$v611-a"/>
                          </marc:subfield>
                        </xsl:if>
                        <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                        <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="q">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="j">
                        <xsl:choose>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $j.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $j.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xsl:choose>
                          <xsl:when test="madsrdf:code">
                            <xsl:for-each select="madsrdf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="bf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="bf:Hub">
                    <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="t">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $t.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:legalDate">
                      <marc:subfield code="d">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:originDate">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="f">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $f.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:language/*/rdfs:label|bf:language/*/madsrdf:authoritativeLabel">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="l">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $l.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                      <marc:subfield code="n">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                      <marc:subfield code="p">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:musicKey">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="r">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $r.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="*/madsrdf:componentList/*">
                    <xsl:choose>
                      <xsl:when test="position() &gt; 1">
                        <xsl:choose>
                          <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xsl:variable name="v611-v">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v611-v != ''">
                              <marc:subfield code="v">
                                <xsl:value-of select="$v611-v"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xsl:variable name="v611-y">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v611-y != ''">
                              <marc:subfield code="y">
                                <xsl:value-of select="$v611-y"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xsl:variable name="v611-z">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v611-z != ''">
                              <marc:subfield code="z">
                                <xsl:value-of select="$v611-z"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:variable name="v611-x">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 611 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v611-x != ''">
                              <marc:subfield code="x">
                                <xsl:value-of select="$v611-x"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                               bf:Source/bf:code != 'lcsh' and                               $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                               bf:Source/bf:code != 'lcshac' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                               bf:Source/bf:code != 'mesh' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                               bf:Source/bf:code != 'nal' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                               bf:Source/bf:code != 'cash' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                               bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v611-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v611-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v611-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[(local-name()='Hub' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub'] or                       local-name(madsrdf:componentList/*[1])='Hub' or                       madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub') and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xsl:attribute name="tag">630</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:for-each select="*/bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]|*/madsrdf:componentList/*[1]/bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:choose>
                              <xsl:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                                <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
                              </xsl:when>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                          <xsl:text>7</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>4</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*[local-name()='Work' or local-name()='Hub' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Work'] or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hub']] |                              */madsrdf:componentList/*[1]">
                    <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="a">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $a.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:legalDate">
                      <marc:subfield code="d">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:originDate">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="f">
                            <xsl:value-of select="."/>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $f.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                      <marc:subfield code="m">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title/bf:partNumber">
                      <marc:subfield code="n">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:title/bf:Title/bf:partName">
                      <marc:subfield code="p">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:choose>
                      <xsl:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                        <marc:subfield code="o">arranged</marc:subfield>
                      </xsl:when>
                    </xsl:choose>
                    <xsl:for-each select="bf:musicKey">
                      <marc:subfield code="r">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:version">
                      <marc:subfield code="s">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:source/bf:Source/bf:code">
                      <marc:subfield code="2">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/bflc:Relation/rdfs:label">
                      <marc:subfield code="e">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="*/madsrdf:componentList/*">
                    <xsl:choose>
                      <xsl:when test="position() &gt; 1">
                        <xsl:choose>
                          <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xsl:variable name="v630-v">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v630-v != ''">
                              <marc:subfield code="v">
                                <xsl:value-of select="$v630-v"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xsl:variable name="v630-y">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v630-y != ''">
                              <marc:subfield code="y">
                                <xsl:value-of select="$v630-y"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xsl:variable name="v630-z">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v630-z != ''">
                              <marc:subfield code="z">
                                <xsl:value-of select="$v630-z"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:variable name="v630-x">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 630 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v630-x != ''">
                              <marc:subfield code="x">
                                <xsl:value-of select="$v630-x"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                               bf:Source/bf:code != 'lcsh' and                               $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                               bf:Source/bf:code != 'lcshac' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                               bf:Source/bf:code != 'mesh' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                               bf:Source/bf:code != 'nal' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                               bf:Source/bf:code != 'cash' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                               bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v630-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v630-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v630-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[(local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal'] or                       local-name()='Temporal' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Temporal'] or                       local-name(madsrdf:componentList/*[1])='Temporal' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal' or                       local-name(madsrdf:componentList/*[1])='Temporal' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Temporal') and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xsl:attribute name="tag">648</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                          <xsl:text>7</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>4</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:choose>
                    <xsl:when test="*/madsrdf:componentList">
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v648-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v648-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v648-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/madsrdf:componentList/*">
                        <xsl:choose>
                          <xsl:when test="position() &gt; 1">
                            <xsl:choose>
                              <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xsl:variable name="v648-v">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v648-v != ''">
                                  <marc:subfield code="v">
                                    <xsl:value-of select="$v648-v"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xsl:variable name="v648-y">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v648-y != ''">
                                  <marc:subfield code="y">
                                    <xsl:value-of select="$v648-y"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xsl:variable name="v648-z">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v648-z != ''">
                                  <marc:subfield code="z">
                                    <xsl:value-of select="$v648-z"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:variable name="v648-x">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v648-x != ''">
                                  <marc:subfield code="x">
                                    <xsl:value-of select="$v648-x"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v648-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/rdfs:label[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 648 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v648-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v648-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                               bf:Source/bf:code != 'lcsh' and                               $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                               bf:Source/bf:code != 'lcshac' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                               bf:Source/bf:code != 'mesh' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                               bf:Source/bf:code != 'nal' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                               bf:Source/bf:code != 'cash' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                               bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v648-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v648-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v648-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[local-name()='HierarchicalGeographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic']]">
                <marc:datafield>
                  <xsl:attribute name="tag">662</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:for-each select="*/madsrdf:componentList/*">
                    <xsl:choose>
                      <xsl:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
                        <xsl:variable name="v662-a">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v662-a != ''">
                          <marc:subfield code="a">
                            <xsl:value-of select="$v662-a"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                      <xsl:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
                        <xsl:variable name="v662-b">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $b.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $b.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v662-b != ''">
                          <marc:subfield code="b">
                            <xsl:value-of select="$v662-b"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                      <xsl:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
                        <xsl:variable name="v662-c">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $c.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $c.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v662-c != ''">
                          <marc:subfield code="c">
                            <xsl:value-of select="$v662-c"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                      <xsl:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
                        <xsl:variable name="v662-d">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $d.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $d.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v662-d != ''">
                          <marc:subfield code="d">
                            <xsl:value-of select="$v662-d"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                      <xsl:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
                        <xsl:variable name="v662-f">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $f.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $f.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v662-f != ''">
                          <marc:subfield code="f">
                            <xsl:value-of select="$v662-f"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                      <xsl:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
                        <xsl:variable name="v662-g">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $g.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $g.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v662-g != ''">
                          <marc:subfield code="g">
                            <xsl:value-of select="$v662-g"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                      <xsl:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
                        <xsl:variable name="v662-h">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $h.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $h.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v662-h != ''">
                          <marc:subfield code="h">
                            <xsl:value-of select="$v662-h"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:role/bf:Role/rdfs:label">
                    <marc:subfield code="e">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:source | */madsrdf:componentList/*[1]/bf:source">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="2">
                          <xsl:variable name="vSourceUri662">
                            <xsl:choose>
                              <xsl:when test="@rdf:resource">
                                <xsl:value-of select="@rdf:resource"/>
                              </xsl:when>
                              <xsl:when test="*/@rdf:about">
                                <xsl:value-of select="*/@rdf:about"/>
                              </xsl:when>
                            </xsl:choose>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="*/*[local-name()='code']">
                              <xsl:value-of select="*/*[local-name()='code']"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri662 != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri662,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri662"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri662"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:when test="*/madsrdf:authoritativeLabel">
                              <xsl:value-of select="*/madsrdf:authoritativeLabel"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="*/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 662 $2.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[(local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic'] or                       local-name()='Place' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Place'] or                       local-name(madsrdf:componentList/*[1])='Geographic' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic' or                       local-name(madsrdf:componentList/*[1])='Place' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Place') and                       (madsrdf:componentList or madsrdf:authoritativeLabel)]">
                <marc:datafield>
                  <xsl:attribute name="tag">651</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                          <xsl:text>7</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>4</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:choose>
                    <xsl:when test="*/madsrdf:componentList">
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v651-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v651-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v651-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/madsrdf:componentList/*">
                        <xsl:choose>
                          <xsl:when test="position() &gt; 1">
                            <xsl:choose>
                              <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xsl:variable name="v651-v">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v651-v != ''">
                                  <marc:subfield code="v">
                                    <xsl:value-of select="$v651-v"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xsl:variable name="v651-y">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v651-y != ''">
                                  <marc:subfield code="y">
                                    <xsl:value-of select="$v651-y"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xsl:variable name="v651-z">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v651-z != ''">
                                  <marc:subfield code="z">
                                    <xsl:value-of select="$v651-z"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:variable name="v651-x">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v651-x != ''">
                                  <marc:subfield code="x">
                                    <xsl:value-of select="$v651-x"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v651-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/rdfs:label[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 651 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v651-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v651-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="*/bflc:relationship/bflc:Relationship/bflc:relation/bflc:Relation/rdfs:label">
                    <marc:subfield code="e">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                               bf:Source/bf:code != 'lcsh' and                               $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                               bf:Source/bf:code != 'lcshac' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                               bf:Source/bf:code != 'mesh' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                               bf:Source/bf:code != 'nal' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                               bf:Source/bf:code != 'cash' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                               bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v651-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v651-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v651-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[(local-name()='Occupation' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Occupation'] or                       local-name(madsrdf:componentList/*[1])='Occupation' or madsrdf:componentList/*[1]/rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#Occupation') and                       (madsrdf:componentList or madsrdf:authoritativeLabel) and                       bf:source]">
                <marc:datafield>
                  <xsl:attribute name="tag">656</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text>7</xsl:text>
                  </xsl:attribute>
                  <xsl:choose>
                    <xsl:when test="*/madsrdf:componentList">
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v656-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v656-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v656-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/madsrdf:componentList/*">
                        <xsl:choose>
                          <xsl:when test="position() &gt; 1">
                            <xsl:choose>
                              <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xsl:variable name="v656-v">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v656-v != ''">
                                  <marc:subfield code="v">
                                    <xsl:value-of select="$v656-v"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xsl:variable name="v656-y">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v656-y != ''">
                                  <marc:subfield code="y">
                                    <xsl:value-of select="$v656-y"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xsl:variable name="v656-z">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v656-z != ''">
                                  <marc:subfield code="z">
                                    <xsl:value-of select="$v656-z"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:variable name="v656-x">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v656-x != ''">
                                  <marc:subfield code="x">
                                    <xsl:value-of select="$v656-x"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v656-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/rdfs:label[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v656-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v656-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="*/bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="2">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 656 $2.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="*[madsrdf:componentList or madsrdf:authoritativeLabel]">
                <marc:datafield>
                  <xsl:attribute name="tag">650</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                          <xsl:text>0</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                               */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                               */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                               */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                               */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                        <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                          <xsl:text>7</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>4</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:choose>
                    <xsl:when test="*/madsrdf:componentList">
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v650-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v650-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v650-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/madsrdf:componentList/*">
                        <xsl:choose>
                          <xsl:when test="position() &gt; 1">
                            <xsl:choose>
                              <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                                <xsl:variable name="v650-v">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $v.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v650-v != ''">
                                  <marc:subfield code="v">
                                    <xsl:value-of select="$v650-v"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                                <xsl:variable name="v650-y">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $y.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v650-y != ''">
                                  <marc:subfield code="y">
                                    <xsl:value-of select="$v650-y"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                                <xsl:variable name="v650-z">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $z.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v650-z != ''">
                                  <marc:subfield code="z">
                                    <xsl:value-of select="$v650-z"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:variable name="v650-x">
                                  <xsl:choose>
                                    <xsl:when test="madsrdf:authoritativeLabel">
                                      <xsl:for-each select="madsrdf:authoritativeLabel">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="rdfs:label">
                                        <xsl:choose>
                                          <xsl:when test="position() = 1">
                                            <xsl:call-template name="tChopPunct">
                                              <xsl:with-param name="pString" select="."/>
                                            </xsl:call-template>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $x.</xsl:message>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <xsl:if test="$v650-x != ''">
                                  <marc:subfield code="x">
                                    <xsl:value-of select="$v650-x"/>
                                  </marc:subfield>
                                </xsl:if>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <marc:subfield code="3">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $3.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                      <xsl:variable name="v650-a">
                        <xsl:choose>
                          <xsl:when test="*/madsrdf:authoritativeLabel">
                            <xsl:for-each select="*/madsrdf:authoritativeLabel[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="*/rdfs:label[1]">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 650 $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v650-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$v650-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:for-each select="*/bf:role/bf:Role/rdfs:label">
                        <marc:subfield code="e">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                        <marc:subfield code="0">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                        <marc:subfield code="0">
                          <xsl:variable name="vIdType">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                            </xsl:call-template>
                          </xsl:variable>
                          <xsl:choose>
                            <xsl:when test="$vIdType != ''">
                              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="rdf:value"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                               bf:Source/bf:code != 'lcsh' and                               $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                               bf:Source/bf:code != 'lcshac' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                               bf:Source/bf:code != 'mesh' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                               bf:Source/bf:code != 'nal' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                               bf:Source/bf:code != 'cash' and                               $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                               bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v650-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v650-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v650-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <marc:datafield>
                  <xsl:attribute name="tag">653</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="*[local-name() = 'Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']]">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:when test="*[local-name() = 'Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization']]">
                          <xsl:text>2</xsl:text>
                        </xsl:when>
                        <xsl:when test="*[local-name() = 'Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']]">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:when test="*[local-name() = 'Temporal' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Temporal']]">
                          <xsl:text>4</xsl:text>
                        </xsl:when>
                        <xsl:when test="*[local-name() = 'Place' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Place']]">
                          <xsl:text>5</xsl:text>
                        </xsl:when>
                        <xsl:when test="*[local-name() = 'GenreForm' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/GenreForm']]">
                          <xsl:text>6</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text> </xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="*/rdfs:label">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:genreForm | //bf:Item/bf:genreForm[not(*/rdfs:label/@xml:lang) or contains(translate(*/rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:genreForm | //bf:Item/bf:genreForm[not(*/rdfs:label/@xml:lang) or contains(translate(*/rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="*/rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">655</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                       */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                       */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                      <xsl:text>1</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                       */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                      <xsl:text>3</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                      <xsl:text>5</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                      <xsl:text>6</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                      <xsl:text>7</xsl:text>
                    </xsl:when>
                    <xsl:when test="contains(@rdf:resource,'id.loc.gov/authorities/genreForms') or contains(*/@rdf:about,'id.loc.gov/authorities/genreForms') or contains(@rdf:resource,'id.loc.gov/vocabulary/marcgt') or contains(*/@rdf:about,'id.loc.gov/vocabulary/marcgt')">
                      <xsl:text>7</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>4</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="*/madsrdf:componentList">
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:variable name="v655-a">
                    <xsl:choose>
                      <xsl:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                        <xsl:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v655-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="*/madsrdf:componentList/*">
                    <xsl:choose>
                      <xsl:when test="position() &gt; 1">
                        <xsl:choose>
                          <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xsl:variable name="v655-v">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-v != ''">
                              <marc:subfield code="v">
                                <xsl:value-of select="$v655-v"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xsl:variable name="v655-y">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-y != ''">
                              <marc:subfield code="y">
                                <xsl:value-of select="$v655-y"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xsl:variable name="v655-z">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-z != ''">
                              <marc:subfield code="z">
                                <xsl:value-of select="$v655-z"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:variable name="v655-x">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-x != ''">
                              <marc:subfield code="x">
                                <xsl:value-of select="$v655-x"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:variable name="v655-a">
                    <xsl:choose>
                      <xsl:when test="*/madsrdf:authoritativeLabel">
                        <xsl:for-each select="*/madsrdf:authoritativeLabel[1]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:for-each select="*/rdfs:label[1]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v655-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="@rdf:resource[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="*/bf:source/bf:Source/bf:code or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                           bf:Source/bf:code != 'lcsh' and                           $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                           bf:Source/bf:code != 'lcshac' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                           bf:Source/bf:code != 'mesh' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                           bf:Source/bf:code != 'nal' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                           bf:Source/bf:code != 'cash' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                           bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v655-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v655-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v655-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:when test="contains(@rdf:resource,'id.loc.gov/authorities/genreForms') or contains(*/@rdf:about,'id.loc.gov/authorities/genreForms')">
                  <marc:subfield code="2">lcgft</marc:subfield>
                </xsl:when>
                <xsl:when test="contains(@rdf:resource,'id.loc.gov/vocabulary/marcgt') or contains(*/@rdf:about,'id.loc.gov/vocabulary/marcgt')">
                  <marc:subfield code="2">marcgt</marc:subfield>
                </xsl:when>
              </xsl:choose>
              <xsl:for-each select="*/bflc:applicableInstitution/*/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:genreForm | //bf:Item/bf:genreForm">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="*/rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">655</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                       */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
                      <xsl:text>0</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                       */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
                      <xsl:text>1</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                       */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
                      <xsl:text>3</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
                      <xsl:text>5</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
                      <xsl:text>6</xsl:text>
                    </xsl:when>
                    <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
                      <xsl:text>7</xsl:text>
                    </xsl:when>
                    <xsl:when test="contains(@rdf:resource,'id.loc.gov/authorities/genreForms') or contains(*/@rdf:about,'id.loc.gov/authorities/genreForms') or contains(@rdf:resource,'id.loc.gov/vocabulary/marcgt') or contains(*/@rdf:about,'id.loc.gov/vocabulary/marcgt')">
                      <xsl:text>7</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>4</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="*/madsrdf:componentList">
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:variable name="v655-a">
                    <xsl:choose>
                      <xsl:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                        <xsl:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v655-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="*/madsrdf:componentList/*">
                    <xsl:choose>
                      <xsl:when test="position() &gt; 1">
                        <xsl:choose>
                          <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                            <xsl:variable name="v655-v">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $v.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-v != ''">
                              <marc:subfield code="v">
                                <xsl:value-of select="$v655-v"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                            <xsl:variable name="v655-y">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $y.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-y != ''">
                              <marc:subfield code="y">
                                <xsl:value-of select="$v655-y"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                            <xsl:variable name="v655-z">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $z.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-z != ''">
                              <marc:subfield code="z">
                                <xsl:value-of select="$v655-z"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:variable name="v655-x">
                              <xsl:choose>
                                <xsl:when test="madsrdf:authoritativeLabel">
                                  <xsl:for-each select="madsrdf:authoritativeLabel">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:for-each select="rdfs:label">
                                    <xsl:choose>
                                      <xsl:when test="position() = 1">
                                        <xsl:call-template name="tChopPunct">
                                          <xsl:with-param name="pString" select="."/>
                                        </xsl:call-template>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $x.</xsl:message>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:for-each>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <xsl:if test="$v655-x != ''">
                              <marc:subfield code="x">
                                <xsl:value-of select="$v655-x"/>
                              </marc:subfield>
                            </xsl:if>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:variable name="v655-a">
                    <xsl:choose>
                      <xsl:when test="*/madsrdf:authoritativeLabel">
                        <xsl:for-each select="*/madsrdf:authoritativeLabel[1]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:for-each select="*/rdfs:label[1]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:if test="$v655-a != ''">
                    <marc:subfield code="a">
                      <xsl:value-of select="$v655-a"/>
                    </marc:subfield>
                  </xsl:if>
                  <xsl:for-each select="@rdf:resource[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="*/bf:source/bf:Source/bf:code or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                  <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
                    <xsl:variable name="vSourceUri">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource">
                          <xsl:value-of select="@rdf:resource"/>
                        </xsl:when>
                        <xsl:when test="*/@rdf:about">
                          <xsl:value-of select="*/@rdf:about"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                           bf:Source/bf:code != 'lcsh' and                           $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                           bf:Source/bf:code != 'lcshac' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                           bf:Source/bf:code != 'mesh' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                           bf:Source/bf:code != 'nal' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                           bf:Source/bf:code != 'cash' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                           bf:Source/bf:code != 'rvm'">
                        <xsl:variable name="v655-2">
                          <xsl:choose>
                            <xsl:when test="bf:Source/bf:code">
                              <xsl:value-of select="bf:Source/bf:code"/>
                            </xsl:when>
                            <xsl:when test="$vSourceUri != ''">
                              <xsl:choose>
                                <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                  <xsl:call-template name="tUriCode">
                                    <xsl:with-param name="pUri" select="$vSourceUri"/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$vSourceUri"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:value-of select="bf:Source/rdfs:label"/>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v655-2 != ''">
                          <marc:subfield code="2">
                            <xsl:value-of select="$v655-2"/>
                          </marc:subfield>
                        </xsl:if>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:when test="contains(@rdf:resource,'id.loc.gov/authorities/genreForms') or contains(*/@rdf:about,'id.loc.gov/authorities/genreForms')">
                  <marc:subfield code="2">lcgft</marc:subfield>
                </xsl:when>
                <xsl:when test="contains(@rdf:resource,'id.loc.gov/vocabulary/marcgt') or contains(*/@rdf:about,'id.loc.gov/vocabulary/marcgt')">
                  <marc:subfield code="2">marcgt</marc:subfield>
                </xsl:when>
              </xsl:choose>
              <xsl:for-each select="*/bflc:applicableInstitution/*/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/*[not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:variable name="vNameAuth">
              <xsl:choose>
                <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                  <xsl:call-template name="tGetMARCAuth">
                    <xsl:with-param name="pUri" select="@rdf:about"/>
                  </xsl:call-template>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vAddEntryTag">
              <xsl:choose>
                <xsl:when test="local-name()='Uncontrolled' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']">
                  <xsl:text>720</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']">
                  <xsl:text>700</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xsl:text>710</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xsl:text>711</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>720</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vNameAuthTag">
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='710'">
                  <xsl:text>110</xsl:text>
                </xsl:when>
                <xsl:when test="$vAddEntryTag='711'">
                  <xsl:text>111</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>100</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vAuthSubfields">
              <xsl:choose>
                <xsl:when test="$vNameAuthTag='100'">
                  <xsl:text>abcdgjq</xsl:text>
                </xsl:when>
                <xsl:when test="$vNameAuthTag='110'">
                  <xsl:text>abcdgn</xsl:text>
                </xsl:when>
                <xsl:when test="$vNameAuthTag='111'">
                  <xsl:text>acdegnq</xsl:text>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vSourceUri">
              <xsl:choose>
                <xsl:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource"/>
                </xsl:when>
                <xsl:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vWorkUri">
              <xsl:value-of select="../../../../@rdf:about"/>
            </xsl:variable>
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">
                <xsl:value-of select="$vAddEntryTag"/>
              </xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/@ind1"/>
                    </xsl:when>
                    <xsl:when test="$vAddEntryTag='700'">
                      <xsl:choose>
                        <xsl:when test="contains(local-name(),'Family')">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text>1</xsl:text>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$vAddEntryTag='710'">
                      <xsl:choose>
                        <xsl:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$vAddEntryTag='720'">
                      <xsl:choose>
                        <xsl:when test="local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text> </xsl:text>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>2</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="ancestor::bf:hasPart">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='720'">
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="a">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                    <marc:subfield code="e">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xsl:choose>
                        <xsl:when test="madsrdf:code">
                          <xsl:for-each select="madsrdf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="bf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label|../../../../bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="../../../../../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vWorkUri]/bflc:relation/bflc:Relation/rdfs:label">
                    <marc:subfield code="i">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/marc:subfield[contains($vAuthSubfields,@code)]">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code"/>
                          </xsl:attribute>
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:variable name="vvAddEntryTag-a">
                        <xsl:choose>
                          <xsl:when test="madsrdf:elementList">
                            <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvAddEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$vvAddEntryTag-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='710'">
                          <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='700'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='711'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='700'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='700'">
                          <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $q.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='711'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:choose>
                    <xsl:when test="$vAddEntryTag='711'">
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="j">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="e">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xsl:choose>
                        <xsl:when test="madsrdf:code">
                          <xsl:for-each select="madsrdf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="bf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="ancestor::bf:Hub">
                    <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="t">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $t.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="0">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose>
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xsl:variable name="vvAddEntryTag-2">
                        <xsl:choose>
                          <xsl:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:when test="$vSourceUri != ''">
                            <xsl:choose>
                              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode">
                                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="$vSourceUri"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvAddEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xsl:value-of select="$vvAddEntryTag-2"/>
                        </marc:subfield>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="../../bflc:applicableInstitution/*/bf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="5">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $5.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </marc:datafield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/*">
            <xsl:variable name="vNameAuth">
              <xsl:choose>
                <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
                  <xsl:call-template name="tGetMARCAuth">
                    <xsl:with-param name="pUri" select="@rdf:about"/>
                  </xsl:call-template>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vAddEntryTag">
              <xsl:choose>
                <xsl:when test="local-name()='Uncontrolled' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']">
                  <xsl:text>720</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']">
                  <xsl:text>700</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xsl:text>710</xsl:text>
                </xsl:when>
                <xsl:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
                  <xsl:text>711</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>720</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vNameAuthTag">
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='710'">
                  <xsl:text>110</xsl:text>
                </xsl:when>
                <xsl:when test="$vAddEntryTag='711'">
                  <xsl:text>111</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>100</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vAuthSubfields">
              <xsl:choose>
                <xsl:when test="$vNameAuthTag='100'">
                  <xsl:text>abcdgjq</xsl:text>
                </xsl:when>
                <xsl:when test="$vNameAuthTag='110'">
                  <xsl:text>abcdgn</xsl:text>
                </xsl:when>
                <xsl:when test="$vNameAuthTag='111'">
                  <xsl:text>acdegnq</xsl:text>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vSourceUri">
              <xsl:choose>
                <xsl:when test="bf:source/@rdf:resource">
                  <xsl:value-of select="bf:source/@rdf:resource"/>
                </xsl:when>
                <xsl:when test="bf:source/bf:Source/@rdf:about">
                  <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="vWorkUri">
              <xsl:value-of select="../../../../@rdf:about"/>
            </xsl:variable>
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">
                <xsl:value-of select="$vAddEntryTag"/>
              </xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/@ind1"/>
                    </xsl:when>
                    <xsl:when test="$vAddEntryTag='700'">
                      <xsl:choose>
                        <xsl:when test="contains(local-name(),'Family')">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text>1</xsl:text>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$vAddEntryTag='710'">
                      <xsl:choose>
                        <xsl:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$vAddEntryTag='720'">
                      <xsl:choose>
                        <xsl:when test="local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text> </xsl:text>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>2</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="ancestor::bf:hasPart">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='720'">
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="a">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                    <marc:subfield code="e">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xsl:choose>
                        <xsl:when test="madsrdf:code">
                          <xsl:for-each select="madsrdf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="bf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label|../../../../bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="../../../../../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vWorkUri]/bflc:relation/bflc:Relation/rdfs:label">
                    <marc:subfield code="i">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
                      <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/marc:subfield[contains($vAuthSubfields,@code)]">
                        <marc:subfield>
                          <xsl:attribute name="code">
                            <xsl:value-of select="@code"/>
                          </xsl:attribute>
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:variable name="vvAddEntryTag-a">
                        <xsl:choose>
                          <xsl:when test="madsrdf:elementList">
                            <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvAddEntryTag-a != ''">
                        <marc:subfield code="a">
                          <xsl:value-of select="$vvAddEntryTag-a"/>
                        </marc:subfield>
                      </xsl:if>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='710'">
                          <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="b">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='700'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='711'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="c">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='700'">
                          <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="d">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='700'">
                          <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <marc:subfield code="q">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </marc:subfield>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $q.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$vAddEntryTag='711'">
                          <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                            <marc:subfield code="q">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </marc:subfield>
                          </xsl:for-each>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:choose>
                    <xsl:when test="$vAddEntryTag='711'">
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="j">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $j.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                        <marc:subfield code="e">
                          <xsl:choose>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </marc:subfield>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                    <marc:subfield code="4">
                      <xsl:choose>
                        <xsl:when test="madsrdf:code">
                          <xsl:for-each select="madsrdf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="bf:code">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:value-of select="."/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                    <marc:subfield code="4">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="ancestor::bf:Hub">
                    <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <marc:subfield code="t">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $t.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                    <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="0">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose>
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
                      <xsl:variable name="vvAddEntryTag-2">
                        <xsl:choose>
                          <xsl:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:when test="$vSourceUri != ''">
                            <xsl:choose>
                              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode">
                                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="$vSourceUri"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$vvAddEntryTag-2 != ''">
                        <marc:subfield code="2">
                          <xsl:value-of select="$vvAddEntryTag-2"/>
                        </marc:subfield>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="../../bflc:applicableInstitution/*/bf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="5">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $5.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </marc:datafield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution)][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution)][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">730</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey and (string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle))">
                      <xsl:value-of select="string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle) - string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey)"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>0</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="local-name(parent::*)='hasPart'">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:variable name="vNodeUri" select="@rdf:about"/>
              <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri or bf:relatedTo=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label">
                <marc:subfield code="i">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:legalDate">
                <marc:subfield code="d">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:originDate">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="f">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $f.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                <marc:subfield code="m">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:title/bf:Title/bf:partNumber">
                <marc:subfield code="n">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:title/bf:Title/bf:partName">
                <marc:subfield code="p">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:choose>
                <xsl:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                  <marc:subfield code="o">arranged</marc:subfield>
                </xsl:when>
              </xsl:choose>
              <xsl:for-each select="bf:musicKey">
                <marc:subfield code="r">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:version">
                <marc:subfield code="s">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="x">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $x.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:source/bf:Source/bf:code">
                <marc:subfield code="2">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution)]">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">730</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey and (string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle))">
                      <xsl:value-of select="string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle) - string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey)"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>0</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:variable name="vInd">
                  <xsl:choose>
                    <xsl:when test="local-name(parent::*)='hasPart'">
                      <xsl:text>2</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vInd != ''">
                    <xsl:value-of select="$vInd"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:attribute>
              <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="3">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $3.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:variable name="vNodeUri" select="@rdf:about"/>
              <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri or bf:relatedTo=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label">
                <marc:subfield code="i">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:legalDate">
                <marc:subfield code="d">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:originDate">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="f">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $f.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                <marc:subfield code="m">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:title/bf:Title/bf:partNumber">
                <marc:subfield code="n">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:title/bf:Title/bf:partName">
                <marc:subfield code="p">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:choose>
                <xsl:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                  <marc:subfield code="o">arranged</marc:subfield>
                </xsl:when>
              </xsl:choose>
              <xsl:for-each select="bf:musicKey">
                <marc:subfield code="r">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:version">
                <marc:subfield code="s">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="x">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $x.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="bf:source/bf:Source/bf:code">
                <marc:subfield code="2">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $5.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates select="bf:Work/bf:relatedTo/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled'] |                     bf:Work/bf:hasPart/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']" mode="generate-740">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:choose>
        <xsl:when test="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic'][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
          <xsl:for-each select="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic'][not(rdfs:label/@xml:lang) or contains(translate(rdfs:label/@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">752</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="madsrdf:componentList/*">
                <xsl:choose>
                  <xsl:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
                    <xsl:variable name="v752-a">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $a.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $a.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-a != ''">
                      <marc:subfield code="a">
                        <xsl:value-of select="$v752-a"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
                    <xsl:variable name="v752-b">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $b.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $b.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-b != ''">
                      <marc:subfield code="b">
                        <xsl:value-of select="$v752-b"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
                    <xsl:variable name="v752-c">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $c.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $c.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-c != ''">
                      <marc:subfield code="c">
                        <xsl:value-of select="$v752-c"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
                    <xsl:variable name="v752-d">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-d != ''">
                      <marc:subfield code="d">
                        <xsl:value-of select="$v752-d"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
                    <xsl:variable name="v752-f">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $f.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $f.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-f != ''">
                      <marc:subfield code="f">
                        <xsl:value-of select="$v752-f"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
                    <xsl:variable name="v752-g">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $g.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $g.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-g != ''">
                      <marc:subfield code="g">
                        <xsl:value-of select="$v752-g"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
                    <xsl:variable name="v752-h">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $h.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $h.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-h != ''">
                      <marc:subfield code="h">
                        <xsl:value-of select="$v752-h"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="e">
                  <xsl:choose>
                    <xsl:when test="madsrdf:authoritativeLabel">
                      <xsl:for-each select="madsrdf:authoritativeLabel">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
                <marc:subfield code="4">
                  <xsl:choose>
                    <xsl:when test="madsrdf:code">
                      <xsl:for-each select="madsrdf:code">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:value-of select="."/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $4.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="bf:code">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:value-of select="."/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $4.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
                <marc:subfield code="4">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="2">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $2.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic']">
            <xsl:variable name="vXmlLang">
              <xsl:value-of select="rdfs:label/@xml:lang"/>
            </xsl:variable>
            <marc:datafield>
              <xsl:attribute name="tag">752</xsl:attribute>
              <xsl:if test="$vXmlLang != ''">
                <xsl:attribute name="xml:lang">
                  <xsl:value-of select="$vXmlLang"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:attribute name="ind1">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:attribute name="ind2">
                <xsl:text> </xsl:text>
              </xsl:attribute>
              <xsl:for-each select="madsrdf:componentList/*">
                <xsl:choose>
                  <xsl:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
                    <xsl:variable name="v752-a">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $a.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $a.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-a != ''">
                      <marc:subfield code="a">
                        <xsl:value-of select="$v752-a"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
                    <xsl:variable name="v752-b">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $b.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $b.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-b != ''">
                      <marc:subfield code="b">
                        <xsl:value-of select="$v752-b"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
                    <xsl:variable name="v752-c">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $c.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $c.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-c != ''">
                      <marc:subfield code="c">
                        <xsl:value-of select="$v752-c"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
                    <xsl:variable name="v752-d">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $d.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-d != ''">
                      <marc:subfield code="d">
                        <xsl:value-of select="$v752-d"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
                    <xsl:variable name="v752-f">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $f.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $f.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-f != ''">
                      <marc:subfield code="f">
                        <xsl:value-of select="$v752-f"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
                    <xsl:variable name="v752-g">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $g.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $g.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-g != ''">
                      <marc:subfield code="g">
                        <xsl:value-of select="$v752-g"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
                    <xsl:variable name="v752-h">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $h.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $h.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v752-h != ''">
                      <marc:subfield code="h">
                        <xsl:value-of select="$v752-h"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                </xsl:choose>
              </xsl:for-each>
              <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                <marc:subfield code="0">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                <marc:subfield code="0">
                  <xsl:variable name="vIdType">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vIdType != ''">
                      <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="rdf:value"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="e">
                  <xsl:choose>
                    <xsl:when test="madsrdf:authoritativeLabel">
                      <xsl:for-each select="madsrdf:authoritativeLabel">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
                <marc:subfield code="4">
                  <xsl:choose>
                    <xsl:when test="madsrdf:code">
                      <xsl:for-each select="madsrdf:code">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:value-of select="."/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $4.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="bf:code">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:value-of select="."/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $4.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
                <marc:subfield code="4">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
              <xsl:for-each select="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="2">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $2.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </marc:datafield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:apply-templates select="bf:Instance/bf:systemRequirement/*[                     local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel' or                     local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage' or                     local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem']" mode="generate-753">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:apply-templates select="bf:Work/bf:hasSeries/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasSubseries/bf:Work[bf:hasInstance] |                     bf:Work/bf:translationOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:translation/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplement/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplementTo/bf:Work[bf:hasInstance] |                     bf:Work/bf:partOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherEdition/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherPhysicalFormat/bf:Work[bf:hasInstance] |                     bf:Work/bf:issuedWith/bf:Work[bf:hasInstance] |                     bf:Work/bf:continues/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuesInPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:precededBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergerOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbed/bf:Work[bf:hasInstance] |                     bf:Work/bf:separatedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedInPartBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:succeededFrom/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:splitInto/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergedToForm/bf:Work[bf:hasInstance] |                     bf:Work/bf:dataSource/bf:Work[bf:hasInstance] |                     bf:Work/bf:relatedTo/bf:Work[bf:hasInstance]" mode="generate-vLinkTagFromWork">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <xsl:for-each select="bf:Work/bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:relatedTo/bf:*[not(bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t']) and not(bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t'])] |           //bf:Item/bflc:relationship/bflc:Relationship[bflc:relation/bflc:Relation/@rdf:about='http://id.loc.gov/ontologies/bibframe/hasSeries']/bf:relatedTo/bf:*[not(bf:status/@rdf:resource[.='http://id.loc.gov/vocabulary/mstatus/t']) and not(bf:status/bf:Status/@rdf:about[.='http://id.loc.gov/vocabulary/mstatus/t'])]">
        <xsl:variable name="vScriptSubtag">
          <xsl:call-template name="tScriptCode">
            <xsl:with-param name="pXmlLang" select="rdfs:label/@xml:lang"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:variable name="vContribSourceUri">
          <xsl:choose>
            <xsl:when test="bf:contribution/*/bf:agent/*/bf:source/@rdf:resource">
              <xsl:value-of select="bf:contribution/*/bf:agent/*/bf:source/@rdf:resource"/>
            </xsl:when>
            <xsl:when test="bf:contribution/*/bf:agent/*/bf:source/bf:Source/@rdf:about">
              <xsl:value-of select="bf:contribution/*/bf:agent/*/bf:source/bf:Source/@rdf:about"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="vNameAuth">
          <xsl:choose>
            <xsl:when test="contains(bf:contribution/*/bf:agent/*/@rdf:about,'id.loc.gov/authorities/names')">
              <xsl:call-template name="tGetMARCAuth">
                <xsl:with-param name="pUri" select="bf:contribution/*/bf:agent/*/@rdf:about"/>
              </xsl:call-template>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vScriptSubtag='' or translate($vScriptSubtag,$upper,$lower)=translate($pCatScript,$upper,$lower)">
            <xsl:choose>
              <xsl:when test="bf:contribution/*/bf:agent/*[                       local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']                       ]">
                <marc:datafield>
                  <xsl:attribute name="tag">810</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']">
                          <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']/@ind1"/>
                        </xsl:when>
                        <xsl:when test="bf:contribution/*/bf:agent/*[local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']]">
                          <xsl:text>1</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>2</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:contribution/*/bf:agent/*">
                    <xsl:choose>
                      <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']">
                        <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']/marc:subfield[contains('abcdgn',@code)]">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code"/>
                            </xsl:attribute>
                            <xsl:value-of select="."/>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:variable name="v810-a">
                          <xsl:choose>
                            <xsl:when test="madsrdf:elementList">
                              <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v810-a != ''">
                          <marc:subfield code="a">
                            <xsl:value-of select="$v810-a"/>
                          </marc:subfield>
                        </xsl:if>
                        <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="b">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="e">
                        <xsl:choose>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xsl:choose>
                          <xsl:when test="madsrdf:code">
                            <xsl:for-each select="madsrdf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="bf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="0">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose>
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="t">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $t.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:originDate">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="f">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $f.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                    <marc:subfield code="n">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                    <marc:subfield code="p">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:musicKey">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="r">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $r.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:seriesEnumeration">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="v">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $v.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="x">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 810 $x.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)"/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier[not(contains(rdf:type,'bibframe'))]">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vContribSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                      <xsl:variable name="v810-2">
                        <xsl:choose>
                          <xsl:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:when test="$vContribSourceUri != ''">
                            <xsl:choose>
                              <xsl:when test="contains($vContribSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode">
                                  <xsl:with-param name="pUri" select="$vContribSourceUri"/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="$vContribSourceUri"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:when test="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                            <xsl:value-of select="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v810-2 != ''">
                        <marc:subfield code="2">
                          <xsl:value-of select="$v810-2"/>
                        </marc:subfield>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="bf:contribution/*/bf:agent/*[                       local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']                       ]">
                <marc:datafield>
                  <xsl:attribute name="tag">811</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']">
                          <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']/@ind1"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>2</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:contribution/*/bf:agent/*">
                    <xsl:choose>
                      <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']">
                        <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']/marc:subfield[contains('acdegnq',@code)]">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code"/>
                            </xsl:attribute>
                            <xsl:value-of select="."/>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:variable name="v811-a">
                          <xsl:choose>
                            <xsl:when test="madsrdf:elementList">
                              <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v811-a != ''">
                          <marc:subfield code="a">
                            <xsl:value-of select="$v811-a"/>
                          </marc:subfield>
                        </xsl:if>
                        <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                        <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                          <marc:subfield code="q">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="j">
                        <xsl:choose>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $j.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $j.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xsl:choose>
                          <xsl:when test="madsrdf:code">
                            <xsl:for-each select="madsrdf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="bf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="0">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose>
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="t">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $t.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:originDate">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="f">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $f.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                    <marc:subfield code="n">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                    <marc:subfield code="p">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:musicKey">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="r">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $r.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:seriesEnumeration">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="v">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $v.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="x">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 811 $x.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)"/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier[not(contains(rdf:type,'bibframe'))]">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vContribSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                      <xsl:variable name="v811-2">
                        <xsl:choose>
                          <xsl:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:when test="$vContribSourceUri != ''">
                            <xsl:choose>
                              <xsl:when test="contains($vContribSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode">
                                  <xsl:with-param name="pUri" select="$vContribSourceUri"/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="$vContribSourceUri"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:when test="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                            <xsl:value-of select="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v811-2 != ''">
                        <marc:subfield code="2">
                          <xsl:value-of select="$v811-2"/>
                        </marc:subfield>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:when test="bf:contribution/*/bf:agent/*">
                <marc:datafield>
                  <xsl:attribute name="tag">800</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']">
                          <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']/@ind1"/>
                        </xsl:when>
                        <xsl:when test="bf:contribution/*/bf:agent/*[local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family'] or local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName']]">
                          <xsl:text>3</xsl:text>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>1</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:contribution/*/bf:agent/*">
                    <xsl:choose>
                      <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']">
                        <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']/marc:subfield[contains('abcdgjq',@code)]">
                          <marc:subfield>
                            <xsl:attribute name="code">
                              <xsl:value-of select="@code"/>
                            </xsl:attribute>
                            <xsl:value-of select="."/>
                          </marc:subfield>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:variable name="v800-a">
                          <xsl:choose>
                            <xsl:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                              <xsl:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="madsrdf:authoritativeLabel">
                              <xsl:for-each select="madsrdf:authoritativeLabel">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:for-each select="rdfs:label">
                                <xsl:choose>
                                  <xsl:when test="position() = 1">
                                    <xsl:call-template name="tChopPunct">
                                      <xsl:with-param name="pString" select="."/>
                                    </xsl:call-template>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $a.</xsl:message>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:for-each>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$v800-a != ''">
                          <marc:subfield code="a">
                            <xsl:value-of select="$v800-a"/>
                          </marc:subfield>
                        </xsl:if>
                        <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                          <marc:subfield code="c">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </marc:subfield>
                        </xsl:for-each>
                        <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <marc:subfield code="d">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </marc:subfield>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $d.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                        <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <marc:subfield code="q">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </marc:subfield>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $q.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                      <marc:subfield code="e">
                        <xsl:choose>
                          <xsl:when test="madsrdf:authoritativeLabel">
                            <xsl:for-each select="madsrdf:authoritativeLabel">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="rdfs:label">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:call-template name="tChopPunct">
                                    <xsl:with-param name="pString" select="."/>
                                  </xsl:call-template>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $e.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
                      <marc:subfield code="4">
                        <xsl:choose>
                          <xsl:when test="madsrdf:code">
                            <xsl:for-each select="madsrdf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:for-each select="bf:code">
                              <xsl:choose>
                                <xsl:when test="position() = 1">
                                  <xsl:value-of select="."/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $4.</xsl:message>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:for-each>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
                      <marc:subfield code="4">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                      <marc:subfield code="0">
                        <xsl:value-of select="."/>
                      </marc:subfield>
                    </xsl:for-each>
                    <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                      <marc:subfield code="0">
                        <xsl:variable name="vIdType">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <xsl:choose>
                          <xsl:when test="$vIdType != ''">
                            <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="rdf:value"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </marc:subfield>
                    </xsl:for-each>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="t">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $t.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:originDate">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="f">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $f.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partNumber">
                    <marc:subfield code="n">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:partName">
                    <marc:subfield code="p">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:musicKey">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="r">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $r.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:seriesEnumeration">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="v">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $v.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="x">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 800 $x.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)"/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier[not(contains(rdf:type,'bibframe'))]">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="$vContribSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                      <xsl:variable name="v800-2">
                        <xsl:choose>
                          <xsl:when test="bf:source/bf:Source/bf:code">
                            <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:when test="$vContribSourceUri != ''">
                            <xsl:choose>
                              <xsl:when test="contains($vContribSourceUri,'id.loc.gov')">
                                <xsl:call-template name="tUriCode">
                                  <xsl:with-param name="pUri" select="$vContribSourceUri"/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="$vContribSourceUri"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:when test="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
                            <xsl:value-of select="*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="$v800-2 != ''">
                        <marc:subfield code="2">
                          <xsl:value-of select="$v800-2"/>
                        </marc:subfield>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:when>
              <xsl:otherwise>
                <marc:datafield>
                  <xsl:attribute name="tag">830</xsl:attribute>
                  <xsl:attribute name="ind1">
                    <xsl:text> </xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="ind2">
                    <xsl:variable name="vInd">
                      <xsl:choose>
                        <xsl:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                          <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:choose>
                      <xsl:when test="$vInd != ''">
                        <xsl:value-of select="$vInd"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>0</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>
                  <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="3">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 830 $3.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="a">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 830 $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
                    <marc:subfield code="0">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/bf:Identifier">
                    <marc:subfield code="0">
                      <xsl:variable name="vIdType">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="$vIdType != ''">
                          <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="rdf:value"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:legalDate">
                    <marc:subfield code="d">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:originDate">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="f">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 830 $f.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
                    <marc:subfield code="m">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title/bf:partNumber">
                    <marc:subfield code="n">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:title/bf:Title/bf:partName">
                    <marc:subfield code="p">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:choose>
                    <xsl:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
                      <marc:subfield code="o">arranged</marc:subfield>
                    </xsl:when>
                  </xsl:choose>
                  <xsl:for-each select="bf:musicKey">
                    <marc:subfield code="r">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:version">
                    <marc:subfield code="s">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="x">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 830 $x.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="../../bf:seriesEnumeration">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="v">
                          <xsl:value-of select="."/>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 830 $v.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                  <xsl:for-each select="bf:identifiedBy/*[local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']">
                    <marc:subfield code="w">
                      <xsl:value-of select="concat('(DLC)',rdf:value)"/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bf:source/bf:Source/bf:code">
                    <marc:subfield code="2">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                  <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
                    <marc:subfield code="5">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:for-each>
                </marc:datafield>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
        </xsl:choose>
      </xsl:for-each>
      <xsl:apply-templates select="bf:Work/bf:tableOfContents/bf:TableOfContents[not(rdfs:label) and rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     //bf:Item/bf:electronicLocator/*[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']]" mode="generate-856">
        <xsl:with-param name="vRecordId" select="$vRecordId"/>
        <xsl:with-param name="vAdminMetadata" select="$vAdminMetadata"/>
      </xsl:apply-templates>
      <marc:datafield>
        <xsl:attribute name="tag">884</xsl:attribute>
        <xsl:attribute name="ind1">
          <xsl:text> </xsl:text>
        </xsl:attribute>
        <xsl:attribute name="ind2">
          <xsl:text> </xsl:text>
        </xsl:attribute>
        <xsl:variable name="v884-a">
          <xsl:value-of select="$vCurrentVersion"/>
        </xsl:variable>
        <xsl:if test="$v884-a != ''">
          <marc:subfield code="a">
            <xsl:value-of select="$v884-a"/>
          </marc:subfield>
        </xsl:if>
        <xsl:choose>
          <xsl:when test="$pGenerationDatestamp">
            <xsl:variable name="v884-g">
              <xsl:value-of select="$pGenerationDatestamp"/>
            </xsl:variable>
            <xsl:if test="$v884-g != ''">
              <marc:subfield code="g">
                <xsl:value-of select="$v884-g"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$pSourceRecordId">
            <xsl:variable name="v884-k">
              <xsl:value-of select="$pSourceRecordId"/>
            </xsl:variable>
            <xsl:if test="$v884-k != ''">
              <marc:subfield code="k">
                <xsl:value-of select="$v884-k"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$pConversionAgency">
            <xsl:variable name="v884-q">
              <xsl:value-of select="$pConversionAgency"/>
            </xsl:variable>
            <xsl:if test="$v884-q != ''">
              <marc:subfield code="q">
                <xsl:value-of select="$v884-q"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$pGenerationUri">
            <xsl:variable name="v884-u">
              <xsl:value-of select="$pGenerationUri"/>
            </xsl:variable>
            <xsl:if test="$v884-u != ''">
              <marc:subfield code="u">
                <xsl:value-of select="$v884-u"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
        </xsl:choose>
      </marc:datafield>
    </marc:record>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='Cartography'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography') and                     (bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026058' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026058' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026061' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026061' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026387' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026387' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026113' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026113' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027245' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027245' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026530' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026530' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026295' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026295' or                     bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026045' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026045')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026058' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026058'">
                <xsl:text>ad </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026061' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026061'">
                <xsl:text>ag </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026387' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026387'">
                <xsl:text>aj </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026113' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026113'">
                <xsl:text>ak </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027245' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027245'">
                <xsl:text>aq </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026530' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026530'">
                <xsl:text>ar </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026295' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026295'">
                <xsl:text>as </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026045' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026045'">
                <xsl:text>ay </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>a| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>|||||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='Multimedia'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Multimedia') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/c' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/c')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ca' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ca']">
                <xsl:text>ca </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cb' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cb']">
                <xsl:text>cb </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cd']">
                <xsl:text>co </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ce' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ce']">
                <xsl:text>cj </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cf']">
                <xsl:text>cf </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ch' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ch']">
                <xsl:text>ch </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ck' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ck']">
                <xsl:text>ck </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cr']">
                <xsl:text>cr </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz']">
                <xsl:text>cz </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>c| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>|||||||||||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='Cartography'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography') and                     (bf:Work/bf:content/@rdf:resource='http://id.loc.gov/vocabulary/contentTypes/crf' or bf:Work/bf:content/*/@rdf:about='http://id.loc.gov/vocabulary/contentTypes/crf') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/n' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n') and                     (bf:Instance/bf:carrier/@rdf:resource='http://id.loc.gov/vocabulary/carriers/nr' or bf:Instance/bf:carrier/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:text>d| |||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='StillImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/g' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/g') and                     not(bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026406' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026406')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gc']">
                <xsl:text>gc </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gd']">
                <xsl:text>gd </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gf']">
                <xsl:text>gf </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mo' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mo']">
                <xsl:text>go </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gs' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gs']">
                <xsl:text>gs </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/gt' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/gt']">
                <xsl:text>gt </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>g| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>||||||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='Text'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Text') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/h' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/h')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/ha' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/ha']">
                <xsl:text>ha </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hb' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hb']">
                <xsl:text>hb </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hc']">
                <xsl:text>hc </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hd']">
                <xsl:text>hd </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/he' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/he']">
                <xsl:text>he </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hf']">
                <xsl:text>hf </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hg' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hg']">
                <xsl:text>hg </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hh' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hh']">
                <xsl:text>hh </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hj' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/hj']">
                <xsl:text>hj </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>h| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>||||||||||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='StillImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/n' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/n')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027227' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027227'">
                <xsl:text>kc </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/vocabulary/graphicMaterials/tgm003277' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/vocabulary/graphicMaterials/tgm003277'">
                <xsl:text>kd </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027246' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027246'">
                <xsl:text>ke </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/vocabulary/graphicMaterials/tgm007730' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/vocabulary/graphicMaterials/tgm007730'">
                <xsl:text>kf </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2019026026' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2019026026'">
                <xsl:text>kg </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/vocabulary/graphicMaterials/tgm007718' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/vocabulary/graphicMaterials/tgm007718'">
                <xsl:text>kh </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027251' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027251'">
                <xsl:text>ki </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027255' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027255'">
                <xsl:text>kj </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026152' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026152'">
                <xsl:text>kk </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/vocabulary/graphicMaterials/tgm009250' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/vocabulary/graphicMaterials/tgm009250'">
                <xsl:text>kl </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026011' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026011'">
                <xsl:text>kn </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026151' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026151'">
                <xsl:text>kp </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Work/bf:genreForm/@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027249' or bf:Work/bf:genreForm/*/@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027249'">
                <xsl:text>kv </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>k| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>|||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='MovingImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/g' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/g')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mc']">
                <xsl:text>mc </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mf']">
                <xsl:text>mf </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mo' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mo']">
                <xsl:text>mo </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/mr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/mr']">
                <xsl:text>mr </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>m| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>||||||||||||||||||||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='Audio'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Audio') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/s' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/s')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sd']">
                <xsl:text>sd </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/se' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/se']">
                <xsl:text>se </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sg' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sg']">
                <xsl:text>sg </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/si' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/si']">
                <xsl:text>si </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sq' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sq']">
                <xsl:text>sq </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cr']">
                <xsl:text>sr </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/st' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/st']">
                <xsl:text>st </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/sw' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/sw']">
                <xsl:text>sw </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>s| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>|||||||||||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF[(*[local-name()='MovingImage'] or bf:Work/rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage') and                     (bf:Instance/bf:media/@rdf:resource='http://id.loc.gov/vocabulary/mediaTypes/v' or bf:Instance/bf:media/*/@rdf:about='http://id.loc.gov/vocabulary/mediaTypes/v')]" mode="generate-007">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">007</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vc' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vc']">
                <xsl:text>vc </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vd' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vd']">
                <xsl:text>vd </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vf' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vf']">
                <xsl:text>vf </xsl:text>
              </xsl:when>
              <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/vr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/vr']">
                <xsl:text>vr </xsl:text>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>v| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>||||||</xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (007).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="/rdf:RDF" mode="generate-008">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="v008Format">
      <xsl:choose>
        <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Cartography']">
          <xsl:text>MP</xsl:text>
        </xsl:when>
        <xsl:when test="bf:Instance/bf:issuance/bf:Issuance[@rdf:about='http://id.loc.gov/vocabulary/issuance/serl'] or                       bf:Instance/bf:issuance[@rdf:resource='http://id.loc.gov/vocabulary/issuance/serl'] or                       bf:Instance/bf:issuance/bf:Issuance[@rdf:about='http://id.loc.gov/vocabulary/issuance/intg'] or                       bf:Instance/bf:issuance[@rdf:resource='http://id.loc.gov/vocabulary/issuance/intg']">
          <xsl:text>CR</xsl:text>
        </xsl:when>
        <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Audio'] or                       bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/NotatedMusic']">
          <xsl:text>MU</xsl:text>
        </xsl:when>
        <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage'] or                       bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StillImage'] or                       bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Object']">
          <xsl:text>VM</xsl:text>
        </xsl:when>
        <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MixedMaterial']">
          <xsl:text>MX</xsl:text>
        </xsl:when>
        <xsl:when test="bf:Instance/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Electronic']">
          <xsl:text>CF</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>BK</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vMUSupplContent">
      <xsl:variable name="vMUSupplRaw">
        <xsl:for-each select="bf:Work/bf:supplementaryContent">
          <xsl:choose>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/discography' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/discography'">a</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/bibliography' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/bibliography'">b</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/thematicindex' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/thematicindex'">c</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/libretto' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/libretto'">d</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/creatorbio' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/creatorbio'">e</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/performerhistory' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/performerhistory'">f</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/techinstruments' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/techinstruments'">g</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/techmusic' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/techmusic'">h</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/historicalinfo' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/historicalinfo'">i</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/ethnologicinfo' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/ethnologicinfo'">k</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/instructmaterial' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/instructmaterial'">r</xsl:when>
            <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/music' or */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/music'">s</xsl:when>
          </xsl:choose>
        </xsl:for-each>
      </xsl:variable>
      <xsl:variable name="vMUSupplPadded">
        <xsl:call-template name="tPadRight">
          <xsl:with-param name="pInput" select="$vMUSupplRaw"/>
          <xsl:with-param name="pStringLength">6</xsl:with-param>
        </xsl:call-template>
      </xsl:variable>
      <xsl:choose>
        <xsl:when test="string-length($vMUSupplPadded) &gt; 6">
          <xsl:value-of select="substring($vMUSupplPadded,1,6)"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$vMUSupplPadded"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:controlfield>
          <xsl:attribute name="xml:space">preserve</xsl:attribute>
          <xsl:attribute name="tag">008</xsl:attribute>
          <xsl:variable name="vPosition-1">
            <xsl:choose>
              <xsl:when test="$vAdminMetadata/bf:creationDate">
                <xsl:for-each select="$vAdminMetadata/bf:creationDate">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:choose>
                        <xsl:when test="@rdf:datatype='http://www.w3.org/2001/XMLSchema#dateTime' or @rdf:datatype='http://www.w3.org/2001/XMLSchema#date' or @rdf:datatype='http://id.loc.gov/datatypes/edtf'">
                          <xsl:value-of select="translate(substring(.,3,8),'-','')"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed bf:creationDate. Invalid datatype.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 008.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="$pGenerationDatestamp != ''">
                <xsl:value-of select="translate(substring($pGenerationDatestamp,3,8),'-','')"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-1 != ''">
              <xsl:value-of select="$vPosition-1"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>700101</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-2">
            <xsl:choose>
              <xsl:when test="                   (                     bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Distribution']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf' and                     bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'                   ) or (                     bf:Instance/bf:provisionActivity/bf:Distribution/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf' and                     bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'                                   )                 ">
                <xsl:variable name="date1">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Distribution/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:Distribution/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Distribution']/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="date2">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:Production/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production']/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="translate(concat('p', $date1, $date2), 'X', 'u')"/>
              </xsl:when>
              <xsl:when test="               bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'                or                bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'               ">
                <xsl:variable name="vPA">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Production/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:Production[bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Production' and bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="date1">
                  <xsl:value-of select="$vPA/bf:*/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vPA/bf:*/bf:note/bf:Note/rdfs:label = 'inclusive collection dates'">
                    <xsl:value-of select="translate(concat('i', translate($date1, '/', '')), 'X', 'u')"/>
                  </xsl:when>
                  <xsl:when test="$vPA/bf:*/bf:note/bf:Note/rdfs:label = 'bulk collection dates'">
                    <xsl:value-of select="translate(concat('k', translate($date1, '/', '')), 'X', 'u')"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="               bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Publication']/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'               or               bf:Instance/bf:provisionActivity/bf:Publication/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'               ">
                <xsl:variable name="vPA">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:provisionActivity/bf:Publication/bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf'">
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:Publication[bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:copy-of select="bf:Instance/bf:provisionActivity/bf:ProvisionActivity[rdf:type/@rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Publication' and bf:date/@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="theDate">
                  <xsl:value-of select="$vPA/bf:*/bf:date[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                </xsl:variable>
                <xsl:variable name="date1">
                  <xsl:choose>
                    <xsl:when test="string-length($theDate)=4">
                      <xsl:value-of select="substring($theDate, 1, 4)"/>
                    </xsl:when>
                    <xsl:when test="contains($theDate ,'/')">
                      <xsl:value-of select="substring-before($theDate, '/')"/>
                    </xsl:when>
                    <xsl:when test="contains($theDate ,'-')">
                      <xsl:value-of select="substring-before($theDate, '-')"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="cDateExists">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:copyrightDate[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']">1</xsl:when>
                    <xsl:otherwise>0</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="date2">
                  <xsl:choose>
                    <xsl:when test="$cDateExists = 1">
                      <xsl:value-of select="bf:Instance/bf:copyrightDate[@rdf:datatype = 'http://id.loc.gov/datatypes/edtf']"/>
                    </xsl:when>
                    <xsl:when test="contains($theDate, '/..')">9999</xsl:when>
                    <xsl:when test="contains($theDate, '/')">
                      <xsl:value-of select="substring-after($theDate,'/')"/>
                    </xsl:when>
                    <xsl:when test="contains($theDate, '-')">
                      <xsl:value-of select="substring-after($theDate,'-')"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="string-length($date1) = 4 and $cDateExists = 1">
                    <xsl:value-of select="translate(concat('t', $date1, $date2), 'X', 'u')"/>
                  </xsl:when>
                  <xsl:when test="$vPA/bf:*/bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/current' and                     string-length($date1) = 4 and string-length($date2) = 4">
                    <xsl:value-of select="translate(concat('c', $date1, $date2), 'X', 'u')"/>
                  </xsl:when>
                  <xsl:when test="$vPA/bf:*/bf:status/bf:Status/@rdf:about = 'http://id.loc.gov/vocabulary/mstatus/ceased' and                                   string-length($date1) = 4 and string-length($date2) = 4">
                    <xsl:value-of select="translate(concat('d', $date1, $date2), 'X', 'u')"/>
                  </xsl:when>
                  <xsl:when test="string-length($date1)=4 and string-length($date2)=5 and                                    (contains($date2, '~') or contains($date2, '?') or contains($date2, '%'))">
                    <xsl:value-of select="translate(concat('q', $date1, $date2), 'X', 'u')"/>
                  </xsl:when>
                  <xsl:when test="string-length($date1)=4 and string-length($date2)=4">
                    <xsl:value-of select="translate(concat('m', $date1, $date2), 'X', 'u')"/>
                  </xsl:when>
                  <xsl:when test="$date2 != ''">
                    <xsl:choose>
                      <xsl:when test="contains($date2, '-')">
                        <xsl:value-of select="translate(concat('e', $date1, translate($date2, '-', '')), 'X', 'u')"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="translate(concat('e', $date1, $date2, '||'), 'X', 'u')"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:when test="string-length($date1) = 4">
                    <xsl:value-of select="translate(concat('s', $date1, '||||'), 'X', 'u')"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-2 != ''">
              <xsl:value-of select="$vPosition-2"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>|||||||||</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-3">
            <xsl:for-each select="bf:Instance/bf:provisionActivity/bf:*/bf:place/@rdf:resource|                          bf:Instance/bf:provisionActivity/bf:*/bf:place/bf:*/@rdf:about">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:choose>
                    <xsl:when test="starts-with(.,'http://id.loc.gov/vocabulary/countries/')">
                      <xsl:variable name="vCode">
                        <xsl:value-of select="substring-after(.,'http://id.loc.gov/vocabulary/countries/')"/>
                      </xsl:variable>
                      <xsl:choose>
                        <xsl:when test="string-length($vCode)=3">
                          <xsl:value-of select="$vCode"/>
                        </xsl:when>
                        <xsl:when test="string-length($vCode)=2">
                          <xsl:value-of select="concat($vCode,' ')"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:when>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 008.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-3 != ''">
              <xsl:value-of select="$vPosition-3"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>xx </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-4">
            <xsl:choose>
              <xsl:when test="$v008Format='BK'">
                <xsl:variable name="vIllus">
                  <xsl:for-each select="*/bf:illustrativeContent">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/ill' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/ill' or                                       */*[local-name()='code']='ill'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/map' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/map' or                                       */*[local-name()='code']='map'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/por' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/por' or                                       */*[local-name()='code']='por'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/chr' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/chr' or                                       */*[local-name()='code']='chr'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/pln' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/pln' or                                       */*[local-name()='code']='pln'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/plt' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/plt' or                                       */*[local-name()='code']='plt'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/mus' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/mus' or                                       */*[local-name()='code']='mus'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/fac' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/fac' or                                       */*[local-name()='code']='fac'">h</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/coa' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/coa' or                                       */*[local-name()='code']='coa'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/gnt' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/gnt' or                                       */*[local-name()='code']='gnt'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/for' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/for' or                                       */*[local-name()='code']='for'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/sam' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/sam' or                                       */*[local-name()='code']='sam'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/pho' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/pho' or                                       */*[local-name()='code']='pho'">m</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/pht' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/pht' or                                       */*[local-name()='code']='pht'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/millus/ilm' or                                       */@rdf:about='http://id.loc.gov/vocabulary/millus/ilm' or                                       */*[local-name()='code']='ilm'">p</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vIllusPadded">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vIllus"/>
                    <xsl:with-param name="pStringLength">4</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="string-length($vIllusPadded) &gt; 4">
                    <xsl:value-of select="substring($vIllusPadded,1,4)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vIllusPadded"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="$v008Format='CR'">
                <xsl:variable name="vFrequency">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ann' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ann' or */*[local-name()='code']='ann']">a</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/bmn' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/bmn' or */*[local-name()='code']='bmn']">b</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/swk' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/swk' or */*[local-name()='code']='swk']">c</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/dyl' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/dyl' or */*[local-name()='code']='dyl']">d</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/bwk' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/bwk' or */*[local-name()='code']='bwk']">e</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/san' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/san' or */*[local-name()='code']='san']">f</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/bin' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/bin' or */*[local-name()='code']='bin']">g</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ten' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ten' or */*[local-name()='code']='ten']">h</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ttw' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ttw' or */*[local-name()='code']='ttw']">i</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/ttm' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/ttm' or */*[local-name()='code']='ttm']">j</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/con' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/con' or */*[local-name()='code']='con']">k</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/mon' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/mon' or */*[local-name()='code']='mon']">m</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/qrt' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/qrt' or */*[local-name()='code']='qrt']">q</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/smn' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/smn' or */*[local-name()='code']='smn']">s</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/tty' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/tty' or */*[local-name()='code']='tty']">t</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/unk' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/unk' or */*[local-name()='code']='unk']">u</xsl:when>
                    <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/wkl' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/wkl' or */*[local-name()='code']='wkl']">w</xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="' '"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$vFrequency"/>
                <xsl:variable name="vRegularity">
                  <xsl:choose>
                    <xsl:when test="$vFrequency != ' '">
                      <xsl:choose>
                        <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/irr' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/irr' or */*/*[local-name()='code']='irr']">n</xsl:when>
                        <xsl:otherwise>r</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:choose>
                        <xsl:when test="bf:Instance/bf:frequency[@rdf:resource='http://id.loc.gov/vocabulary/frequencies/irr' or */@rdf:about='http://id.loc.gov/vocabulary/frequencies/irr' or */*/*[local-name()='code']='irr']">x</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vCRType">
                  <xsl:choose>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/database' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/database' or */*/rdfs:label='database']">d</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/mag' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/mag' or */*/rdfs:label='mag']">g</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/blog' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/blog' or */*/rdfs:label='blog']">h</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/journal' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/journal' or */*/rdfs:label='journal']">j</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/looseleaf' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/looseleaf' or */*/rdfs:label='looseleaf']">l</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/monoseries' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/monoseries' or */*/rdfs:label='monoseries']">m</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/newspaper' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/newspaper' or */*/rdfs:label='newspaper']">n</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/periodical' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/periodical' or */*/rdfs:label='periodical']">p</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/repo' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/repo' or */*/rdfs:label='repo']">r</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/newsletter' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/newsletter' or */*/rdfs:label='newsletter']">s</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/directory' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/directory' or */*/rdfs:label='directory']">t</xsl:when>
                    <xsl:when test="bf:Work/bflc:serialPubType[@rdf:resource='http://id.loc.gov/vocabulary/mserialpubtype/web' or */@rdf:about='http://id.loc.gov/vocabulary/mserialpubtype/web' or */*/rdfs:label='web']">w</xsl:when>
                    <xsl:otherwise>|</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$vRegularity"/>
                <xsl:value-of select="' '"/>
                <xsl:value-of select="$vCRType"/>
              </xsl:when>
              <xsl:when test="$v008Format='MP'">
                <xsl:variable name="vRelief">
                  <xsl:for-each select="bf:Work/bf:cartographicAttributes/bf:Cartographic/bflc:relief">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/cont' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/cont'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/shad' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/shad'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/grad' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/grad'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/hach' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/hach'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/bath' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/bath'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/form' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/form'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/spot' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/spot'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/pict' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/pict'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/land' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/land'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/isol' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/isol'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mrelief/rock' or */@rdf:about='http://id.loc.gov/vocabulary/mrelief/rock'">m</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vReliefPadded">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vRelief"/>
                    <xsl:with-param name="pStringLength">4</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="string-length($vReliefPadded) &gt; 4">
                    <xsl:value-of select="substring($vReliefPadded,1,4)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vReliefPadded"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="$v008Format='MU'">
                <xsl:variable name="vCompForm">
                  <xsl:choose>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026635' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026635']">an</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026648' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026648']">bd</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026664' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026664']">bg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026665' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026665']">bl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026650' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026650']">bt</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026701' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026701']">ca</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026707' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026707']">cb</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026724' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026724']">cg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026713' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026713']">ch</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026712' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026712']">cl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026687' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026687']">cn</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026725' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026725']">co</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027007' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027007']">cp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026695' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026695']">cr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026624' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026624']">cs</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026688' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026688']">ct</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026739' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026739']">cy</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026012' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026012']">cz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026753' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026753']">df</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027116' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027116']">dv</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026818' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026818']">fg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026806' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026806']">fl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026809' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026809']">fm</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2018026018' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2018026018']">ft</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026839' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026839']">gm</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026872' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026872']">hy</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026879' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026879']">jz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027050' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027050']">mc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026915' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026915']">md</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026940' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026940']">mi</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026949' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026949']">mo</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026950' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026950']">mp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026922' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026922']">mr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026926' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026926']">ms</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026928' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026928']">mz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017026144' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017026144']">nc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026976' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026976']">op</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026980' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026980']">ov</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027017' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027017']">pg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026861' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026861']">pm</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027005' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027005']">po</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027009' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027009']">pp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027013' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027013']">pr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026989' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026989']">ps</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026984' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026984']">pt</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026994' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026994']">pv</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027054' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027054']">rc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027057' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027057']">rd</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027034' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027034']">rg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017026128' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017026128']">ri</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027051' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027051']">rp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027048' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027048']">rq</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027111' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027111']">sd</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027103' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027103']">sg</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027099' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027099']">sn</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027120' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027120']">sp</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027115' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027115']">st</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027116' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027116']">su</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027121' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027121']">sy</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027140' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027140']">tc</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026059' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026059']">tl</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017026025' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017026025']">vi</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027156' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027156']">vr</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014027167' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014027167']">wz</xsl:when>
                    <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026059' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026059']">za</xsl:when>
                    <xsl:otherwise>||</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vMusicForm">
                  <xsl:choose>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/score' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/score']">a</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/studyscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/studyscore']">b</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/pianoscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/pianoscore']">c</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/pianopart' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/pianopart']">e</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/chscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/chscore']">h</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/conscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/conscore']">i</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/perfconpt' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/perfconpt']">j</xsl:when>
                    <xsl:when test="bf:Work/bf:musicFormat[@rdf:resource='http://id.loc.gov/vocabulary/mmusicformat/vocalscore' or */@rdf:about='http://id.loc.gov/vocabulary/mmusicformat/vocalscore']">k</xsl:when>
                    <xsl:otherwise>|</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="concat($vCompForm,$vMusicForm,'|')"/>
              </xsl:when>
              <xsl:when test="$v008Format='VM'">
                <xsl:choose>
                  <xsl:when test="bf:Work/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MovingImage']">
                    <xsl:variable name="vDuration">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration']">
                          <xsl:value-of select="substring-before(substring-after(bf:Work/bf:duration[@rdf:datatype='http://www.w3.org/2001/XMLSchema#duration'],'PT'),'M')"/>
                        </xsl:when>
                        <xsl:when test="bf:Work/bf:duration[(. = number(.))]">
                          <xsl:value-of select="bf:Work/bf:duration[(. = number(.))]"/>
                        </xsl:when>
                        <xsl:when test="bf:Work/bf:duration[contains(.,'999')]">000</xsl:when>
                        <xsl:otherwise>|||</xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="vDurationPadded">
                      <xsl:call-template name="tPadLeft">
                        <xsl:with-param name="pInput" select="$vDuration"/>
                        <xsl:with-param name="pStringLength">3</xsl:with-param>
                        <xsl:with-param name="pPadChar">0</xsl:with-param>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:variable name="vDurationFinal">
                      <xsl:choose>
                        <xsl:when test="$vDurationPadded &gt; 999">000</xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="$vDurationPadded"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:value-of select="concat($vDurationFinal,' ')"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>nnn </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-4 != ''">
              <xsl:value-of select="$vPosition-4"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>    </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-5">
            <xsl:choose>
              <xsl:when test="$v008Format='BK' or                         $v008Format='CF' or                         $v008Format='MU' or                         $v008Format='CR' or                         $v008Format='VM' or                         $v008Format='MX'">
                <!--<xsl:variable name="v008-22">-->
                <xsl:choose>
                  <xsl:when test="$v008Format='MX'">
                    <xsl:value-of select="' '"/>
                  </xsl:when>
                  <xsl:when test="$v008Format='CR'">
                    <xsl:value-of select="' '"/>
                  </xsl:when>
                  <!--<xsl:choose>
                        <xsl:when test="bf:Instance/bf:note/*[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/orig']">
                          <xsl:for-each select="bf:Instance/bf:note/*[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/orig']">
                            <xsl:if test="position()=1">
                              <xsl:choose>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='microfilm'">a</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='microfiche'">b</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='microopaque'">c</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='large print'">d</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='newspaper format'">e</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='braille'">f</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='online'">o</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='direct electronic'">q</xsl:when>
                                <xsl:when test="translate(rdfs:label,$upper,$lower)='electronic'">s</xsl:when>
                                <xsl:otherwise><xsl:value-of select="'|'"/></xsl:otherwise>
                              </xsl:choose>
                            </xsl:if>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="' '"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    -->
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/pre' or                                     */@rdf:about='http://id.loc.gov/vocabulary/maudience/pre'                                     or */*[local-name='code']='pre']">a</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/pri' or                                     */@rdf:about='http://id.loc.gov/vocabulary/maudience/pri'                                     or */*[local-name='code']='pri']">b</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/pad'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/pad'                                     or */*[local-name='code']='pad']">c</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/ado'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/ado'                                     or */*[local-name='code']='ado']">d</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/adu'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/adu'                                     or */*[local-name='code']='adu']">e</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/spe'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/spe'                                     or */*[local-name='code']='spe']">f</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/gen'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/gen'                                     or */*[local-name='code']='gen']">g</xsl:when>
                  <xsl:when test="bf:Work/bf:intendedAudience[@rdf:resource='http://id.loc.gov/vocabulary/maudience/juv'                                     or */@rdf:about='http://id.loc.gov/vocabulary/maudience/juv'                                     or */*[local-name='code']='juv']">j</xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="' '"/>
                  </xsl:otherwise>
                </xsl:choose>
                <!--</xsl:variable>-->
                <!--<xsl:variable name="v008-23">-->
                <xsl:choose>
                  <xsl:when test="$v008Format='VM'">
                    <xsl:value-of select="' '"/>
                  </xsl:when>
                  <xsl:when test="$v008Format='CF'">
                    <xsl:choose>
                      <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cr' or */*[local-name()='code']='cr']">o</xsl:when>
                      <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz' or */*[local-name()='code']='cz']">q</xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="' '"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hd'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hd'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='hd'">a</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/he'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/he'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='he'">b</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hg'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hg'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='hg'">c</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr'] or                                     bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/cr'] or                                     bf:Instance/bf:carrier/*/*[local-name()='code']='cr'">o</xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz' or */*[local-name()='code']='cz']">s</xsl:when>
                  <xsl:when test="bf:Instance/bf:fontSize[@rdf:resource='http://id.loc.gov/vocabulary/mfont/lp'] or                                     bf:Instance/bf:fontSize/*[@rdf:about='http://id.loc.gov/vocabulary/mfont/lp'] or                                     bf:Instance/bf:fontSize/*[contains(rdfs:label,'large print')]">d</xsl:when>
                  <xsl:when test="bf:Instance/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mtactile/brail'] or                                     bf:Instance/bf:notation/*[@rdf:about='http://id.loc.gov/vocabulary/mtactile/brail'] or                                     bf:Instance/bf:notation/*[contains(rdfs:label,'braille')]">f</xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="' '"/>
                  </xsl:otherwise>
                </xsl:choose>
                <!--</xsl:variable>-->
                <!--<xsl:value-of select="concat($v008-22,$v008-23)"/>-->
              </xsl:when>
              <xsl:when test="$v008Format='MP'">
                <xsl:choose>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/aa' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/aa' or */*[local-name()='code']='aa']">
                    <xsl:text>aa</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ab' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ab' or */*[local-name()='code']='ab']">
                    <xsl:text>ab</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ac' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ac' or */*[local-name()='code']='ac']">
                    <xsl:text>ac</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ad' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ad' or */*[local-name()='code']='ad']">
                    <xsl:text>ad</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ae' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ae' or */*[local-name()='code']='ae']">
                    <xsl:text>ae</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/af' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/af' or */*[local-name()='code']='af']">
                    <xsl:text>af</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ag' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ag' or */*[local-name()='code']='ag']">
                    <xsl:text>ag</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/am' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/am' or */*[local-name()='code']='am']">
                    <xsl:text>am</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/an' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/an' or */*[local-name()='code']='an']">
                    <xsl:text>an</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ap' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ap' or */*[local-name()='code']='ap']">
                    <xsl:text>ap</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/au' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/au' or */*[local-name()='code']='au']">
                    <xsl:text>au</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/az' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/az' or */*[local-name()='code']='az']">
                    <xsl:text>az</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ba' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ba' or */*[local-name()='code']='ba']">
                    <xsl:text>ba</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bb' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bb' or */*[local-name()='code']='bb']">
                    <xsl:text>bb</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bc' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bc' or */*[local-name()='code']='bc']">
                    <xsl:text>bc</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bd' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bd' or */*[local-name()='code']='bd']">
                    <xsl:text>bd</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bf' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bf' or */*[local-name()='code']='bf']">
                    <xsl:text>bf</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bg' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bg' or */*[local-name()='code']='bg']">
                    <xsl:text>bg</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bh' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bh' or */*[local-name()='code']='bh']">
                    <xsl:text>bh</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bi' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bi' or */*[local-name()='code']='bi']">
                    <xsl:text>bi</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bj' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bj' or */*[local-name()='code']='bj']">
                    <xsl:text>bj</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bk' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bk' or */*[local-name()='code']='bk']">
                    <xsl:text>bk</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bl' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bl' or */*[local-name()='code']='bl']">
                    <xsl:text>bl</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bo' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bo' or */*[local-name()='code']='bo']">
                    <xsl:text>bo</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/br' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/br' or */*[local-name()='code']='br']">
                    <xsl:text>br</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bs' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bs' or */*[local-name()='code']='bs']">
                    <xsl:text>bs</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bu' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bu' or */*[local-name()='code']='bu']">
                    <xsl:text>bu</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/bz' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/bz' or */*[local-name()='code']='bz']">
                    <xsl:text>bz</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ca' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ca' or */*[local-name()='code']='ca']">
                    <xsl:text>ca</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cb' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cb' or */*[local-name()='code']='cb']">
                    <xsl:text>cb</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cc' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cc' or */*[local-name()='code']='cc']">
                    <xsl:text>cc</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/ce' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/ce' or */*[local-name()='code']='ce']">
                    <xsl:text>ce</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cp' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cp' or */*[local-name()='code']='cp']">
                    <xsl:text>cp</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cu' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cu' or */*[local-name()='code']='cu']">
                    <xsl:text>cu</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/cz' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/cz' or */*[local-name()='code']='cz']">
                    <xsl:text>cz</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/da' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/da' or */*[local-name()='code']='da']">
                    <xsl:text>da</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/db' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/db' or */*[local-name()='code']='db']">
                    <xsl:text>db</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dc' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dc' or */*[local-name()='code']='dc']">
                    <xsl:text>dc</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dd' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dd' or */*[local-name()='code']='dd']">
                    <xsl:text>dd</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/de' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/de' or */*[local-name()='code']='de']">
                    <xsl:text>de</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/df' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/df' or */*[local-name()='code']='df']">
                    <xsl:text>df</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dg' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dg' or */*[local-name()='code']='dg']">
                    <xsl:text>dg</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dh' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dh' or */*[local-name()='code']='dh']">
                    <xsl:text>dh</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:cartographicAttributes/bf:Cartographic/bf:projection[@rdf:resource='http://id.loc.gov/vocabulary/mprojection/dl' or */@rdf:about='http://id.loc.gov/vocabulary/mprojection/dl' or */*[local-name()='code']='dl']">
                    <xsl:text>dl</xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>  </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-5 != ''">
              <xsl:value-of select="$vPosition-5"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>  </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-6">
            <xsl:choose>
              <xsl:when test="$v008Format='BK' or                         $v008Format='CR'">
                <xsl:variable name="vNoC">
                  <!--<xsl:for-each select="bf:Work/bf:genreForm|bf:Work/bf:supplementaryContent">-->
                  <xsl:for-each select="bf:Work/bf:supplementaryContent">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/bibliography' or                         */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/bibliography'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/discography' or                         */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/discography'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/film' or                         */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/film'">q</xsl:when>
                      <!--
                        kefo note - match specs for 24-27 for now - 19 Aug 2022 - and so comment out  
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/bibliography' or
                                      */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/bibliography'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026048' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026048'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026057' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026057'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026086' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026086'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026092' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026092'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026109' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026109'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026351' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026351'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026049' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026049'">h</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026112' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026112'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026438' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026438'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/discography' or
                                      */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/discography'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026351' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026351'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026039' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026039'">m</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/msupplcont/film' or
                                      */@rdf:about='http://id.loc.gov/vocabulary/msupplcont/film'">q</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026087' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026087'">r</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026181' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026181'">s</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2015026093' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2015026093'">t</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026208' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026208'">y</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026707' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026707'">z</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026055' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026055'">5</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026266' or
                                      */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026266'">6</xsl:when>
                      -->
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vNoCLength">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">4</xsl:when>
                    <xsl:when test="$v008Format='CR'">3</xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="vNoCPadded">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vNoC"/>
                    <xsl:with-param name="pStringLength">
                      <xsl:value-of select="$vNoCLength"/>
                    </xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:variable name="vNoCFinal">
                  <xsl:choose>
                    <xsl:when test="string-length($vNoCPadded) &gt; $vNoCLength">
                      <xsl:value-of select="substring($vNoCPadded,1,$vNoCLength)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$vNoCPadded"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$v008Format='BK'">
                    <xsl:value-of select="$vNoCFinal"/>
                  </xsl:when>
                  <xsl:when test="$v008Format='CR'">
                    <xsl:value-of select="concat(' ',$vNoCFinal)"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="$v008Format='CF'">
                <xsl:choose>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/num' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/num' or */*[local-name()='code']='num']">
                    <xsl:text>  a </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/com' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/com' or */*[local-name()='code']='com']">
                    <xsl:text>  b </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/rep' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/rep' or */*[local-name()='code']='rep']">
                    <xsl:text>  c </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/doc' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/doc' or */*[local-name()='code']='doc']">
                    <xsl:text>  d </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/bda' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/bda' or */*[local-name()='code']='bda']">
                    <xsl:text>  e </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/fon' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/fon' or */*[local-name()='code']='fon']">
                    <xsl:text>  f </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/gam' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/gam' or */*[local-name()='code']='gam']">
                    <xsl:text>  g </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/sou' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/sou' or */*[local-name()='code']='sou']">
                    <xsl:text>  h </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/inm' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/inm' or */*[local-name()='code']='inm']">
                    <xsl:text>  i </xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/ons' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/ons' or */*[local-name()='code']='ons']">
                    <xsl:text>  j </xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>  | </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="$v008Format='MP'">
                <xsl:text> |  </xsl:text>
              </xsl:when>
              <xsl:when test="$v008Format='MU'">
                <xsl:value-of select="substring($vMUSupplContent,1,4)"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-6 != ''">
              <xsl:value-of select="$vPosition-6"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>    </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-7">
            <xsl:choose>
              <xsl:when test="$v008Format='BK' or                         $v008Format='CF' or                         $v008Format='MP' or                         $v008Format='CR' or                         $v008Format='VM'">
                <xsl:for-each select="bf:Work/bflc:governmentPubType">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:choose>
                        <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/a' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/a' or                               */*[local-name()='code']='a'">
                          <xsl:text>a</xsl:text>
                        </xsl:when>
                        <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/c' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/c' or                               */*[local-name()='code']='c'">
                          <xsl:text>c</xsl:text>
                        </xsl:when>
                        <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/f' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/f' or                               */*[local-name()='code']='f'">
                          <xsl:text>f</xsl:text>
                        </xsl:when>
                        <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/i' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/i' or                               */*[local-name()='code']='i'">
                          <xsl:text>i</xsl:text>
                        </xsl:when>
                        <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/l' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/l' or                               */*[local-name()='code']='l'">
                          <xsl:text>l</xsl:text>
                        </xsl:when>
                        <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/m' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/m' or                               */*[local-name()='code']='m'">
                          <xsl:text>m</xsl:text>
                        </xsl:when>
                        <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/mgovtpubtype/s' or                               */@rdf:about='http://id.loc.gov/vocabulary/mgovtpubtype/s' or                               */*[local-name()='code']='s'">
                          <xsl:text>s</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text>o</xsl:text>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 008.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="$v008Format='MU'">
                <xsl:value-of select="substring($vMUSupplContent,5,1)"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-7 != ''">
              <xsl:value-of select="$vPosition-7"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text> </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-8">
            <xsl:choose>
              <xsl:when test="$v008Format='BK' or                         $v008Format='CR'">
                <xsl:choose>
                  <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026068' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026068']">
                    <xsl:text>1</xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>0</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="$v008Format='MP' or $v008Format='VM'">
                <xsl:choose>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hd'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hd'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='hd'">
                    <xsl:text>a</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/he'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/he'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='he'">
                    <xsl:text>b</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/hg'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/hg'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='hg'">
                    <xsl:text>c</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cr'] or                             bf:Instance/bf:carrier/*[@rdf:about='http://id.loc.gov/vocabulary/carriers/cr'] or                             bf:Instance/bf:carrier/*/*[local-name()='code']='cr'">
                    <xsl:text>o</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:carrier[@rdf:resource='http://id.loc.gov/vocabulary/carriers/cz' or */@rdf:about='http://id.loc.gov/vocabulary/carriers/cz' or */*[local-name()='code']='cz']">
                    <xsl:text>s</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:fontSize[@rdf:resource='http://id.loc.gov/vocabulary/mfont/lp'] or                             bf:Instance/bf:fontSize/*[@rdf:about='http://id.loc.gov/vocabulary/mfont/lp'] or                             bf:Instance/bf:fontSize/*[contains(rdfs:label,'large print')]">
                    <xsl:text>d</xsl:text>
                  </xsl:when>
                  <xsl:when test="bf:Instance/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mtactile/brail'] or                             bf:Instance/bf:notation/*[@rdf:about='http://id.loc.gov/vocabulary/mtactile/brail'] or                             bf:Instance/bf:notation/*[contains(rdfs:label,'braille')]">
                    <xsl:text>f</xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text> </xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="$v008Format='MU'">
                <xsl:value-of select="substring($vMUSupplContent,6,1)"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-8 != ''">
              <xsl:value-of select="$vPosition-8"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>|</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-9">
            <xsl:choose>
              <xsl:when test="$v008Format='BK' or                         $v008Format='MP'">
                <xsl:variable name="v008-30">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2016026082' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2016026082']">1</xsl:when>
                        <xsl:otherwise>0</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='MP'">
                      <xsl:value-of select="' '"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-30"/>
                <xsl:variable name="v008-31">
                  <xsl:choose>
                    <xsl:when test="bf:Instance/bf:supplementaryContent/*[contains(rdfs:label,'index')]">1</xsl:when>
                    <xsl:otherwise>|</xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-31"/>
              </xsl:when>
              <xsl:when test="$v008Format='MU'">
                <xsl:variable name="vLitText">
                  <xsl:for-each select="bf:Work/bf:genreForm">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026047' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026047'">a</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026049' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026049'">b</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026068' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026068'">c</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026297' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026297'">d</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026094' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026094'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026339' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026339'">f</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026113' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026113'">g</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/marcgt/his' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/his'">h</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026114' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026114'">i</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/marcgt/lan' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/lan'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026110' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026110'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026363' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026363'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026047' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026047'">m</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026344' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026344'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026481' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026481'">p</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/vocabulary/marcgt/reh' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/reh'">r</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026594' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026594'">s</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026115' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026115'">t</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vLitTextPadded">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vLitText"/>
                    <xsl:with-param name="pStringLength">2</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="string-length($vLitTextPadded) &gt; 2">
                    <xsl:value-of select="substring($vLitTextPadded,1,2)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vLitTextPadded"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:when test="$v008Format='CR' or $v008Format='VM'">
                <xsl:value-of select="' '"/>
                <xsl:value-of select="' '"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-9 != ''">
              <xsl:value-of select="$vPosition-9"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>||</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text> </xsl:text>
          <xsl:variable name="vPosition-11">
            <xsl:choose>
              <xsl:when test="$v008Format='BK' or                         $v008Format='CR' or                         $v008Format='VM'">
                <xsl:variable name="v008-33">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026339' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026339']">1</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026297' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026297']">d</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026094' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026094']">e</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2015026020' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2015026020']">f</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026110' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026110']">h</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026141' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026141']">i</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026542' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026542']">j</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026339' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026339']">m</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026481' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026481']">p</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026363' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026363']">s</xsl:when>
                        <xsl:otherwise>0</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='CR'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/a' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/a' or */*[local-name()='code']='a']">a</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/b' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/b' or */*[local-name()='code']='b']">b</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/c' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/c' or */*[local-name()='code']='c']">c</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/d' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/d' or */*[local-name()='code']='d']">d</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/e' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/e' or */*[local-name()='code']='e']">e</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/f' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/f' or */*[local-name()='code']='f']">f</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/g' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/g' or */*[local-name()='code']='g']">g</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/h' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/h' or */*[local-name()='code']='h']">h</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/i' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/i' or */*[local-name()='code']='i']">i</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/j' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/j' or */*[local-name()='code']='j']">j</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/k' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/k' or */*[local-name()='code']='k']">k</xsl:when>
                        <xsl:when test="bf:Work/bf:notation[@rdf:resource='http://id.loc.gov/vocabulary/mscript/l' or */@rdf:about='http://id.loc.gov/vocabulary/mscript/l' or */*[local-name()='code']='l']">l</xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="' '"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='VM'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027218' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027218']">a</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/kit' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/kit']">b</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/art' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/art']">c</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/dio' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/dio']">d</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/fls' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/fls']">f</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026158' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026158']">g</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027251' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027251']">i</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/gra' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/gra']">k</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/ted' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/ted']">l</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026406' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026406']">m</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/cha' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/cha']">n</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/fla' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/fla']">o</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/mic' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/mic']">p</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027245' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027245']">q</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/rea' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/rea']">r</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/sli' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/sli']">s</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/tra' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/tra']">t</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026723' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026723']">v</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/vocabulary/marcgt/toy' or */@rdf:about='http://id.loc.gov/vocabulary/marcgt/toy']">w</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-33"/>
                <xsl:variable name="v008-34">
                  <xsl:choose>
                    <xsl:when test="$v008Format='BK'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026047' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026047']">a</xsl:when>
                        <xsl:when test="bf:Work/bf:genreForm[@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026049' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026049']">d</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="$v008Format='CR'">
                      <xsl:for-each select="$vAdminMetadata/bf:note/*[rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/metaentry']">
                        <xsl:if test="position()=1">
                          <xsl:choose>
                            <xsl:when test="contains(translate(rdfs:label,$upper,$lower),'successive')">0</xsl:when>
                            <xsl:when test="contains(translate(rdfs:label,$upper,$lower),'latest')">1</xsl:when>
                            <xsl:when test="contains(translate(rdfs:label,$upper,$lower),'integrated')">2</xsl:when>
                            <xsl:otherwise>|</xsl:otherwise>
                          </xsl:choose>
                        </xsl:if>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:when test="$v008Format='VM'">
                      <xsl:choose>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/anim' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/anim']">a</xsl:when>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/animlive' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/animlive']">c</xsl:when>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/live' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/live']">l</xsl:when>
                        <xsl:when test="bf:Work/bflc:movingImageTechnique[@rdf:resource='http://id.loc.gov/vocabulary/mtechnique/other' or */@rdf:about='http://id.loc.gov/vocabulary/mtechnique/other']">z</xsl:when>
                        <xsl:otherwise>|</xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                  </xsl:choose>
                </xsl:variable>
                <xsl:value-of select="$v008-34"/>
              </xsl:when>
              <xsl:when test="$v008Format='MP'">
                <xsl:variable name="vSpecFormat">
                  <xsl:for-each select="bf:Work/bf:genreForm">
                    <xsl:choose>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026385' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026385'">e</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026151' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026151'">j</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026055' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026055'">k</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2014026158' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2014026158'">l</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026728' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026728'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2017027252' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2017027252'">o</xsl:when>
                      <xsl:when test="@rdf:resource='http://id.loc.gov/authorities/genreForms/gf2011026373' or */@rdf:about='http://id.loc.gov/authorities/genreForms/gf2011026373'">o</xsl:when>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:variable name="vSpecFormatPadded">
                  <xsl:call-template name="tPadRight">
                    <xsl:with-param name="pInput" select="$vSpecFormat"/>
                    <xsl:with-param name="pStringLength">2</xsl:with-param>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="string-length($vSpecFormatPadded) &gt; 2">
                    <xsl:value-of select="substring($vSpecFormatPadded,1,2)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vSpecFormatPadded"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-11 != ''">
              <xsl:value-of select="$vPosition-11"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>| </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="vPosition-12">
            <xsl:for-each select="bf:Work/bf:language[@rdf:resource]|bf:Work/bf:language[*/@rdf:about]|bf:Work/bf:language[*/*[local-name()='code']]">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:choose>
                    <xsl:when test="*/*[local-name()='code']">
                      <xsl:choose>
                        <xsl:when test="string-length(*/*[local-name()='code']) = 3">
                          <xsl:value-of select="*/*[local-name()='code']"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:when test="*[starts-with(@rdf:about,'http://id.loc.gov/vocabulary/languages/')] or starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                      <xsl:variable name="vCode">
                        <xsl:choose>
                          <xsl:when test="*[starts-with(@rdf:about,'http://id.loc.gov/vocabulary/languages/')]">
                            <xsl:value-of select="substring-after(*/@rdf:about,'http://id.loc.gov/vocabulary/languages/')"/>
                          </xsl:when>
                          <xsl:when test="starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/languages/')">
                            <xsl:value-of select="substring-after(@rdf:resource,'http://id.loc.gov/vocabulary/languages/')"/>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:variable>
                      <xsl:if test="string-length($vCode)=3">
                        <xsl:value-of select="$vCode"/>
                      </xsl:if>
                    </xsl:when>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 008.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vPosition-12 != ''">
              <xsl:value-of select="$vPosition-12"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>   </xsl:text>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:text>  </xsl:text>
        </marc:controlfield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (008).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[         (local-name()='Lccn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']) and         not(           bf:status/bf:Status/rdfs:label[text()='invalid'] or           bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or           bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'         )]" mode="generate-010">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:datafield>
          <xsl:attribute name="tag">010</xsl:attribute>
          <xsl:attribute name="ind1">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 010 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:for-each select="ancestor::bf:Instance/bf:identifiedBy/*[             (local-name()='Lccn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn']) and             (               bf:status/bf:Status/rdfs:label[text()='invalid'] or               bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or               bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'             )]/rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (010).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='Nbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Nbn']]" mode="generate-015">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">015</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="bf:source/bf:Source/*[local-name()='code']">
          <xsl:variable name="v015-2">
            <xsl:value-of select="bf:source/bf:Source/*[local-name()='code'][1]"/>
          </xsl:variable>
          <xsl:if test="$v015-2 != ''">
            <marc:subfield code="2">
              <xsl:value-of select="$v015-2"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="$vSourceUri != ''">
          <xsl:variable name="v015-2">
            <xsl:choose>
              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$vSourceUri"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v015-2 != ''">
            <marc:subfield code="2">
              <xsl:value-of select="$v015-2"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:adminMetadata/bf:AdminMetadata/bf:identifiedBy/bf:Local[bf:source/bf:Source] |                     bf:Work/bf:adminMetadata/bf:AdminMetadata/bf:identifiedBy/bf:Local[bf:source/bf:Source]" mode="generate-016">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vLAC">
      <xsl:choose>
        <xsl:when test="$vSourceUri='http://id.loc.gov/authorities/names/no2004037399' or                       bf:source/bf:Source/rdfs:label='OONL' or                       bf:source/bf:Source/rdfs:label='Library and Archives Canada'">
          <xsl:text>true</xsl:text>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">016</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="$vLAC='true'">
              <xsl:text> </xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>7</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 016 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="not($vLAC='true')">
          <xsl:choose>
            <xsl:when test="bf:source/bf:Source/*[local-name()='code']">
              <xsl:variable name="v016-2">
                <xsl:value-of select="bf:source/bf:Source/*[local-name()='code'][1]"/>
              </xsl:variable>
              <xsl:if test="$v016-2 != ''">
                <marc:subfield code="2">
                  <xsl:value-of select="$v016-2"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
            <xsl:when test="$vSourceUri != ''">
              <xsl:variable name="v016-2">
                <xsl:choose>
                  <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode">
                      <xsl:with-param name="pUri" select="$vSourceUri"/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vSourceUri"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$v016-2 != ''">
                <marc:subfield code="2">
                  <xsl:value-of select="$v016-2"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
          </xsl:choose>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='CopyrightNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CopyrightNumber']]" mode="generate-017">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">017</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="bf:assigner/bf:Agent/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 017 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:date">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="d">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 017 $d.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:note/bf:Note/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="i">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 017 $i.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[(local-name()='Isbn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn']) and rdf:value/text()]" mode="generate-020">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">020</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 020 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:for-each select="ancestor::bf:Instance/bf:acquisitionTerms">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="c">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 020 $c.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()] |        bf:Work/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']) and rdf:value/text()] |        bf:Instance/bf:identifiedBy/*[(local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']) and rdf:value/text()]" mode="generate-022">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">022</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='canceled'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:choose>
            <xsl:when test="local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']">
              <xsl:for-each select="rdf:value">
                <marc:subfield code="z">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </xsl:when>
            <xsl:when test="local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']">
              <xsl:for-each select="rdf:value">
                <marc:subfield code="m">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
        </xsl:when>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='incorrect'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/incorrect' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/incorrect'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="y">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:choose>
            <xsl:when test="local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']">
              <xsl:for-each select="rdf:value">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="a">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 022 $a.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:when test="local-name()='IssnL' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/IssnL']">
              <xsl:for-each select="rdf:value">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <marc:subfield code="l">
                      <xsl:value-of select="."/>
                    </marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 022 $l.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:assigner/bf:Agent/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 022 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='Isrc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isrc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Upc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Upc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ismn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ismn']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ean' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ean']] |       bf:Instance/bf:identifiedBy/*[local-name()='Sici' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Sici']] |       bf:Instance/bf:identifiedBy/*[local-name()='Ansi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ansi']] |       bf:Instance/bf:identifiedBy/*[local-name()='Doi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Doi']] |       bf:Work/bf:identifiedBy/*[local-name()='Eidr' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Eidr']] |       bf:Instance/bf:identifiedBy/*[local-name()='Gtin14Number' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Gtin14Number']] |       bf:Instance/bf:identifiedBy/*[local-name()='Hdl' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hdl']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isan' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isan']] |       bf:Instance/bf:identifiedBy/*[local-name()='Isni' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isni']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iso' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iso']] |       bf:Instance/bf:identifiedBy/*[local-name()='Istc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Istc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Iswc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iswc']] |       bf:Instance/bf:identifiedBy/*[local-name()='Urn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Urn']] |       bf:Instance/bf:identifiedBy/bf:Identifier[not(rdf:type or bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo')]" mode="generate-024">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">024</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name()='Isrc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isrc']">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='Upc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Upc']">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='Ismn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ismn']">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='Ean' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ean']">
              <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='Sici' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Sici']">
              <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='Identifier' and not(rdf:type) and not(rdfs:label) and not (bf:source)">
              <xsl:text>8</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>7</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 024 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:variable name="v024-2">
        <xsl:choose>
          <xsl:when test="local-name()='Ansi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Ansi']">
            <xsl:text>ansi</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Doi' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Doi']">
            <xsl:text>doi</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Eidr' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Eidr'] or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Eidr']">
            <xsl:text>eidr</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Hdl' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Hdl']">
            <xsl:text>hdl</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Gtin14Number' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Gtin14Number']">
            <xsl:text>gtin-14</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Isan' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isan']">
            <xsl:text>isan</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Isni' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isni']">
            <xsl:text>isni</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Iso' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iso']">
            <xsl:text>iso</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Istc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Istc']">
            <xsl:text>istc</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Iswc' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Iswc']">
            <xsl:text>iswc</xsl:text>
          </xsl:when>
          <xsl:when test="local-name()='Urn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Urn']">
            <xsl:text>urn</xsl:text>
          </xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 024 $2.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v024-2 != ''">
        <marc:subfield code="2">
          <xsl:value-of select="$v024-2"/>
        </marc:subfield>
      </xsl:if>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']] |                     //bf:Item/bf:identifiedBy/*[local-name()='LcOverseasAcq' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/LcOverseasAcq']]" mode="generate-025">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">025</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdf:value">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]|                     //bf:Item/bf:identifiedBy/*[local-name()='Fingerprint' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Fingerprint']]" mode="generate-026">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">026</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="e">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 026 $e.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="bf:source/bf:Source/*[local-name()='code']">
          <xsl:variable name="v026-2">
            <xsl:value-of select="bf:source/bf:Source/*[local-name()='code'][1]"/>
          </xsl:variable>
          <xsl:if test="$v026-2 != ''">
            <marc:subfield code="2">
              <xsl:value-of select="$v026-2"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="$vSourceUri != ''">
          <xsl:variable name="v026-2">
            <xsl:choose>
              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$vSourceUri"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v026-2 != ''">
            <marc:subfield code="2">
              <xsl:value-of select="$v026-2"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='Strn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn']]" mode="generate-027">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">027</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 027 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[(local-name()='AudioIssueNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AudioIssueNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MatrixNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MatrixNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPlate' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPlate']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicPublishingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPublishingNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='VideoRecordingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VideoRecordingNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='PublisherNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PublisherNumber']) and rdf:value/text()] |           bf:Instance/bf:identifiedBy/*[(local-name()='MusicDistributorNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicDistributorNumber']) and rdf:value/text()]" mode="generate-028">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">028</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name()='AudioIssueNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AudioIssueNumber']">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='MatrixNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MatrixNumber']">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='MusicPlate' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPlate']">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='MusicPublishingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicPublishingNumber']">
              <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='VideoRecordingNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VideoRecordingNumber']">
              <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="local-name()='MusicDistributorNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/MusicDistributorNumber']">
              <xsl:text>6</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>5</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text>2</xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 028 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:assigner/bf:Agent/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 028 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:qualifier">
        <marc:subfield code="q">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='Coden' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden']]" mode="generate-030">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">030</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 030 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='PostalRegistration' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/PostalRegistration']]" mode="generate-032">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">032</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 032 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:assigner/bf:Agent/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 032 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:capture/bf:Capture[bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf'] or bf:place/@rdf:resource]" mode="generate-033">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">033</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="count(bf:date)=1">
              <xsl:choose>
                <xsl:when test="contains(bf:date,'/')">
                  <xsl:text>2</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>0</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:when test="count(bf:date) &gt; 1">
              <xsl:text>1</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:note/bf:Note[rdfs:label='capture']">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="bf:note/bf:Note[rdfs:label='broadcast']">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="bf:note/bf:Note[rdfs:label='finding']">
              <xsl:text>2</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 033 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="count(bf:date)=1">
          <xsl:choose>
            <xsl:when test="bf:date/@rdf:datatype='http://id.loc.gov/datatypes/edtf'">
              <xsl:choose>
                <xsl:when test="contains(bf:date,'/')">
                  <xsl:variable name="vDate1">
                    <xsl:variable name="vEDTFDate1">
                      <xsl:call-template name="EDTF-Date1">
                        <xsl:with-param name="pEDTFDate" select="bf:date"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:call-template name="EDTF-to-033">
                      <xsl:with-param name="pEDTFDate" select="$vEDTFDate1"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:variable name="vDate2">
                    <xsl:variable name="vEDTFDate2">
                      <xsl:call-template name="EDTF-Date2">
                        <xsl:with-param name="pEDTFDate" select="bf:date"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <xsl:call-template name="EDTF-to-033">
                      <xsl:with-param name="pEDTFDate" select="$vEDTFDate2"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <marc:subfield code="a">
                    <xsl:value-of select="$vDate1"/>
                  </marc:subfield>
                  <marc:subfield code="a">
                    <xsl:value-of select="$vDate2"/>
                  </marc:subfield>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:variable name="v033Date">
                    <xsl:call-template name="EDTF-to-033">
                      <xsl:with-param name="pEDTFDate" select="bf:date"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <marc:subfield code="a">
                    <xsl:value-of select="$v033Date"/>
                  </marc:subfield>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed bf:date node, value <xsl:value-of select="bf:date"/>. Unknown data type (must be EDTF)</xsl:message>
              <marc:subfield code="a">--------</marc:subfield>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:date">
            <xsl:choose>
              <xsl:when test="@rdf:datatype='http://id.loc.gov/datatypes/edtf'">
                <xsl:choose>
                  <xsl:when test="contains(.,'/')">
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed bf:date node, value <xsl:value-of select="."/>. Range of EDTF dates detected where only single value allowed.</xsl:message>
                    <marc:subfield code="a">--------</marc:subfield>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:variable name="v033Date">
                      <xsl:call-template name="EDTF-to-033">
                        <xsl:with-param name="pEDTFDate" select="."/>
                      </xsl:call-template>
                    </xsl:variable>
                    <marc:subfield code="a">
                      <xsl:value-of select="$v033Date"/>
                    </marc:subfield>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed bf:date node, value <xsl:value-of select="."/>. Unknown data type (must be EDTF)</xsl:message>
                <marc:subfield code="a">--------</marc:subfield>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="bf:place">
        <xsl:variable name="vPlaceUri" select="@rdf:resource|bf:Place/@rdf:about"/>
        <xsl:choose>
          <xsl:when test="starts-with($vPlaceUri,'http://id.loc.gov/authorities/classification/G')">
            <xsl:variable name="vPlaceCode">
              <xsl:call-template name="tUriCode">
                <xsl:with-param name="pUri" select="$vPlaceUri"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="contains($vPlaceCode,'.')">
                <marc:subfield code="b">
                  <xsl:value-of select="substring-before($vPlaceCode,'.')"/>
                </marc:subfield>
                <marc:subfield code="c">
                  <xsl:value-of select="substring-after($vPlaceCode,'.')"/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <marc:subfield code="b">
                  <xsl:value-of select="$vPlaceCode"/>
                </marc:subfield>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="bf:Place/rdf:value or bf:Place/rdfs:label">
              <marc:subfield code="p">
                <xsl:choose>
                  <xsl:when test="bf:Place/rdf:value">
                    <xsl:value-of select="bf:Place/rdf:value"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:Place/rdfs:label"/>
                    </xsl:call-template>
                  </xsl:otherwise>
                </xsl:choose>
              </marc:subfield>
            </xsl:if>
            <xsl:choose>
              <xsl:when test="bf:Place/bf:source/bf:Source/*[local-name()='code']">
                <xsl:variable name="v033-2">
                  <xsl:value-of select="bf:Place/bf:source/bf:Source/*[local-name()='code'][1]"/>
                </xsl:variable>
                <xsl:if test="$v033-2 != ''">
                  <marc:subfield code="2">
                    <xsl:value-of select="$v033-2"/>
                  </marc:subfield>
                </xsl:if>
              </xsl:when>
              <xsl:when test="$vSourceUri != ''">
                <xsl:variable name="v033-2">
                  <xsl:choose>
                    <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                      <xsl:call-template name="tUriCode">
                        <xsl:with-param name="pUri" select="$vSourceUri"/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$vSourceUri"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:if test="$v033-2 != ''">
                  <marc:subfield code="2">
                    <xsl:value-of select="$v033-2"/>
                  </marc:subfield>
                </xsl:if>
              </xsl:when>
            </xsl:choose>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:scale/bf:Scale[starts-with(rdfs:label,'linear') or starts-with(rdfs:label,'angular')]" mode="generate-034">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">034</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text>1</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:variable name="v034-a">
        <xsl:choose>
          <xsl:when test="starts-with(rdfs:label,'linear')">
            <xsl:text>a</xsl:text>
          </xsl:when>
          <xsl:when test="starts-with(rdfs:label,'angular')">
            <xsl:text>b</xsl:text>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v034-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v034-a"/>
        </marc:subfield>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="rdfs:label='linear horizontal'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="rdfs:label='linear vertical'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="c">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='Local' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local']]" mode="generate-035">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vAssignerUri">
      <xsl:choose>
        <xsl:when test="bf:assigner/@rdf:resource">
          <xsl:value-of select="bf:assigner/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:assigner/*/@rdf:about">
          <xsl:value-of select="bf:assigner/*/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vAssignerCode">
      <xsl:choose>
        <xsl:when test="bf:assigner/*/*[local-name()='code']">
          <xsl:value-of select="bf:assigner/*/*[local-name()='code'][1]"/>
        </xsl:when>
        <xsl:when test="$vAssignerUri != ''">
          <xsl:choose>
            <xsl:when test="contains($vAssignerUri,'id.loc.gov')">
              <xsl:call-template name="tUriCode">
                <xsl:with-param name="pUri" select="$vAssignerUri"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$vAssignerUri"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vAssignerString">
      <xsl:choose>
        <xsl:when test="$vAssignerCode != ''">
          <xsl:value-of select="concat('(',$vAssignerCode,')')"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">035</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/bf:Status/rdfs:label[text()='invalid'] or                     bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/invalid' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/invalid'">
          <xsl:variable name="v035-z">
            <xsl:value-of select="concat($vAssignerString,rdf:value)"/>
          </xsl:variable>
          <xsl:if test="$v035-z != ''">
            <marc:subfield code="z">
              <xsl:value-of select="$v035-z"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:otherwise>
          <xsl:variable name="v035-a">
            <xsl:value-of select="concat($vAssignerString,rdf:value)"/>
          </xsl:variable>
          <xsl:if test="$v035-a != ''">
            <marc:subfield code="a">
              <xsl:value-of select="$v035-a"/>
            </marc:subfield>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='StudyNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StudyNumber']]" mode="generate-036">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:datafield>
          <xsl:attribute name="tag">036</xsl:attribute>
          <xsl:attribute name="ind1">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 036 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:for-each select="bf:assigner/bf:Agent/rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="b">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 036 $b.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (036).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:acquisitionSource/bf:AcquisitionSource |                     //bf:Item/bf:acquisitionSource/bf:AcquisitionSource" mode="generate-037">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">037</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:note/bf:Note/rdfs:label[text()='intervening source']">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="bf:note/bf:Note/rdfs:label[text()='current source']">
              <xsl:text>3</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 037 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/*[local-name()='StockNumber' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/StudyNumber']]/rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 037 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:variable name="v037-b">
        <xsl:choose>
          <xsl:when test="rdfs:label">
            <xsl:for-each select="rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 037 $b.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="bf:source/bf:Source/rdfs:label">
            <xsl:for-each select="bf:source/bf:Source/rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 037 $b.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v037-b != ''">
        <marc:subfield code="b">
          <xsl:value-of select="$v037-b"/>
        </marc:subfield>
      </xsl:if>
      <xsl:for-each select="bf:acquisitionTerms">
        <marc:subfield code="c">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:note/bf:Note/rdfs:label[text() != 'intervening source' and text() != 'current source']">
        <marc:subfield code="n">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:adminMetadata/bf:AdminMetadata/bf:assigner |                     bf:Work/bf:adminMetadata/bf:AdminMetadata/bf:assigner" mode="generate-040">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vLanguageUri">
      <xsl:choose>
        <xsl:when test="../bf:descriptionLanguage/@rdf:resource">
          <xsl:value-of select="../bf:descriptionLanguage/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="../bf:descriptionLanguage/*/@rdf:about">
          <xsl:value-of select="../bf:descriptionLanguage/*/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:datafield>
          <xsl:attribute name="tag">040</xsl:attribute>
          <xsl:attribute name="ind1">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:for-each select="*/*[local-name()='code']">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 040 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="$vLanguageUri != '' and contains($vLanguageUri,'id.loc.gov')">
              <xsl:variable name="v040-b">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="$vLanguageUri"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:if test="$v040-b != ''">
                <marc:subfield code="b">
                  <xsl:value-of select="$v040-b"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
            <xsl:when test="../bf:descriptionLanguage/*/*[local-name()='code']">
              <xsl:variable name="v040-b">
                <xsl:value-of select="../bf:descriptionLanguage/*/*[local-name()='code']"/>
              </xsl:variable>
              <xsl:if test="$v040-b != ''">
                <marc:subfield code="b">
                  <xsl:value-of select="$v040-b"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
          </xsl:choose>
          <xsl:for-each select="*/*[local-name()='code']">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="c">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 040 $c.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="count(../bf:descriptionModifier) &gt; 0">
              <xsl:variable name="vLastAgentUri">
                <xsl:choose>
                  <xsl:when test="../bf:descriptionModifier[count(../bf:descriptionModifier)]/@rdf:resource">
                    <xsl:value-of select="../bf:descriptionModifier[count(../bf:descriptionModifier)]/@rdf:resource"/>
                  </xsl:when>
                  <xsl:when test="../bf:descriptionModifier[count(../bf:descriptionModifier)]/*/@rdf:about">
                    <xsl:value-of select="../bf:descriptionModifier[count(../bf:descriptionModifier)]/*/@rdf:about"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="vModifierCode">
                <xsl:choose>
                  <xsl:when test="$vLastAgentUri != '' and contains($vLastAgentUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode">
                      <xsl:with-param name="pUri" select="$vLastAgentUri"/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="../bf:descriptionModifier[count(../bf:descriptionModifier)]/*/*[local-name()='code']"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vModifierCode != ''">
                  <xsl:variable name="v040-d">
                    <xsl:value-of select="$vModifierCode"/>
                  </xsl:variable>
                  <xsl:if test="$v040-d != ''">
                    <marc:subfield code="d">
                      <xsl:value-of select="$v040-d"/>
                    </marc:subfield>
                  </xsl:if>
                </xsl:when>
              </xsl:choose>
            </xsl:when>
          </xsl:choose>
          <xsl:for-each select="../bf:descriptionConventions[not(contains(@rdf:resource,'isbd')) and                                                     not(contains(*/@rdf:about,'isbd')) and                                                     not(*/rdf:value='isbd') and                                                     not(*/*[local-name()='code']='isbd') and                                                     not(*/rdfs:label='isbd')]">
            <marc:subfield code="e">
              <xsl:variable name="vConvUri">
                <xsl:choose>
                  <xsl:when test="@rdf:resource">
                    <xsl:value-of select="@rdf:resource"/>
                  </xsl:when>
                  <xsl:when test="*/@rdf:about">
                    <xsl:value-of select="*/@rdf:about"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vConvUri != '' and contains($vConvUri,'id.loc.gov')">
                  <xsl:call-template name="tUriCode">
                    <xsl:with-param name="pUri" select="$vConvUri"/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:when test="*/rdf:value">
                  <xsl:value-of select="*/rdf:value"/>
                </xsl:when>
                <xsl:when test="*/*[local-name()='code']">
                  <xsl:value-of select="*/*[local-name()='code']"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="*/rdfs:label"/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (040).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Work/bf:language/bf:Language[bf:source]" mode="generate-041">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">041</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:variable name="vSubfield">
        <xsl:choose>
          <xsl:when test="bf:part='summary'">b</xsl:when>
          <xsl:when test="bf:part='sung or spoken text'">d</xsl:when>
          <xsl:when test="bf:part='libretto'">e</xsl:when>
          <xsl:when test="bf:part='table of contents'">f</xsl:when>
          <xsl:when test="bf:part='accompanying material'">g</xsl:when>
          <xsl:when test="bf:part='original'">h</xsl:when>
          <xsl:when test="bf:part='intertitles'">i</xsl:when>
          <xsl:when test="bf:part='subtitles or captions'">j</xsl:when>
          <xsl:when test="bf:part='intermediate translations'">k</xsl:when>
          <xsl:when test="bf:part='original accompanying materials'">m</xsl:when>
          <xsl:when test="bf:part='original libretto'">n</xsl:when>
          <xsl:when test="bf:part='captions'">p</xsl:when>
          <xsl:when test="bf:part='accessible audio'">q</xsl:when>
          <xsl:when test="bf:part='accessible visual material'">r</xsl:when>
          <xsl:when test="bf:part='accompanying transcripts'">t</xsl:when>
          <xsl:otherwise>a</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <marc:subfield>
        <xsl:attribute name="code">
          <xsl:value-of select="$vSubfield"/>
        </xsl:attribute>
        <xsl:value-of select="rdf:value"/>
      </marc:subfield>
      <marc:subfield code="2">
        <xsl:choose>
          <xsl:when test="bf:source/bf:Source/*[local-name()='code']">
            <xsl:value-of select="bf:source/bf:Source/*[local-name()='code']"/>
          </xsl:when>
          <xsl:when test="$vSourceUri != ''">
            <xsl:choose>
              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$vSourceUri"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/rdfs:label"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:geographicCoverage[contains(@rdf:resource,'id.loc.gov/vocabulary/geographicAreas') or                     contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/vocabulary/geographicAreas') or                     bf:GeographicCoverage/rdf:value]" mode="generate-043">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vUri">
      <xsl:choose>
        <xsl:when test="@rdf:resource">
          <xsl:value-of select="@rdf:resource"/>
        </xsl:when>
        <xsl:when test="*/@rdf:about">
          <xsl:value-of select="*/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">043</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="starts-with($vUri,'http://id.loc.gov/vocabulary/geographicAreas/')">
          <xsl:variable name="v043-a">
            <xsl:call-template name="tPadRight">
              <xsl:with-param name="pInput" select="substring-after($vUri,'http://id.loc.gov/vocabulary/geographicAreas/')"/>
              <xsl:with-param name="pPadChar" select="'-'"/>
              <xsl:with-param name="pStringLength" select="7"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:if test="$v043-a != ''">
            <marc:subfield code="a">
              <xsl:value-of select="$v043-a"/>
            </marc:subfield>
          </xsl:if>
          <xsl:variable name="v043-0">
            <xsl:value-of select="$vUri"/>
          </xsl:variable>
          <xsl:if test="$v043-0 != ''">
            <marc:subfield code="0">
              <xsl:value-of select="$v043-0"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="bf:GeographicCoverage/bf:source/bf:Source/bf:code='ISO 3166'">
          <xsl:for-each select="bf:GeographicCoverage/rdf:value">
            <marc:subfield code="c">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="$vUri != ''">
              <xsl:variable name="v043-0">
                <xsl:value-of select="$vUri"/>
              </xsl:variable>
              <xsl:if test="$v043-0 != ''">
                <marc:subfield code="0">
                  <xsl:value-of select="$v043-0"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
          </xsl:choose>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bf:GeographicCoverage/rdf:value">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="$vUri != ''">
              <xsl:variable name="v043-0">
                <xsl:value-of select="$vUri"/>
              </xsl:variable>
              <xsl:if test="$v043-0 != ''">
                <marc:subfield code="0">
                  <xsl:value-of select="$v043-0"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
          </xsl:choose>
          <xsl:for-each select="bf:GeographicCoverage/bf:source/bf:Source/bf:code">
            <marc:subfield code="2">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:originDate[@rdf:datatype='http://id.loc.gov/datatypes/edtf']" mode="generate-046">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="v046DateTime1">
      <xsl:call-template name="EDTF-Date1">
        <xsl:with-param name="pEDTFDate" select="."/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="v046DateTime2">
      <xsl:call-template name="EDTF-Date2">
        <xsl:with-param name="pEDTFDate" select="."/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="v046Date1">
      <xsl:call-template name="EDTF-DatePart">
        <xsl:with-param name="pEDTFDate" select="$v046DateTime1"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="v046Time1">
      <xsl:call-template name="EDTF-TimePart">
        <xsl:with-param name="pEDTFDate" select="$v046DateTime1"/>
      </xsl:call-template>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">046</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:variable name="v046-k">
        <xsl:value-of select="concat(translate($v046Date1,'-',''),translate($v046Time1,':',''))"/>
      </xsl:variable>
      <xsl:if test="$v046-k != ''">
        <marc:subfield code="k">
          <xsl:value-of select="$v046-k"/>
        </marc:subfield>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="$v046DateTime2">
          <xsl:variable name="v046-l">
            <xsl:variable name="v046Date2">
              <xsl:call-template name="EDTF-DatePart">
                <xsl:with-param name="pEDTFDate" select="$v046DateTime2"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:variable name="v046Time2">
              <xsl:call-template name="EDTF-TimePart">
                <xsl:with-param name="pEDTFDate" select="$v046DateTime2"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:value-of select="concat(translate($v046Date2,'-',''),translate($v046Time2,':',''))"/>
          </xsl:variable>
          <xsl:if test="$v046-l != ''">
            <marc:subfield code="l">
              <xsl:value-of select="$v046-l"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:classification/*[bf:classificationPortion/text() and (local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and not(bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada'])]" mode="generate-050">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">050</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="//bf:Item/bf:heldBy/*[@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or *[local-name()='label']='United States, Library of Congress' or *[local-name()='code']='DLC'] or                       //bf:Item/bf:heldBy/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc'">
              <xsl:text>0</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or                       bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or                       bf:assigner/*/*[local-name()='code']='DLC'">
              <xsl:text>0</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>4</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:itemPortion">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 050 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:identifier/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:geographicCoverage[contains(@rdf:resource,'id.loc.gov/authorities/classification/G') or                contains(bf:GeographicCoverage/@rdf:about,'id.loc.gov/authorities/classification/G')]" mode="generate-052">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vUri">
      <xsl:choose>
        <xsl:when test="@rdf:resource">
          <xsl:value-of select="@rdf:resource"/>
        </xsl:when>
        <xsl:when test="*/@rdf:about">
          <xsl:value-of select="*/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="v052Code">
      <xsl:call-template name="tUriCode">
        <xsl:with-param name="pUri" select="$vUri"/>
      </xsl:call-template>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">052</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:variable name="v052-a">
        <xsl:choose>
          <xsl:when test="contains($v052Code,'.')">
            <xsl:value-of select="substring-after(substring-before($v052Code,'.'),'G')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="substring-after($v052Code,'G')"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v052-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v052-a"/>
        </marc:subfield>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="contains($v052Code,'.')">
          <xsl:variable name="v052-b">
            <xsl:value-of select="substring-after($v052Code,'.')"/>
          </xsl:variable>
          <xsl:if test="$v052-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v052-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:classification/*[(local-name()='ClassificationLcc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationLcc') and bf:assigner[@rdf:resource='http://id.loc.gov/authorities/names/no2004037399' or */@rdf:about='http://id.loc.gov/authorities/names/no2004037399' or */rdfs:label='Library and Archives Canada']]" mode="generate-055">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">055</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text>0</xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bf:classificationPortion">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 055 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:itemPortion">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 055 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about[not(contains(.,'example.org'))]">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:classification/*[local-name()='ClassificationNlm' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationNlm']" mode="generate-060">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">060</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnlm' or */@rdf:about='http://id.loc.gov/vocabulary/organizations/dnlm']">
              <xsl:text>0</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>4</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:itemPortion">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 060 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about[not(contains(.,'example.org'))]">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:classification/bf:Classification[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal' or                     bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal']" mode="generate-070">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">070</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:itemPortion">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 070 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:subject/bf:Topic[*[local-name()='code']]" mode="generate-072">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">072</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:source[@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/agricola' or                       */@rdf:about='http://id.loc.gov/vocabulary/classSchemes/agricola' or                       */*[local-name()='code'] = 'agricola']">
              <xsl:text>0</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>7</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="*[local-name()='code']">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:choose>
                <xsl:when test="contains(.,' ')">
                  <xsl:value-of select="substring-before(.,' ')"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="."/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 072 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="contains(*[local-name()='code'][1],' ')">
          <xsl:call-template name="tToken2Subfields">
            <xsl:with-param name="pString" select="substring-after(*[local-name()='code'][1],' ')"/>
            <xsl:with-param name="pSubfieldCode" select="'x'"/>
            <xsl:with-param name="pSeparator" select="' '"/>
          </xsl:call-template>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="bf:source[not(@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/agricola' or                        bf:Source/@rdf:about='http://id.loc.gov/vocabulary/classSchemes/agricola' or                        bf:Source/*[local-name()='code'] = 'agricola')]">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:choose>
                <xsl:when test="contains(@rdf:resource,'bisacsh') or                         contains(bf:Source/@rdf:about,'bisacsh')">
                  <xsl:text>bisacsh</xsl:text>
                </xsl:when>
                <xsl:when test="bf:Source/*[local-name()='code']">
                  <xsl:for-each select="bf:Source/*[local-name()='code']">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 072 $2.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:when test="@rdf:resource">
                  <xsl:value-of select="@rdf:resource"/>
                </xsl:when>
                <xsl:when test="bf:Source/@rdf:about">
                  <xsl:value-of select="bf:Source/@rdf:about"/>
                </xsl:when>
                <xsl:when test="bf:Source/rdfs:label">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="bf:Source/rdfs:label"/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>Unable to determine source</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 072 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dgpo' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dgpo']" mode="generate-074">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">074</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 074 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:classification/*[(local-name()='ClassificationDdc' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ClassificationDdc') and bf:classificationPortion/text()]" mode="generate-082">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">082</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:edition = 'full'">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="bf:edition = 'abridged'">
              <xsl:text>1</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>7</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or                       bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc' or                       //bf:Item/bf:heldBy[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc']">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="bf:assigner">
              <xsl:text>4</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:itemPortion">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 082 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="not(bf:assigner[@rdf:resource='http://id.loc.gov/vocabulary/organizations/dlc' or */@rdf:about='http://id.loc.gov/vocabulary/organizations/dlc'])">
          <xsl:for-each select="bf:assigner/bf:Agent/rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="q">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 082 $q.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="bf:source">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:choose>
                <xsl:when test="starts-with(@rdf:resource,'http://id.loc.gov/vocabulary/classSchemes/ddc')">
                  <xsl:value-of select="substring-after(@rdf:resource,'http://id.loc.gov/vocabulary/classSchemes/ddc')"/>
                </xsl:when>
                <xsl:when test="starts-with(*/@rdf:about,'http://id.loc.gov/vocabulary/classSchemes/ddc')">
                  <xsl:value-of select="substring-after(*/@rdf:about,'http://id.loc.gov/vocabulary/classSchemes/ddc')"/>
                </xsl:when>
                <xsl:when test="rdfs:Resource/rdfs:label">
                  <xsl:value-of select="rdfs:Resource/rdfs:label"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="*/*[local-name()='code']"/>
                  </xsl:call-template>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 082 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:classification/bf:Classification[not(rdf:type or bf:assigner/@rdf:resource='http://id.loc.gov/vocabulary/organizations/dnal' or bf:assigner/*/@rdf:about='http://id.loc.gov/vocabulary/organizations/dnal')]" mode="generate-084">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">084</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bf:classificationPortion">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:itemPortion">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 084 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:assigner">
        <marc:subfield code="q">
          <xsl:variable name="vUri">
            <xsl:choose>
              <xsl:when test="@rdf:resource">
                <xsl:value-of select="@rdf:resource"/>
              </xsl:when>
              <xsl:when test="*/@rdf:about">
                <xsl:value-of select="*/@rdf:about"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:variable name="vAssignerCode">
            <xsl:call-template name="tUriCode">
              <xsl:with-param name="pUri" select="$vUri"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vAssignerCode != ''">
              <xsl:value-of select="$vAssignerCode"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="*/rdfs:label"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="rdf:value/@rdf:resource">
              <xsl:value-of select="rdf:value/@rdf:resource"/>
            </xsl:when>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 084 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="//bf:Item/bf:shelfMark/bf:ShelfMark[not(rdf:type)]" mode="generate-084">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">084</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:assigner">
        <marc:subfield code="q">
          <xsl:choose>
            <xsl:when test="@rdf:resource">
              <xsl:call-template name="tUriCode">
                <xsl:with-param name="pUri" select="@rdf:resource"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:when test="*/@rdf:about">
              <xsl:call-template name="tUriCode">
                <xsl:with-param name="pUri" select="*/@rdf:about"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="*/rdfs:label"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 084 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:classification/bf:Classification[bf:source]" mode="generate-086">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">086</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:source/@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/sudocs' or bf:source/*/@rdf:about='http://id.loc.gov/vocabulary/classSchemes/sudocs'">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="bf:source/@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/cacodoc' or bf:source/*/@rdf:about='http://id.loc.gov/vocabulary/classSchemes/cacodoc'">
              <xsl:text>1</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='invalid'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 086 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="not(bf:source[@rdf:resource='http://id.loc.gov/vocabulary/classSchemes/sudocs' or */@rdf:about='http://id.loc.gov/vocabulary/classSchemes/sudocs' or @rdf:resource='http://id.loc.gov/vocabulary/classSchemes/cacdoc' or */@rdf:about='http://id.loc.gov/vocabulary/classSchemes/cacdoc'])">
          <xsl:for-each select="bf:source/bf:Source/bf:code">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="2">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 086 $2.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:identifiedBy/*[local-name()='ReportNumber' or rdf:type='http://id.loc.gov/ontologies/bibframe/ReportNumber']" mode="generate-088">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">088</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/cancinv' or                     translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='invalid'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="z">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdf:value">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 088 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]/bf:agent/*" mode="generate-vMainEntryTag">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vNameAuth">
      <xsl:choose>
        <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
          <xsl:call-template name="tGetMARCAuth">
            <xsl:with-param name="pUri" select="@rdf:about"/>
          </xsl:call-template>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vMainEntryTag">
      <xsl:choose>
        <xsl:when test="exsl:node-set($vNameAuth)//marc:record">
          <xsl:choose>
            <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='100']">
              <xsl:text>100</xsl:text>
            </xsl:when>
            <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='110']">
              <xsl:text>110</xsl:text>
            </xsl:when>
            <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag='111']">
              <xsl:text>111</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:when>
        <xsl:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
          <xsl:text>110</xsl:text>
        </xsl:when>
        <xsl:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
          <xsl:text>111</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>100</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vAuthSubfields">
      <xsl:choose>
        <xsl:when test="$vMainEntryTag='100'">
          <xsl:text>abcdgjq</xsl:text>
        </xsl:when>
        <xsl:when test="$vMainEntryTag='110'">
          <xsl:text>abcdgn</xsl:text>
        </xsl:when>
        <xsl:when test="$vMainEntryTag='111'">
          <xsl:text>acdegnq</xsl:text>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <xsl:variable name="vXmlLang">
          <xsl:value-of select="rdfs:label/@xml:lang"/>
        </xsl:variable>
        <marc:datafield>
          <xsl:attribute name="tag">
            <xsl:value-of select="$vMainEntryTag"/>
          </xsl:attribute>
          <xsl:if test="$vXmlLang != ''">
            <xsl:attribute name="xml:lang">
              <xsl:value-of select="$vXmlLang"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:attribute name="ind1">
            <xsl:variable name="vInd">
              <xsl:choose>
                <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]">
                  <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]/@ind1"/>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='100'">
                  <xsl:choose>
                    <xsl:when test="contains(local-name(),'Family')">
                      <xsl:text>3</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:text>1</xsl:text>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='110'">
                  <xsl:choose>
                    <xsl:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                      <xsl:text>1</xsl:text>
                    </xsl:when>
                  </xsl:choose>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vInd != ''">
                <xsl:value-of select="$vInd"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text>2</xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:choose>
            <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]">
              <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vMainEntryTag]/marc:subfield[contains($vAuthSubfields,@code)]">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code"/>
                  </xsl:attribute>
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:variable name="vvMainEntryTag-a">
                <xsl:choose>
                  <xsl:when test="$vMainEntryTag='100'">
                    <xsl:choose>
                      <xsl:when test="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue">
                        <xsl:for-each select="madsrdf:elementList/madsrdf:FullNameElement/madsrdf:elementValue[1]">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="madsrdf:authoritativeLabel">
                        <xsl:for-each select="madsrdf:authoritativeLabel">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:for-each select="rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:choose>
                      <xsl:when test="madsrdf:elementList">
                        <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:when test="madsrdf:authoritativeLabel">
                        <xsl:for-each select="madsrdf:authoritativeLabel">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:for-each select="rdfs:label">
                          <xsl:choose>
                            <xsl:when test="position() = 1">
                              <xsl:call-template name="tChopPunct">
                                <xsl:with-param name="pString" select="."/>
                              </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $a.</xsl:message>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:for-each>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$vvMainEntryTag-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$vvMainEntryTag-a"/>
                </marc:subfield>
              </xsl:if>
              <xsl:choose>
                <xsl:when test="$vMainEntryTag='110'">
                  <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="b">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vMainEntryTag='100'">
                  <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='111'">
                  <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vMainEntryTag='100'">
                  <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="d">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $d.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vMainEntryTag='100'">
                  <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="q">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $q.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:when test="$vMainEntryTag='111'">
                  <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="q">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:for-each select="@rdf:about[                                     not(contains(.,'example.org')) and                                      not(contains(.,'REPLACE')) and                                      not(contains(., '/agents/'))                 ]">
            <marc:subfield code="0">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value"/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="@rdf:about[           contains(., '/agents/')           ]">
            <marc:subfield code="1">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="$vMainEntryTag='100' or $vMainEntryTag='110'">
              <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="e">
                  <xsl:choose>
                    <xsl:when test="madsrdf:authoritativeLabel">
                      <xsl:for-each select="madsrdf:authoritativeLabel">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="$vMainEntryTag='111'">
              <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="j">
                  <xsl:choose>
                    <xsl:when test="madsrdf:authoritativeLabel">
                      <xsl:for-each select="madsrdf:authoritativeLabel">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $j.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $j.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
            </xsl:when>
          </xsl:choose>
          <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
            <marc:subfield code="4">
              <xsl:choose>
                <xsl:when test="madsrdf:code">
                  <xsl:for-each select="madsrdf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $4.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="bf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vMainEntryTag $4.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="../../bf:role/*/@rdf:about|../../bf:role/@rdf:resource">
            <marc:subfield code="4">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
              <xsl:variable name="vvMainEntryTag-2">
                <xsl:choose>
                  <xsl:when test="bf:source/bf:Source/bf:code">
                    <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                  </xsl:when>
                  <xsl:when test="$vSourceUri != ''">
                    <xsl:choose>
                      <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                        <xsl:call-template name="tUriCode">
                          <xsl:with-param name="pUri" select="$vSourceUri"/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$vSourceUri"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$vvMainEntryTag-2 != ''">
                <marc:subfield code="2">
                  <xsl:value-of select="$vvMainEntryTag-2"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
          </xsl:choose>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (vMainEntryTag).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title and not(../../bf:contribution/bflc:PrimaryContribution) and not(../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]" mode="generate-130">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <xsl:variable name="vXmlLang">
          <xsl:value-of select="bf:mainTitle/@xml:lang"/>
        </xsl:variable>
        <marc:datafield>
          <xsl:attribute name="tag">130</xsl:attribute>
          <xsl:if test="$vXmlLang != ''">
            <xsl:attribute name="xml:lang">
              <xsl:value-of select="$vXmlLang"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:attribute name="ind1">
            <xsl:variable name="vInd">
              <xsl:choose>
                <xsl:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                  <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vInd != ''">
                <xsl:value-of select="$vInd"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text>0</xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:variable name="v130-a">
            <xsl:choose>
              <xsl:when test="bf:title/bf:Title/rdfs:label">
                <xsl:for-each select="bf:title/bf:Title/rdfs:label">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 130 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="bf:title/bf:Title/bf:mainTitle">
                <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 130 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v130-a != ''">
            <marc:subfield code="a">
              <xsl:value-of select="$v130-a"/>
            </marc:subfield>
          </xsl:if>
          <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
            <marc:subfield code="0">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value"/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="bf:source/bf:Source/bf:code">
            <marc:subfield code="2">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (130).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']] |                     bf:Work/bf:title/*[local-name() = 'AbbreviatedTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']]" mode="generate-210">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bf:mainTitle/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">210</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>0</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:assigner/bf:Agent/bf:code = 'issnkey'">
              <xsl:text> </xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>0</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 210 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:qualifier">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 210 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="bf:assigner/bf:Agent[not(bf:code='issnkey')]">
          <xsl:for-each select="bf:assigner/bf:Agent[not(bf:code='issnkey')]/bf:code">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:title/*[local-name() = 'KeyTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/KeyTitle']]" mode="generate-222">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bf:mainTitle/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">222</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
              <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>0</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 222 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:qualifier">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 222 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:expressionOf/child::node()[(local-name() = 'Hub' or local-name() = 'Work') and bf:title][../../bf:contribution/bflc:PrimaryContribution or ../../bf:contribution/*/rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]" mode="generate-240">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <xsl:variable name="vXmlLang">
          <xsl:value-of select="bf:mainTitle/@xml:lang"/>
        </xsl:variable>
        <marc:datafield>
          <xsl:attribute name="tag">240</xsl:attribute>
          <xsl:if test="$vXmlLang != ''">
            <xsl:attribute name="xml:lang">
              <xsl:value-of select="$vXmlLang"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:attribute name="ind1">
            <xsl:text>1</xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:variable name="vInd">
              <xsl:choose>
                <xsl:when test="bf:title/bf:Title/bflc:titleSortKey and (string-length(bf:title/bf:Title/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title/bf:mainTitle))">
                  <xsl:value-of select="string-length(bf:title/bf:Title/bf:mainTitle) - string-length(bf:title/bf:Title/bflc:titleSortKey)"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vInd != ''">
                <xsl:value-of select="$vInd"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text>0</xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:variable name="v240-a">
            <xsl:choose>
              <xsl:when test="bf:title/bf:Title/rdfs:label">
                <xsl:for-each select="bf:title/bf:Title/rdfs:label">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 240 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="bf:title/bf:Title/bf:mainTitle">
                <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 240 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v240-a != ''">
            <marc:subfield code="a">
              <xsl:value-of select="$v240-a"/>
            </marc:subfield>
          </xsl:if>
          <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(., 'REPLACE'))]">
            <marc:subfield code="0">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value"/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="bf:source/bf:Source/bf:code">
            <marc:subfield code="2">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (240).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:title/*[(local-name() = 'VariantTitle' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']) and bf:variantType = 'translated']" mode="generate-242">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bf:mainTitle/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">242</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>1</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
              <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>0</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 242 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:subtitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 242 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:partName">
        <marc:subfield code="p">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:title/*[                       local-name()='CollectiveTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/CollectiveTitle']                     ]" mode="generate-243">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <xsl:variable name="vXmlLang">
          <xsl:value-of select="bf:mainTitle/@xml:lang"/>
        </xsl:variable>
        <marc:datafield>
          <xsl:attribute name="tag">243</xsl:attribute>
          <xsl:if test="$vXmlLang != ''">
            <xsl:attribute name="xml:lang">
              <xsl:value-of select="$vXmlLang"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:attribute name="ind1">
            <xsl:text>1</xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:variable name="vInd">
              <xsl:choose>
                <xsl:when test="bflc:titleSortKey and (string-length(bflc:titleSortKey) &lt; string-length(bf:mainTitle))">
                  <xsl:value-of select="string-length(bf:mainTitle) - string-length(bflc:titleSortKey)"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vInd != ''">
                <xsl:value-of select="$vInd"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text>0</xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:for-each select="bf:mainTitle">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 243 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (243).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:title/bf:Title[not(rdf:type)]" mode="generate-245">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:datafield>
          <xsl:attribute name="tag">245</xsl:attribute>
          <xsl:attribute name="ind1">
            <xsl:variable name="vInd">
              <xsl:choose>
                <xsl:when test="/rdf:RDF/bf:Work/bf:contribution/*[local-name()='PrimaryContribution' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']]">
                  <xsl:text>1</xsl:text>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vInd != ''">
                <xsl:value-of select="$vInd"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text>0</xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:variable name="vInd">
              <xsl:choose>
                <xsl:when test="bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))] and                       (string-length(bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]) &lt; string-length(bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]))">
                  <xsl:value-of select="string-length(bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]) - string-length(bflc:titleSortKey[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))])"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vInd != ''">
                <xsl:value-of select="$vInd"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text>0</xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:choose>
            <xsl:when test="count(bf:mainTitle)=2 and bf:mainTitle[@xml:lang] and bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
              <marc:subfield code="6">880-01</marc:subfield>
            </xsl:when>
          </xsl:choose>
          <xsl:variable name="v245-a">
            <xsl:choose>
              <xsl:when test="bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:for-each select="bf:mainTitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="count(bf:mainTitle)=1 and bf:mainTitle[@xml:lang]">
                <xsl:for-each select="bf:mainTitle[@xml:lang]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v245-a != ''">
            <marc:subfield code="a">
              <xsl:value-of select="$v245-a"/>
            </marc:subfield>
          </xsl:if>
          <xsl:variable name="v245-b">
            <xsl:choose>
              <xsl:when test="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:for-each select="bf:subtitle[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $b.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="count(bf:subtitle)=1 and bf:subtitle[@xml:lang]">
                <xsl:for-each select="bf:subtitle[@xml:lang]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $b.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v245-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v245-b"/>
            </marc:subfield>
          </xsl:if>
          <xsl:variable name="v245-c">
            <xsl:choose>
              <xsl:when test="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:for-each select="ancestor::bf:Instance/bf:responsibilityStatement[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:value-of select="."/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $c.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="count(ancestor::bf:Instance/bf:responsibilityStatement)=1 and ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                <xsl:for-each select="ancestor::bf:Instance/bf:responsibilityStatement[@xml:lang]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:value-of select="."/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $c.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v245-c != ''">
            <marc:subfield code="c">
              <xsl:value-of select="$v245-c"/>
            </marc:subfield>
          </xsl:if>
          <xsl:variable name="v245-n">
            <xsl:choose>
              <xsl:when test="bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:for-each select="bf:partNumber[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $n.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="count(bf:partNumber)=1 and bf:partNumber[@xml:lang]">
                <xsl:for-each select="bf:partNumber[@xml:lang]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $n.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v245-n != ''">
            <marc:subfield code="n">
              <xsl:value-of select="$v245-n"/>
            </marc:subfield>
          </xsl:if>
          <xsl:variable name="v245-p">
            <xsl:choose>
              <xsl:when test="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                <xsl:for-each select="bf:partName[not(@xml:lang) or contains(translate(@xml:lang,$upper,$lower),translate($pCatScript,$upper,$lower))]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $p.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:when test="count(bf:partName)=1 and bf:partName[@xml:lang]">
                <xsl:for-each select="bf:partName[@xml:lang]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 245 $p.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v245-p != ''">
            <marc:subfield code="p">
              <xsl:value-of select="$v245-p"/>
            </marc:subfield>
          </xsl:if>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (245).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="//bf:title/*[(                       local-name()='VariantTitle' or                       local-name()='ParallelTitle' or                       local-name()='TranscribedTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle'] or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/TranscribedTitle']                     ) and                     not(bf:variantType = 'translated') and                     not(bf:variantType = 'former')]" mode="generate-246">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bf:mainTitle/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">246</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>1</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name()='ParallelTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/ParallelTitle']">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="bf:variantType = 'portion'">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="bf:variantType = 'distinctive'">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="bf:variantType = 'cover'">
              <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="bf:variantType = 'added title page'">
              <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="bf:variantType = 'caption'">
              <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="bf:variantType = 'running'">
              <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="bf:variantType = 'spine'">
              <xsl:text>8</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:note/bf:Note/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="i">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 246 $i.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 246 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:subtitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 246 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:date">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="f">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 246 $f.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:partName">
        <marc:subfield code="p">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="5">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 246 $5.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="//bf:title/*[(                       local-name()='VariantTitle' or                       rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/VariantTitle']                     ) and                     bf:variantType = 'former']" mode="generate-247">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bf:mainTitle/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">247</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>1</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text>0</xsl:text>
      </xsl:attribute>
      <xsl:variable name="v247-a">
        <xsl:choose>
          <xsl:when test="bf:mainTitle">
            <xsl:for-each select="bf:mainTitle">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 247 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="rdfs:label">
            <xsl:for-each select="rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 247 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v247-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v247-a"/>
        </marc:subfield>
      </xsl:if>
      <xsl:for-each select="bf:subtitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 247 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:date">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="f">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 247 $f.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:qualifier">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="g">
              <xsl:value-of select="concat('(',.,')')"/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 247 $g.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:partName">
        <marc:subfield code="p">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']]/rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="x">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 247 $x.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:musicFormat/bf:MusicFormat" mode="generate-254">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:datafield>
          <xsl:attribute name="tag">254</xsl:attribute>
          <xsl:attribute name="ind1">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:for-each select="rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 254 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (254).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Work/bf:scale[not(bf:Scale)]" mode="generate-255">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">255</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="."/>
        </xsl:call-template>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:scale/bf:Scale/bf:note/bf:Note/rdfs:label" mode="generate-255">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">255</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:value-of select="."/>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:cartographicAttributes/bf:Cartographic[bf:projection or                     bf:coordinates or                     bf:ascensionAndDeclination or                     bf:equinox or                     bf:outerGRing or                     bf:exclusionGRing]" mode="generate-255">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">255</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bf:projection/bf:Projection/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 255 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:coordinates">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="c">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 255 $c.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:ascensionAndDeclination">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="d">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 255 $d.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:equinox">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="e">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 255 $e.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:outerGRing">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="f">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 255 $f.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:exclusionGRing">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="g">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 255 $g.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:originPlace/bf:Place" mode="generate-257">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">257</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source">
        <marc:subfield code="2">
          <xsl:variable name="vUri">
            <xsl:choose>
              <xsl:when test="@rdf:resource">
                <xsl:value-of select="@rdf:resource"/>
              </xsl:when>
              <xsl:when test="*/@rdf:about">
                <xsl:value-of select="*/@rdf:about"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:variable name="vSourceCode">
            <xsl:call-template name="tUriCode">
              <xsl:with-param name="pUri" select="$vUri"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSourceCode != ''">
              <xsl:value-of select="$vSourceCode"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="*/bf:code"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bflc:projectedProvisionDate" mode="generate-263">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:datafield>
          <xsl:attribute name="tag">263</xsl:attribute>
          <xsl:attribute name="ind1">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <marc:subfield code="a">
            <xsl:value-of select="."/>
          </marc:subfield>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (263).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:copyrightDate" mode="generate-264">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="cDate">
      <xsl:choose>
        <xsl:when test="not(contains(., '©')) and ../rdf:type[               @rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Print' or                @rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Archival' or                @rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Manuscript' or                 @rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Tactile' or                @rdf:resource = 'http://id.loc.gov/ontologies/bibframe/Electronic'               ]">
          <xsl:value-of select="concat('©', text())"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="text()"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="position() = 1">
        <marc:datafield>
          <xsl:attribute name="tag">264</xsl:attribute>
          <xsl:attribute name="ind1">
            <xsl:text> </xsl:text>
          </xsl:attribute>
          <xsl:attribute name="ind2">
            <xsl:text>4</xsl:text>
          </xsl:attribute>
          <xsl:variable name="v264-c">
            <xsl:value-of select="$cDate"/>
          </xsl:variable>
          <xsl:if test="$v264-c != ''">
            <marc:subfield code="c">
              <xsl:value-of select="$v264-c"/>
            </marc:subfield>
          </xsl:if>
        </marc:datafield>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target field (264).</xsl:message>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:extent/bf:Extent" mode="generate-300">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">300</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 300 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="../../bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='physical details' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/physical']/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 300 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="../../bf:dimensions">
        <marc:subfield code="c">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="../../bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='accompanying material' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/accmat']/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="e">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 300 $e.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:frequency/bf:Frequency" mode="generate-vFreqTag">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vFreqTag">
      <xsl:choose>
        <xsl:when test="translate(bf:note/bf:Note/rdfs:label,$upper,$lower)='former frequency'">
          <xsl:text>321</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>310</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">
        <xsl:value-of select="$vFreqTag"/>
      </xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vFreqTag $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:date">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vFreqTag $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vFreqTag $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:issuance" mode="generate-334">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">334</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:variable name="v334-a">
        <xsl:choose>
          <xsl:when test="bf:*/madsrdf:authoritativeLabel">
            <xsl:for-each select="bf:*/madsrdf:authoritativeLabel">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 334 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="bf:*/rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 334 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v334-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v334-a"/>
        </marc:subfield>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="bf:*/*[local-name()='code']">
          <xsl:variable name="v334-b">
            <xsl:value-of select="bf:*/*[local-name()='code']"/>
          </xsl:variable>
          <xsl:if test="$v334-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v334-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="@rdf:resource or bf:*/@rdf:about">
          <xsl:variable name="v334-b">
            <xsl:choose>
              <xsl:when test="contains(@rdf:resource,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="@rdf:resource"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:when test="contains(bf:*/@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="bf:*/@rdf:about"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="bf:*/@rdf:about"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v334-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v334-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:resource">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:*/@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:*/bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:*/bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 334 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:content/*[local-name()='Content' or                                                  rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Content'] or                                                  local-name()='Authority' or                                                  rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-336">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">336</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 336 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:variable name="v336-a">
        <xsl:choose>
          <xsl:when test="madsrdf:authoritativeLabel">
            <xsl:for-each select="madsrdf:authoritativeLabel">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 336 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 336 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v336-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v336-a"/>
        </marc:subfield>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="*[local-name()='code']">
          <xsl:variable name="v336-b">
            <xsl:value-of select="*[local-name()='code']"/>
          </xsl:variable>
          <xsl:if test="$v336-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v336-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="@rdf:about">
          <xsl:variable name="v336-b">
            <xsl:choose>
              <xsl:when test="contains(@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="@rdf:about"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="@rdf:about"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v336-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v336-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 336 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:media/*[local-name()='Media' or                                                    rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Media'] or                                                    local-name()='Authority' or                                                    rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-337">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">337</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 337 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:variable name="v337-a">
        <xsl:choose>
          <xsl:when test="madsrdf:authoritativeLabel">
            <xsl:for-each select="madsrdf:authoritativeLabel">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 337 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 337 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v337-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v337-a"/>
        </marc:subfield>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="*[local-name()='code']">
          <xsl:variable name="v337-b">
            <xsl:value-of select="*[local-name()='code']"/>
          </xsl:variable>
          <xsl:if test="$v337-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v337-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="@rdf:about">
          <xsl:variable name="v337-b">
            <xsl:choose>
              <xsl:when test="contains(@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="@rdf:about"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="@rdf:about"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v337-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v337-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 337 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:carrier/*[local-name()='Carrier' or                                                      rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Carrier'] or                                                      local-name()='Authority' or                                                      rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Authority']]" mode="generate-338">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">338</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 338 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:variable name="v338-a">
        <xsl:choose>
          <xsl:when test="madsrdf:authoritativeLabel">
            <xsl:for-each select="madsrdf:authoritativeLabel">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 338 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <xsl:for-each select="rdfs:label">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 338 $a.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v338-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v338-a"/>
        </marc:subfield>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="*[local-name()='code']">
          <xsl:variable name="v338-b">
            <xsl:value-of select="*[local-name()='code']"/>
          </xsl:variable>
          <xsl:if test="$v338-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v338-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="@rdf:about">
          <xsl:variable name="v338-b">
            <xsl:choose>
              <xsl:when test="contains(@rdf:about,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="@rdf:about"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="@rdf:about"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v338-b != ''">
            <marc:subfield code="b">
              <xsl:value-of select="$v338-b"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 338 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:baseMaterial/bf:BaseMaterial |                     bf:Instance/bf:appliedMaterial/bf:AppliedMaterial |                     bf:Instance/bf:productionMethod/bf:ProductionMethod |                     bf:Instance/bf:mount/bf:Mount |                     bf:Instance/bf:reductionRatio/bf:ReductionRatio |                     bf:Work/bf:colorContent/bf:ColorContent |                     bf:Instance/bf:generation/bf:Generation |                     bf:Instance/bf:layout/bf:Layout |                     bf:Instance/bf:bookFormat/bf:BookFormat |                     bf:Instance/bf:fontSize/bf:FontSize |                     bf:Instance/bf:polarity/bf:Polarity |                     bf:Instance/bf:binding/bf:Binding |                     bf:Work/bf:illustrativeContent/bf:Illustration" mode="generate-340">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">340</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="local-name()='BaseMaterial'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='AppliedMaterial'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='ProductionMethod'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="d">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='Mount'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="e">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='ReductionRatio'">
          <xsl:for-each select="rdf:label">
            <marc:subfield code="q">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='ColorContent'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="g">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='Generation'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="j">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='Layout'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="k">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='Binding'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="l">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='BookFormat'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="m">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='FontSize'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="n">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='Polarity'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="o">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='Illustration'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="p">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="local-name()='ReductionRatio'">
          <xsl:for-each select="rdf:value">
            <marc:subfield code="f">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 340 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:soundCharacteristic/bf:RecordingMethod |                     bf:Instance/bf:soundCharacteristic/bf:RecordingMedium |                     bf:Instance/bf:soundCharacteristic/bf:PlayingSpeed |                     bf:Instance/bf:soundCharacteristic/bf:GrooveCharacteristic |                     bf:Instance/bf:soundCharacteristic/bf:TrackConfig |                     bf:Instance/bf:soundCharacteristic/bf:TapeConfig |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackChannels |                     bf:Instance/bf:soundCharacteristic/bf:PlaybackCharacteristic |                     bf:Instance/bf:soundCharacteristic/bflc:CaptureStorage |                     bf:Work/bf:soundContent/bf:SoundContent" mode="generate-344">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">344</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 344 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="local-name()='RecordingMethod'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='RecordingMedium'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='PlayingSpeed'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='GrooveCharacteristic'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="d">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='TrackConfig'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="e">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='TapeConfig'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="f">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='PlaybackChannels'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="g">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='PlaybackCharacteristic'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="h">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='SoundContent'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="i">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='CaptureStorage'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="j">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 344 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:projectionCharacteristic/bf:PresentationFormat |                     bf:Instance/bf:projectionCharacteristic/bf:ProjectionSpeed" mode="generate-345">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">345</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 345 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="local-name()='PresentationFormat'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='ProjectionSpeed'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 345 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:aspectRatio/bf:AspectRatio[rdfs:label|rdf:value]" mode="generate-345">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">345</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 345 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdf:value">
        <marc:subfield code="c">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <marc:subfield code="d">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 345 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:videoCharacteristic/bf:VideoFormat |                     bf:Instance/bf:videoCharacteristic/bf:BroadcastStandard" mode="generate-346">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">346</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 346 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="local-name()='VideoFormat'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='BroadcastStandard'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 346 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:digitalCharacteristic/bf:FileType |                     bf:Instance/bf:digitalCharacteristic/bf:EncodingFormat |                     bf:Instance/bf:digitalCharacteristic/bf:FileSize |                     bf:Instance/bf:digitalCharacteristic/bf:Resolution |                     bf:Instance/bf:digitalCharacteristic/bf:RegionalEncoding |                     bf:Instance/bf:digitalCharacteristic/bf:EncodedBitrate" mode="generate-347">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">347</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 347 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="local-name()='FileType'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='EncodingFormat'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='FileSize'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='Resolution'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="d">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='RegionalEncoding'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="e">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='EncodedBitrate'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="f">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 347 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:musicFormat/bf:MusicFormat" mode="generate-348">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">348</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 348 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 348 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:collectionArrangement/bf:CollectionArrangement" mode="generate-351">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">351</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 351 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:hierarchicalLevel">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 351 $c.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:collectionOrganization">
        <marc:subfield code="a">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:pattern">
        <marc:subfield code="b">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:digitalCharacteristic/bf:CartographicDataType |                     bf:Instance/bf:digitalCharacteristic/bf:CartographicObjectType" mode="generate-352">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">352</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="local-name()='CartographicDataType'">
          <xsl:for-each select="rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 352 $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name()='CartographicObjectType'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="bf:count">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[@rdf:about]" mode="generate-353">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">353</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 353 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <marc:subfield code="a">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:variable name="v353-b">
        <xsl:call-template name="tUriCode">
          <xsl:with-param name="pUri" select="@rdf:about"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="$v353-b != ''">
        <marc:subfield code="b">
          <xsl:value-of select="$v353-b"/>
        </marc:subfield>
      </xsl:if>
      <xsl:variable name="v353-0">
        <xsl:choose>
          <xsl:when test="@rdf:about">
            <xsl:for-each select="@rdf:about">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:value-of select="."/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 353 $0.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="bf:identifiedBy/bf:Identifier">
            <xsl:for-each select="bf:identifiedBy/bf:Identifier">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <xsl:variable name="vSource">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:variable name="vIdValue">
                    <xsl:choose>
                      <xsl:when test="rdf:value/@rdf:resource">
                        <xsl:value-of select="rdf:value/@rdf:resource"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="rdf:value"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:choose>
                    <xsl:when test="$vSource != ''">
                      <xsl:value-of select="concat('(',$vSource,')',$vIdValue)"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$vIdValue"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 353 $0.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$v353-0 != ''">
        <marc:subfield code="0">
          <xsl:value-of select="$v353-0"/>
        </marc:subfield>
      </xsl:if>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 353 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:firstIssue" mode="generate-362">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">362</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>0</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:variable name="v362-a">
        <xsl:variable name="vPosition" select="position()"/>
        <xsl:variable name="vLastIssue">
          <xsl:for-each select="../bf:lastIssue">
            <xsl:if test="position() = $vPosition">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </xsl:if>
          </xsl:for-each>
        </xsl:variable>
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="concat(.,'-',$vLastIssue)"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="$v362-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v362-a"/>
        </marc:subfield>
      </xsl:if>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:originPlace/bf:Place" mode="generate-370">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">370</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="madsrdf:authoritiveLabel">
          <xsl:variable name="v370-g">
            <xsl:value-of select="madsrdf:authoritativeLabel"/>
          </xsl:variable>
          <xsl:if test="$v370-g != ''">
            <marc:subfield code="g">
              <xsl:value-of select="$v370-g"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="g">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:for-each select="@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vSource">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vSource != ''">
              <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 370 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:musicMedium/bf:MusicMedium[bflc:readMarc382]" mode="generate-382">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">382</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:status/@rdf:resource='http://id.loc.gov/vocabulary/mstatus/part' or                       bf:status/bf:Status/@rdf:about='http://id.loc.gov/vocabulary/mstatus/part' or                       translate(bf:status/bf:Status/rdfs:label,$upper,$lower)='partial'">
              <xsl:text>1</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>0</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 382 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:call-template name="tReadMarc382">
        <xsl:with-param name="pString" select="bflc:readMarc382"/>
      </xsl:call-template>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:musicKey" mode="generate-384">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">384</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="."/>
        </xsl:call-template>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bflc:creatorCharacteristic" mode="generate-386">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="*/bf:source/@rdf:resource">
          <xsl:value-of select="*/bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="*/bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="*/bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bflc:CreatorCharacteristic/rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">386</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:CreatorCharacteristic/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 386 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bflc:CreatorCharacteristic/bflc:demographicGroup/bflc:DemographicGroup[not(@rdf:about)]/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="m">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 386 $m.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bflc:CreatorCharacteristic/bflc:demographicGroup[@rdf:resource or */@rdf:about]">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="n">
              <xsl:variable name="vDGUri">
                <xsl:choose>
                  <xsl:when test="@rdf:resource">
                    <xsl:value-of select="@rdf:resource"/>
                  </xsl:when>
                  <xsl:when test="*/@rdf:about">
                    <xsl:value-of select="*/@rdf:resource"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="*/rdfs:label">
                  <xsl:value-of select="*/rdfs:label"/>
                </xsl:when>
                <xsl:when test="contains($vDGUri,'id.loc.gov')">
                  <xsl:call-template name="tUriCode">
                    <xsl:with-param name="pUri" select="$vDGUri"/>
                  </xsl:call-template>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="."/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 386 $n.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bflc:CreatorCharacteristic/rdfs:label">
        <marc:subfield code="a">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="*/bf:source/bf:Source/*[local-name()='code']">
          <xsl:variable name="v386-2">
            <xsl:value-of select="*/bf:source/bf:Source/*[local-name()='code'][1]"/>
          </xsl:variable>
          <xsl:if test="$v386-2 != ''">
            <marc:subfield code="2">
              <xsl:value-of select="$v386-2"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
        <xsl:when test="$vSourceUri != ''">
          <xsl:variable name="v386-2">
            <xsl:choose>
              <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="$vSourceUri"/>
                </xsl:call-template>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$vSourceUri"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v386-2 != ''">
            <marc:subfield code="2">
              <xsl:value-of select="$v386-2"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:resource|bflc:CreatorCharacteristic/@rdf:about">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:dissertation/bf:Dissertation" mode="generate-502">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">502</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 502 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:degree">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 502 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:grantingInstitution/*/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 502 $c.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:date">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="d">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 502 $d.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:note/*/rdfs:label">
        <marc:subfield code="g">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/*/rdf:value">
        <marc:subfield code="o">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label and not(@rdf:about)]|bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdfs:label and not(@rdf:about)]" mode="generate-504">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">504</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 504 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:count">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 504 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:tableOfContents/bf:TableOfContents[rdfs:label]" mode="generate-505">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">505</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>0</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 505 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
        <marc:subfield code="u">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:credits[not(starts-with(text(),'Cast:'))]" mode="generate-508">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">508</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="."/>
        </xsl:call-template>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bflc:indexedIn/bf:Work |                     bf:Work/bf:references/bf:Work" mode="generate-510">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bf:title/*/bf:mainTitle/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">510</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name(..)='indexedIn' and bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='coverage' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/coverage']">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(..)='references' and bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='location' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/loc']">
              <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(..)='references'">
              <xsl:text>3</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>0</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bf:title/*/bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 510 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='coverage' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/coverage']/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 510 $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:note/bf:Note[translate(bf:noteType,$upper,$lower)='location' or rdf:type/@rdf:resource='http://id.loc.gov/vocabulary/mnotetype/loc']/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="c">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 510 $c.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="x">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 510 $x.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:credits[starts-with(text(),'Cast:')]" mode="generate-511">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">511</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>1</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:variable name="v511-a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="substring-after(.,'Cast:')"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="$v511-a != ''">
        <marc:subfield code="a">
          <xsl:value-of select="$v511-a"/>
        </marc:subfield>
      </xsl:if>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:capture/bf:Capture[not(bf:date[@rdf:datatype='http://id.loc.gov/datatypes/edtf']) and not(bf:place/@rdf:resource)]" mode="generate-518">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">518</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 518 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:note/bf:Note/rdfs:label">
        <marc:subfield code="o">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 518 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:date">
        <marc:subfield code="d">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:place/*/rdfs:label">
        <marc:subfield code="p">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:summary/bf:Summary" mode="generate-520">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">520</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 520 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 520 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
        <marc:subfield code="u">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:geographicCoverage/*[not(bf:source/@rdf:resource='http://id.loc.gov/authorities/classification/G' or bf:source/bf:Source/@rdf:about='http://id.loc.gov/authorities/classification/G') and rdfs:label]" mode="generate-522">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">522</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 522 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:preferredCitation" mode="generate-524">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">524</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="."/>
        </xsl:call-template>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:contentAccessibility/bf:ContentAccessibility/rdfs:label" mode="generate-532">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">532</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>8</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="."/>
        </xsl:call-template>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))] |                     //bf:Item/bf:systemRequirement/bf:SystemRequirement[not(contains(rdf:type/@rdf:resource,'bflc'))]" mode="generate-538">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">538</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 538 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 538 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']">
        <marc:subfield code="u">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="//bf:Item/bf:immediateAcquisition/bf:ImmediateAcquisition" mode="generate-541">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">541</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 541 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 541 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bflc:applicableInstitution/bf:Agent/bf:code">
        <marc:subfield code="5">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:language/bf:Language[bf:note/bf:Note/rdfs:label]" mode="generate-546">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="bf:note/bf:Note/rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">546</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 546 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:note/bf:Note/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 546 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:notation/bf:Notation" mode="generate-546">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">546</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 546 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="rdfs:label">
        <marc:subfield code="b">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="//bf:Item/bf:custodialHistory" mode="generate-561">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">561</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="."/>
        </xsl:call-template>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:awards" mode="generate-586">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="./@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">586</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>8</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <marc:subfield code="a">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="."/>
        </xsl:call-template>
      </marc:subfield>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:genreForm | //bf:Item/bf:genreForm" mode="generate-655">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="*/rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">655</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="*/bf:source/bf:Source/bf:code='lcsh' or                       */bf:source[@rdf:resource='http://id.loc.gov/authorities/subjects' or */@rdf:about='http://id.loc.gov/authorities/subjects'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcsh'">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="*/bf:source/bf:Source/bf:code='lcshac' or                       */bf:source[@rdf:resource='http://id.loc.gov/authorities/childrensSubjects' or */@rdf:about='http://id.loc.gov/authorities/childrensSubjects'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='lcshac'">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="*/bf:source/bf:Source/bf:code='mesh' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/mesh' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/mesh'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='mesh'">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="*/bf:source/bf:Source/bf:code='nal' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/nal' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/nal'] or                       */madsrdf:componentList/*[1]/*/bf:source/bf:Source/bf:code='nal'">
              <xsl:text>3</xsl:text>
            </xsl:when>
            <xsl:when test="*/bf:source/bf:Source/bf:code='cash' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/cash' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/cash'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='cash'">
              <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="*/bf:source/bf:Source/bf:code='rvm' or                       */bf:source[@rdf:resource='http://id.loc.gov/vocabulary/subjectSchemes/rvm' or */@rdf:about='http://id.loc.gov/vocabulary/subjectSchemes/rvm'] or                       */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code='rvm'">
              <xsl:text>6</xsl:text>
            </xsl:when>
            <xsl:when test="*/bf:source or */madsrdf:componentList/*[1]/bf:source">
              <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="contains(@rdf:resource,'id.loc.gov/authorities/genreForms') or contains(*/@rdf:about,'id.loc.gov/authorities/genreForms') or contains(@rdf:resource,'id.loc.gov/vocabulary/marcgt') or contains(*/@rdf:about,'id.loc.gov/vocabulary/marcgt')">
              <xsl:text>7</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>4</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="*/madsrdf:componentList">
          <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="3">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $3.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:variable name="v655-a">
            <xsl:choose>
              <xsl:when test="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                <xsl:for-each select="*/madsrdf:componentList/*[1]/madsrdf:authoritativeLabel">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:otherwise>
                <xsl:for-each select="*/madsrdf:componentList/*[1]/rdfs:label">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v655-a != ''">
            <marc:subfield code="a">
              <xsl:value-of select="$v655-a"/>
            </marc:subfield>
          </xsl:if>
          <xsl:for-each select="*/madsrdf:componentList/*">
            <xsl:choose>
              <xsl:when test="position() &gt; 1">
                <xsl:choose>
                  <xsl:when test="local-name()='GenreForm' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#GenreForm']">
                    <xsl:variable name="v655-v">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $v.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $v.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v655-v != ''">
                      <marc:subfield code="v">
                        <xsl:value-of select="$v655-v"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='Temporal' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Temporal']">
                    <xsl:variable name="v655-y">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $y.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $y.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v655-y != ''">
                      <marc:subfield code="y">
                        <xsl:value-of select="$v655-y"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="local-name()='Geographic' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Geographic']">
                    <xsl:variable name="v655-z">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $z.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $z.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v655-z != ''">
                      <marc:subfield code="z">
                        <xsl:value-of select="$v655-z"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:variable name="v655-x">
                      <xsl:choose>
                        <xsl:when test="madsrdf:authoritativeLabel">
                          <xsl:for-each select="madsrdf:authoritativeLabel">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $x.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:for-each select="rdfs:label">
                            <xsl:choose>
                              <xsl:when test="position() = 1">
                                <xsl:call-template name="tChopPunct">
                                  <xsl:with-param name="pString" select="."/>
                                </xsl:call-template>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $x.</xsl:message>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:for-each>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:if test="$v655-x != ''">
                      <marc:subfield code="x">
                        <xsl:value-of select="$v655-x"/>
                      </marc:subfield>
                    </xsl:if>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
            </xsl:choose>
          </xsl:for-each>
          <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
            <marc:subfield code="0">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value"/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="*/bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="3">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $3.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:variable name="v655-a">
            <xsl:choose>
              <xsl:when test="*/madsrdf:authoritativeLabel">
                <xsl:for-each select="*/madsrdf:authoritativeLabel[1]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:when>
              <xsl:otherwise>
                <xsl:for-each select="*/rdfs:label[1]">
                  <xsl:choose>
                    <xsl:when test="position() = 1">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $a.</xsl:message>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$v655-a != ''">
            <marc:subfield code="a">
              <xsl:value-of select="$v655-a"/>
            </marc:subfield>
          </xsl:if>
          <xsl:for-each select="@rdf:resource[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
            <marc:subfield code="0">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="*/@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
            <marc:subfield code="0">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="*/bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value"/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="*/bf:source/bf:Source/bf:code or */madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
          <xsl:for-each select="*/bf:source|*/madsrdf:componentList/*[1]/bf:source">
            <xsl:variable name="vSourceUri">
              <xsl:choose>
                <xsl:when test="@rdf:resource">
                  <xsl:value-of select="@rdf:resource"/>
                </xsl:when>
                <xsl:when test="*/@rdf:about">
                  <xsl:value-of select="*/@rdf:about"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$vSourceUri != 'http://id.loc.gov/authorities/subjects' and                           bf:Source/bf:code != 'lcsh' and                           $vSourceUri != 'http://id.loc.gov/authorities/childrensSubjects' and                           bf:Source/bf:code != 'lcshac' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/mesh' and                           bf:Source/bf:code != 'mesh' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/nal' and                           bf:Source/bf:code != 'nal' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/cash' and                           bf:Source/bf:code != 'cash' and                           $vSourceUri != 'http://id.loc.gov/vocabulary/subjectSchemes/rvm' and                           bf:Source/bf:code != 'rvm'">
                <xsl:variable name="v655-2">
                  <xsl:choose>
                    <xsl:when test="bf:Source/bf:code">
                      <xsl:value-of select="bf:Source/bf:code"/>
                    </xsl:when>
                    <xsl:when test="$vSourceUri != ''">
                      <xsl:choose>
                        <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                          <xsl:call-template name="tUriCode">
                            <xsl:with-param name="pUri" select="$vSourceUri"/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="$vSourceUri"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="bf:Source/rdfs:label"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:if test="$v655-2 != ''">
                  <marc:subfield code="2">
                    <xsl:value-of select="$v655-2"/>
                  </marc:subfield>
                </xsl:if>
              </xsl:when>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="contains(@rdf:resource,'id.loc.gov/authorities/genreForms') or contains(*/@rdf:about,'id.loc.gov/authorities/genreForms')">
          <marc:subfield code="2">lcgft</marc:subfield>
        </xsl:when>
        <xsl:when test="contains(@rdf:resource,'id.loc.gov/vocabulary/marcgt') or contains(*/@rdf:about,'id.loc.gov/vocabulary/marcgt')">
          <marc:subfield code="2">marcgt</marc:subfield>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="*/bflc:applicableInstitution/*/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="5">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 655 $5.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Work/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     bf:Instance/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:contribution/*[not(local-name()='PrimaryContribution') and not(rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution'])]/bf:agent/* |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/* |                     //bf:Item/bf:hasPart[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub/bf:contribution/*/bf:agent/*" mode="generate-vAddEntryTag">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vNameAuth">
      <xsl:choose>
        <xsl:when test="contains(@rdf:about,'id.loc.gov/authorities/names')">
          <xsl:call-template name="tGetMARCAuth">
            <xsl:with-param name="pUri" select="@rdf:about"/>
          </xsl:call-template>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vAddEntryTag">
      <xsl:choose>
        <xsl:when test="local-name()='Uncontrolled' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']">
          <xsl:text>720</xsl:text>
        </xsl:when>
        <xsl:when test="local-name()='PersonalName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#PersonalName'] or                       local-name()='FamilyName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#FamilyName'] or                       local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person'] or                       local-name()='Family' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Family']">
          <xsl:text>700</xsl:text>
        </xsl:when>
        <xsl:when test="local-name()='CorporateName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CorporateName'] or                       local-name()='Organization' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Organization'] or                       local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
          <xsl:text>710</xsl:text>
        </xsl:when>
        <xsl:when test="local-name()='ConferenceName' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ConferenceName'] or                       local-name()='Meeting' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Meeting']">
          <xsl:text>711</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>720</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vNameAuthTag">
      <xsl:choose>
        <xsl:when test="$vAddEntryTag='710'">
          <xsl:text>110</xsl:text>
        </xsl:when>
        <xsl:when test="$vAddEntryTag='711'">
          <xsl:text>111</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>100</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vAuthSubfields">
      <xsl:choose>
        <xsl:when test="$vNameAuthTag='100'">
          <xsl:text>abcdgjq</xsl:text>
        </xsl:when>
        <xsl:when test="$vNameAuthTag='110'">
          <xsl:text>abcdgn</xsl:text>
        </xsl:when>
        <xsl:when test="$vNameAuthTag='111'">
          <xsl:text>acdegnq</xsl:text>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vSourceUri">
      <xsl:choose>
        <xsl:when test="bf:source/@rdf:resource">
          <xsl:value-of select="bf:source/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:source/bf:Source/@rdf:about">
          <xsl:value-of select="bf:source/bf:Source/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vWorkUri">
      <xsl:value-of select="../../../../@rdf:about"/>
    </xsl:variable>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">
        <xsl:value-of select="$vAddEntryTag"/>
      </xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
              <xsl:value-of select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/@ind1"/>
            </xsl:when>
            <xsl:when test="$vAddEntryTag='700'">
              <xsl:choose>
                <xsl:when test="contains(local-name(),'Family')">
                  <xsl:text>3</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text>1</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:when test="$vAddEntryTag='710'">
              <xsl:choose>
                <xsl:when test="local-name()='Jurisdiction' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Jurisdiction']">
                  <xsl:text>1</xsl:text>
                </xsl:when>
              </xsl:choose>
            </xsl:when>
            <xsl:when test="$vAddEntryTag='720'">
              <xsl:choose>
                <xsl:when test="local-name()='Person' or rdf:type[@rdf:resource='http://id.loc.gov/ontologies/bibframe/Person']">
                  <xsl:text>1</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text> </xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>2</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="ancestor::bf:hasPart">
              <xsl:text>2</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="$vAddEntryTag='720'">
          <xsl:for-each select="rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="a">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
            <marc:subfield code="e">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
            <marc:subfield code="4">
              <xsl:choose>
                <xsl:when test="madsrdf:code">
                  <xsl:for-each select="madsrdf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="bf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
            <marc:subfield code="4">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:otherwise>
          <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label|../../../../bflc:appliesTo/bflc:AppliesTo/rdfs:label">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="3">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $3.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          <xsl:for-each select="../../../../../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vWorkUri]/bflc:relation/bflc:Relation/rdfs:label">
            <marc:subfield code="i">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]">
              <xsl:for-each select="exsl:node-set($vNameAuth)//marc:datafield[@tag=$vNameAuthTag]/marc:subfield[contains($vAuthSubfields,@code)]">
                <marc:subfield>
                  <xsl:attribute name="code">
                    <xsl:value-of select="@code"/>
                  </xsl:attribute>
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:variable name="vvAddEntryTag-a">
                <xsl:choose>
                  <xsl:when test="madsrdf:elementList">
                    <xsl:for-each select="madsrdf:elementList/*[1]/madsrdf:elementValue">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:when test="madsrdf:authoritativeLabel">
                    <xsl:for-each select="madsrdf:authoritativeLabel">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:for-each select="rdfs:label">
                      <xsl:choose>
                        <xsl:when test="position() = 1">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $a.</xsl:message>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:for-each>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$vvAddEntryTag-a != ''">
                <marc:subfield code="a">
                  <xsl:value-of select="$vvAddEntryTag-a"/>
                </marc:subfield>
              </xsl:if>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='710'">
                  <xsl:for-each select="madsrdf:elementList/*[position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="b">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='700'">
                  <xsl:for-each select="madsrdf:elementList/madsrdf:TermsOfAddressNameElement/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='711'">
                  <xsl:for-each select="madsrdf:elementList/*[local-name()='GeographicElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="c">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='700'">
                  <xsl:for-each select="madsrdf:elementList/madsrdf:DateNameElement/madsrdf:elementValue">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="d">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $d.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='700'">
                  <xsl:for-each select="madsrdf:fullerName/*/rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <marc:subfield code="q">
                          <xsl:call-template name="tChopPunct">
                            <xsl:with-param name="pString" select="."/>
                          </xsl:call-template>
                        </marc:subfield>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $q.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
              <xsl:choose>
                <xsl:when test="$vAddEntryTag='711'">
                  <xsl:for-each select="madsrdf:elementList/*[local-name()='NameElement' and position() &gt; 1]/madsrdf:elementValue">
                    <marc:subfield code="q">
                      <xsl:call-template name="tChopPunct">
                        <xsl:with-param name="pString" select="."/>
                      </xsl:call-template>
                    </marc:subfield>
                  </xsl:for-each>
                </xsl:when>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="$vAddEntryTag='711'">
              <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="j">
                  <xsl:choose>
                    <xsl:when test="madsrdf:authoritativeLabel">
                      <xsl:for-each select="madsrdf:authoritativeLabel">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $j.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $j.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="../../bf:role/*[rdfs:label or madsrdf:authoritativeLabel]">
                <marc:subfield code="e">
                  <xsl:choose>
                    <xsl:when test="madsrdf:authoritativeLabel">
                      <xsl:for-each select="madsrdf:authoritativeLabel">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:for-each select="rdfs:label">
                        <xsl:choose>
                          <xsl:when test="position() = 1">
                            <xsl:call-template name="tChopPunct">
                              <xsl:with-param name="pString" select="."/>
                            </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $e.</xsl:message>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                </marc:subfield>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:for-each select="../../bf:role/*[madsrdf:code or bf:code]">
            <marc:subfield code="4">
              <xsl:choose>
                <xsl:when test="madsrdf:code">
                  <xsl:for-each select="madsrdf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="bf:code">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $4.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="../../bf:role/bf:Role/@rdf:about|../../bf:role/@rdf:resource">
            <marc:subfield code="4">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
            <marc:subfield code="0">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="bf:identifiedBy/bf:Identifier">
            <marc:subfield code="0">
              <xsl:variable name="vIdType">
                <xsl:call-template name="tChopPunct">
                  <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="$vIdType != ''">
                  <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="rdf:value"/>
                </xsl:otherwise>
              </xsl:choose>
            </marc:subfield>
          </xsl:for-each>
          <xsl:for-each select="ancestor::bf:Hub">
            <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
              <xsl:choose>
                <xsl:when test="position() = 1">
                  <marc:subfield code="t">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </marc:subfield>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $t.</xsl:message>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:for-each>
            <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
              <marc:subfield code="0">
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
            <xsl:for-each select="bf:identifiedBy/bf:Identifier">
              <marc:subfield code="0">
                <xsl:variable name="vIdType">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="$vIdType != ''">
                    <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="rdf:value"/>
                  </xsl:otherwise>
                </xsl:choose>
              </marc:subfield>
            </xsl:for-each>
          </xsl:for-each>
          <xsl:choose>
            <xsl:when test="$vSourceUri != '' or bf:source/bf:Source/bf:code or bf:source/bf:Source/rdfs:label">
              <xsl:variable name="vvAddEntryTag-2">
                <xsl:choose>
                  <xsl:when test="bf:source/bf:Source/bf:code">
                    <xsl:value-of select="bf:source/bf:Source/bf:code"/>
                  </xsl:when>
                  <xsl:when test="$vSourceUri != ''">
                    <xsl:choose>
                      <xsl:when test="contains($vSourceUri,'id.loc.gov')">
                        <xsl:call-template name="tUriCode">
                          <xsl:with-param name="pUri" select="$vSourceUri"/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$vSourceUri"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="bf:source/bf:Source/rdfs:label"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:if test="$vvAddEntryTag-2 != ''">
                <marc:subfield code="2">
                  <xsl:value-of select="$vvAddEntryTag-2"/>
                </marc:subfield>
              </xsl:if>
            </xsl:when>
          </xsl:choose>
          <xsl:for-each select="../../bflc:applicableInstitution/*/bf:code">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="5">
                  <xsl:value-of select="."/>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vAddEntryTag $5.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:otherwise>
      </xsl:choose>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:relatedTo[not(contains(rdf:type/@rdf:resource,'bibframe'))]/bf:Hub[not(bf:contribution)] |                     bf:Work/bf:hasPart/bf:Hub[not(bf:contribution)] |                     //bf:Item/bf:hasPart/bf:Hub[not(bf:contribution)]" mode="generate-730">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">730</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey and (string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey) &lt; string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle))">
              <xsl:value-of select="string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bf:mainTitle) - string-length(bf:title/bf:Title[not(contains(rdf:type/@rdf:resource,'bibframe'))][1]/bflc:titleSortKey)"/>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>0</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name(parent::*)='hasPart'">
              <xsl:text>2</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:variable name="vNodeUri" select="@rdf:about"/>
      <xsl:for-each select="../../bflc:relationship/bflc:Relationship[bf:relatedTo/@rdf:resource=$vNodeUri or bf:relatedTo=$vNodeUri]/bflc:relation/bflc:Relation/rdfs:label">
        <marc:subfield code="i">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:legalDate">
        <marc:subfield code="d">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:originDate">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="f">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $f.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:musicMedium/bf:MusicMedium/rdfs:label">
        <marc:subfield code="m">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:title/bf:Title/bf:partNumber">
        <marc:subfield code="n">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:title/bf:Title/bf:partName">
        <marc:subfield code="p">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Arrangement'">
          <marc:subfield code="o">arranged</marc:subfield>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="bf:musicKey">
        <marc:subfield code="r">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:version">
        <marc:subfield code="s">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifier/*[local-name()=Issn or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="x">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $x.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <marc:subfield code="2">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="5">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 730 $5.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:relatedTo/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled'] |                     bf:Work/bf:hasPart/bf:Work[rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/Uncontrolled']" mode="generate-740">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <marc:datafield>
      <xsl:attribute name="tag">740</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:text>0</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name(..)='hasPart'">
              <xsl:text>2</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 740 $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:partNumber">
        <marc:subfield code="n">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:partName">
        <marc:subfield code="p">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:applicableInstitution/*/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="5">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 740 $5.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:place/*[local-name()='HierarchicalGeographic' or rdf:type/@rdf:resource='http://www.loc.gov/mads/rdf/v1#HierarchicalGeographic']" mode="generate-752">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">752</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:for-each select="madsrdf:componentList/*">
        <xsl:choose>
          <xsl:when test="local-name()='Country' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Country']">
            <xsl:variable name="v752-a">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $a.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$v752-a != ''">
              <marc:subfield code="a">
                <xsl:value-of select="$v752-a"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
          <xsl:when test="local-name()='State' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#State']">
            <xsl:variable name="v752-b">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $b.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $b.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$v752-b != ''">
              <marc:subfield code="b">
                <xsl:value-of select="$v752-b"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
          <xsl:when test="local-name()='County' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#County']">
            <xsl:variable name="v752-c">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $c.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $c.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$v752-c != ''">
              <marc:subfield code="c">
                <xsl:value-of select="$v752-c"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
          <xsl:when test="local-name()='City' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#City']">
            <xsl:variable name="v752-d">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $d.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $d.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$v752-d != ''">
              <marc:subfield code="d">
                <xsl:value-of select="$v752-d"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
          <xsl:when test="local-name()='CitySection' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#CitySection']">
            <xsl:variable name="v752-f">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $f.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $f.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$v752-f != ''">
              <marc:subfield code="f">
                <xsl:value-of select="$v752-f"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
          <xsl:when test="local-name()='Region' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#Region']">
            <xsl:variable name="v752-g">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $g.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $g.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$v752-g != ''">
              <marc:subfield code="g">
                <xsl:value-of select="$v752-g"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
          <xsl:when test="local-name()='ExtraterrestrialArea' or rdf:type[@rdf:resource='http://www.loc.gov/mads/rdf/v1#ExtraterrestrialArea']">
            <xsl:variable name="v752-h">
              <xsl:choose>
                <xsl:when test="madsrdf:authoritativeLabel">
                  <xsl:for-each select="madsrdf:authoritativeLabel">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $h.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdfs:label">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:call-template name="tChopPunct">
                          <xsl:with-param name="pString" select="."/>
                        </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $h.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$v752-h != ''">
              <marc:subfield code="h">
                <xsl:value-of select="$v752-h"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
        <marc:subfield code="e">
          <xsl:choose>
            <xsl:when test="madsrdf:authoritativeLabel">
              <xsl:for-each select="madsrdf:authoritativeLabel">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $e.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $e.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
        <marc:subfield code="4">
          <xsl:choose>
            <xsl:when test="madsrdf:code">
              <xsl:for-each select="madsrdf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:value-of select="."/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $4.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:value-of select="."/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $4.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
        <marc:subfield code="4">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code|*/madsrdf:componentList/*[1]/bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:value-of select="."/>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 752 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Instance/bf:systemRequirement/*[                     local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel' or                     local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage' or                     local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem']" mode="generate-753">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">753</xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:text> </xsl:text>
      </xsl:attribute>
      <xsl:choose>
        <xsl:when test="local-name() = 'MachineModel' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/MachineModel'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name() = 'ProgrammingLanguage' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/ProgrammingLanguage'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
        <xsl:when test="local-name() = 'OperatingSystem' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/OperatingSystem'">
          <xsl:for-each select="rdfs:label">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="@rdf:about[not(contains(.,'example.org')) and not(contains(.,'REPLACE'))]">
        <marc:subfield code="0">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/bf:Identifier">
        <marc:subfield code="0">
          <xsl:variable name="vIdType">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="bf:source/bf:Source/bf:code"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="$vIdType != ''">
              <xsl:value-of select="concat('(',$vIdType,')',rdf:value)"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="rdf:value"/>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:source/bf:Source/bf:code">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="2">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element 753 $2.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:hasSeries/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasSubseries/bf:Work[bf:hasInstance] |                     bf:Work/bf:translationOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:translation/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplement/bf:Work[bf:hasInstance] |                     bf:Work/bf:supplementTo/bf:Work[bf:hasInstance] |                     bf:Work/bf:partOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:hasPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherEdition/bf:Work[bf:hasInstance] |                     bf:Work/bf:otherPhysicalFormat/bf:Work[bf:hasInstance] |                     bf:Work/bf:issuedWith/bf:Work[bf:hasInstance] |                     bf:Work/bf:continues/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuesInPart/bf:Work[bf:hasInstance] |                     bf:Work/bf:precededBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergerOf/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbed/bf:Work[bf:hasInstance] |                     bf:Work/bf:separatedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:continuedInPartBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:succeededFrom/bf:Work[bf:hasInstance] |                     bf:Work/bf:absorbedBy/bf:Work[bf:hasInstance] |                     bf:Work/bf:splitInto/bf:Work[bf:hasInstance] |                     bf:Work/bf:mergedToForm/bf:Work[bf:hasInstance] |                     bf:Work/bf:dataSource/bf:Work[bf:hasInstance] |                     bf:Work/bf:relatedTo/bf:Work[bf:hasInstance]" mode="generate-vLinkTagFromWork">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="vLinkTagFromWork">
      <xsl:choose>
        <xsl:when test="local-name(..)='hasSeries'">
          <xsl:text>760</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='hasSubseries'">
          <xsl:text>762</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='translationOf'">
          <xsl:text>765</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='translation'">
          <xsl:text>767</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='supplement'">
          <xsl:text>770</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='supplementTo'">
          <xsl:text>772</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='partOf'">
          <xsl:text>773</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='hasPart'">
          <xsl:text>774</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='otherEdition'">
          <xsl:text>775</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='otherPhysicalFormat'">
          <xsl:text>776</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='issuedWith'">
          <xsl:text>777</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='continues'">
          <xsl:text>780</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='continuesInPart'">
          <xsl:text>780</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='precededBy'">
          <xsl:text>780</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='mergerOf'">
          <xsl:text>780</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='absorbed'">
          <xsl:text>780</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='separatedFrom'">
          <xsl:text>780</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='continuedBy'">
          <xsl:text>785</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='continuedInPartBy'">
          <xsl:text>785</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='succeededBy'">
          <xsl:text>785</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='absorbedBy'">
          <xsl:text>785</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='splitInto'">
          <xsl:text>785</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='mergedToForm'">
          <xsl:text>785</xsl:text>
        </xsl:when>
        <xsl:when test="local-name(..)='dataSource'">
          <xsl:text>786</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>787</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vLanguageUri">
      <xsl:choose>
        <xsl:when test="bf:language/@rdf:resource">
          <xsl:value-of select="bf:language/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:language/*/@rdf:about">
          <xsl:value-of select="bf:language/*/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vPlaceUri">
      <xsl:choose>
        <xsl:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/@rdf:resource">
          <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/@rdf:resource"/>
        </xsl:when>
        <xsl:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*/@rdf:about">
          <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*/@rdf:about"/>
        </xsl:when>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vXmlLang">
      <xsl:value-of select="rdfs:label/@xml:lang"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">
        <xsl:value-of select="$vLinkTagFromWork"/>
      </xsl:attribute>
      <xsl:if test="$vXmlLang != ''">
        <xsl:attribute name="xml:lang">
          <xsl:value-of select="$vXmlLang"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="ind1">
        <xsl:text>0</xsl:text>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name(parent::*)='continues'">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='continuesInPart'">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='precededBy'">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='mergerOf'">
              <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='absorbed'">
              <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='separatedFrom'">
              <xsl:text>7</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='continuedBy'">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='continuedInPartBy'">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='succeededBy'">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='absorbedBy'">
              <xsl:text>4</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='splitInto'">
              <xsl:text>5</xsl:text>
            </xsl:when>
            <xsl:when test="local-name(parent::*)='mergedToForm'">
              <xsl:text>7</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:for-each select="bflc:appliesTo/bflc:AppliesTo/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="3">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $3.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:contribution/*[local-name()='PrimaryContribution' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bflc/PrimaryContribution']/bf:agent/*/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="a">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $a.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:hasInstance/bf:Instance/bf:editionStatement">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="b">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $b.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:title/bf:Title/bf:qualifier">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="c">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $c.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:hasInstance/bf:Instance/bf:provisionActivityStatement">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="d">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $d.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="$vLanguageUri != '' or bf:language/*[local-name()='code']">
          <xsl:variable name="vvLinkTagFromWork-e">
            <xsl:choose>
              <xsl:when test="bf:language/*[local-name()='code']">
                <xsl:value-of select="bf:language/*[local-name()='code']"/>
              </xsl:when>
              <xsl:when test="$vLanguageUri != ''">
                <xsl:choose>
                  <xsl:when test="contains($vLanguageUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode">
                      <xsl:with-param name="pUri" select="$vLanguageUri"/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vLanguageUri"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$vvLinkTagFromWork-e != ''">
            <marc:subfield code="e">
              <xsl:value-of select="$vvLinkTagFromWork-e"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:choose>
        <xsl:when test="$vPlaceUri != '' or bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']">
          <xsl:variable name="vvLinkTagFromWork-f">
            <xsl:choose>
              <xsl:when test="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']">
                <xsl:value-of select="bf:hasInstance/bf:Instance/bf:provisionActivity/bf:ProvisionActivity/bf:place/*[local-name()='code']"/>
              </xsl:when>
              <xsl:when test="$vPlaceUri != ''">
                <xsl:choose>
                  <xsl:when test="contains($vPlaceUri,'id.loc.gov')">
                    <xsl:call-template name="tUriCode">
                      <xsl:with-param name="pUri" select="$vPlaceUri"/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vPlaceUri"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:if test="$vvLinkTagFromWork-f != ''">
            <marc:subfield code="f">
              <xsl:value-of select="$vvLinkTagFromWork-f"/>
            </marc:subfield>
          </xsl:if>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="bf:hasInstance/bf:Instance/bf:part">
        <marc:subfield code="g">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:hasInstance/bf:Instance/bf:extent/bf:Extent/rdfs:label">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="h">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $h.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[rdfs:label or madsrdf:authoritativeLabel]">
        <marc:subfield code="i">
          <xsl:choose>
            <xsl:when test="madsrdf:authoritativeLabel">
              <xsl:for-each select="madsrdf:authoritativeLabel">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $i.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="rdfs:label">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="."/>
                    </xsl:call-template>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $i.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*[madsrdf:code or bf:code]">
        <marc:subfield code="i">
          <xsl:choose>
            <xsl:when test="madsrdf:code">
              <xsl:for-each select="madsrdf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:value-of select="."/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $i.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="bf:code">
                <xsl:choose>
                  <xsl:when test="position() = 1">
                    <xsl:value-of select="."/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $i.</xsl:message>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bflc:relationship/bflc:Relationship/bflc:relation/*/@rdf:about|bflc:relationship/bflc:Relationship/bflc:relation/@rdf:resource">
        <marc:subfield code="i">
          <xsl:value-of select="."/>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:hasInstance/bf:Instance/bf:seriesStatement">
        <marc:subfield code="k">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:note/bf:Note/rdfs:label|bf:hasInstance/bf:Instance/bf:note/bf:Note/rdfs:label">
        <marc:subfield code="n">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
      <xsl:for-each select="bf:title/*[local-name()='AbbreviatedTitle' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/AbbreviatedTitle']/mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="p">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $p.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="bf:title/bf:Title/bf:mainTitle != bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
          <xsl:for-each select="bf:title/bf:Title/bf:mainTitle">
            <xsl:choose>
              <xsl:when test="position() = 1">
                <marc:subfield code="s">
                  <xsl:call-template name="tChopPunct">
                    <xsl:with-param name="pString" select="."/>
                  </xsl:call-template>
                </marc:subfield>
              </xsl:when>
              <xsl:otherwise>
                <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $s.</xsl:message>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
        </xsl:when>
      </xsl:choose>
      <xsl:for-each select="bf:hasInstance/bf:Instance/bf:title/bf:Title/bf:mainTitle">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="t">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $t.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:identifiedBy/*[local-name()='Issn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Issn']/rdf:value">
        <xsl:choose>
          <xsl:when test="position() = 1">
            <marc:subfield code="x">
              <xsl:call-template name="tChopPunct">
                <xsl:with-param name="pString" select="."/>
              </xsl:call-template>
            </marc:subfield>
          </xsl:when>
          <xsl:otherwise>
            <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $x.</xsl:message>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
      <xsl:for-each select="bf:hasInstance/bf:Instance/bf:identifiedBy/*">
        <xsl:choose>
          <xsl:when test="local-name()='Local' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Local'">
            <xsl:for-each select="rdf:value">
              <marc:subfield code="o">
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="local-name()='ReportNumber' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/ReportNumber'">
            <xsl:for-each select="rdf:value">
              <marc:subfield code="r">
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="local-name()='Strn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Strn'">
            <xsl:for-each select="rdf:value">
              <marc:subfield code="u">
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="local-name()='Lccn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Lccn'">
            <xsl:variable name="vvLinkTagFromWork-w">
              <xsl:value-of select="concat('(DLC)',rdf:value)"/>
            </xsl:variable>
            <xsl:if test="$vvLinkTagFromWork-w != ''">
              <marc:subfield code="w">
                <xsl:value-of select="$vvLinkTagFromWork-w"/>
              </marc:subfield>
            </xsl:if>
          </xsl:when>
          <xsl:when test="local-name()='Coden' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Coden'">
            <xsl:for-each select="rdf:value">
              <marc:subfield code="y">
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="local-name()='Isbn' or rdf:type/@rdf:resource='http://id.loc.gov/ontologies/bibframe/Isbn'">
            <xsl:for-each select="rdf:value">
              <marc:subfield code="z">
                <xsl:value-of select="."/>
              </marc:subfield>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <xsl:variable name="vvLinkTagFromWork-w">
              <xsl:choose>
                <xsl:when test="bf:assigner/bf:Agent/bf:code">
                  <xsl:variable name="vSource">
                    <xsl:call-template name="tChopPunct">
                      <xsl:with-param name="pString" select="bf:assigner/bf:Agent/bf:code"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:value-of select="concat('(',$vSource,')',rdf:value)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:for-each select="rdf:value">
                    <xsl:choose>
                      <xsl:when test="position() = 1">
                        <xsl:value-of select="."/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:message>Record <xsl:value-of select="$vRecordId"/>: Unprocessed node <xsl:value-of select="name()"/>. Non-repeatable target element vLinkTagFromWork $w.</xsl:message>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:for-each>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="$vvLinkTagFromWork-w != ''">
              <marc:subfield code="w">
                <xsl:value-of select="$vvLinkTagFromWork-w"/>
              </marc:subfield>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="bf:Work/bf:tableOfContents/bf:TableOfContents[not(rdfs:label) and rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     bf:Instance/bf:supplementaryContent/bf:SupplementaryContent[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']] |                     //bf:Item/bf:electronicLocator/*[rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']]" mode="generate-856">
    <xsl:param name="vRecordId"/>
    <xsl:param name="vAdminMetadata"/>
    <xsl:variable name="v856Uri">
      <xsl:value-of select="rdf:value[@rdf:datatype='http://www.w3.org/2001/XMLSchema#anyURI']"/>
    </xsl:variable>
    <marc:datafield>
      <xsl:attribute name="tag">856</xsl:attribute>
      <xsl:attribute name="ind1">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="starts-with($v856Uri,'mailto')">
              <xsl:text>0</xsl:text>
            </xsl:when>
            <xsl:when test="starts-with($v856Uri,'ftp')">
              <xsl:text>1</xsl:text>
            </xsl:when>
            <xsl:when test="starts-with($v856Uri,'telnet') or starts-with($v856Uri,'ssh')">
              <xsl:text>2</xsl:text>
            </xsl:when>
            <xsl:when test="starts-with($v856Uri,'http')">
              <xsl:text>4</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:attribute name="ind2">
        <xsl:variable name="vInd">
          <xsl:choose>
            <xsl:when test="local-name()='SupplementaryContent'">
              <xsl:text>2</xsl:text>
            </xsl:when>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vInd != ''">
            <xsl:value-of select="$vInd"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text> </xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>
      <xsl:variable name="v856-u">
        <xsl:value-of select="$v856Uri"/>
      </xsl:variable>
      <xsl:if test="$v856-u != ''">
        <marc:subfield code="u">
          <xsl:value-of select="$v856-u"/>
        </marc:subfield>
      </xsl:if>
      <xsl:for-each select="bf:note/bf:Note/rdfs:label">
        <marc:subfield code="z">
          <xsl:call-template name="tChopPunct">
            <xsl:with-param name="pString" select="."/>
          </xsl:call-template>
        </marc:subfield>
      </xsl:for-each>
    </marc:datafield>
  </xsl:template>
  <xsl:template match="text()"/>
  <xsl:template name="tChopPunct">
    <xsl:param name="pString"/>
    <xsl:variable name="vNormString" select="normalize-space($pString)"/>
    <xsl:variable name="vPunct" select="':;,/=–—'"/>
    <xsl:variable name="vEndEnclose" select="')]}&quot;'"/>
    <xsl:variable name="vLength" select="string-length($vNormString)"/>
    <xsl:choose>
      <xsl:when test="$vLength=0"/>
      <xsl:when test="not($vNormString)"/>
      <xsl:when test="substring($vNormString,1,1) = '('">
        <xsl:variable name="vCloseIndex">
          <xsl:call-template name="tLastIndex">
            <xsl:with-param name="pString" select="$vNormString"/>
            <xsl:with-param name="pSearch" select="')'"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vCloseIndex &gt; 2">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="substring($vNormString,2)"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="substring($vNormString,1,1) = '['">
        <xsl:variable name="vCloseIndex">
          <xsl:call-template name="tLastIndex">
            <xsl:with-param name="pString" select="$vNormString"/>
            <xsl:with-param name="pSearch" select="']'"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vCloseIndex &gt; 2">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="substring($vNormString,2)"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="substring($vNormString,1,1) = '{'">
        <xsl:variable name="vCloseIndex">
          <xsl:call-template name="tLastIndex">
            <xsl:with-param name="pString" select="$vNormString"/>
            <xsl:with-param name="pSearch" select="'}'"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vCloseIndex &gt; 2">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="substring($vNormString,2)"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="substring($vNormString,1,1) = '&quot;'">
        <xsl:variable name="vCloseIndex">
          <xsl:call-template name="tLastIndex">
            <xsl:with-param name="pString" select="$vNormString"/>
            <xsl:with-param name="pSearch" select="'&quot;'"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$vCloseIndex &gt; 2">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="concat(substring($vNormString,2,$vCloseIndex - 2),substring($vNormString,$vCloseIndex+1))"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="substring($vNormString,2)"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="substring($vNormString,$vLength,1) = '.'">
        <xsl:choose>
          <xsl:when test="contains(concat($vPunct,$vEndEnclose),substring($vNormString,$vLength - 1,1))">
            <xsl:call-template name="tChopPunct">
              <xsl:with-param name="pString" select="substring($vNormString,1,$vLength - 1)"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$vNormString"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="contains($vPunct, substring($vNormString,$vLength,1))">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="substring($vNormString,1,$vLength - 1)"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="substring($vNormString,$vLength,1)=')' and not(contains($vNormString,'('))">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="substring($vNormString,1,$vLength - 1)"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="substring($vNormString,$vLength,1)=']' and not(contains($vNormString,'['))">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="substring($vNormString,1,$vLength - 1)"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="substring($vNormString,$vLength,1)='}' and not(contains($vNormString,'{'))">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="substring($vNormString,1,$vLength - 1)"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="substring($vNormString,$vLength,1)='&quot;' and not(contains($vNormString,'&quot;'))">
        <xsl:call-template name="tChopPunct">
          <xsl:with-param name="pString" select="substring($vNormString,1,$vLength - 1)"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$vNormString"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="tLastIndex">
    <xsl:param name="pString"/>
    <xsl:param name="pSearch"/>
    <xsl:choose>
      <xsl:when test="$pSearch != '' and contains($pString,$pSearch)">
        <xsl:variable name="vRevSearch">
          <xsl:call-template name="tReverseString">
            <xsl:with-param name="pString" select="$pSearch"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:variable name="vRevString">
          <xsl:call-template name="tReverseString">
            <xsl:with-param name="pString" select="$pString"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:value-of select="string-length($pString) - string-length(substring-before($vRevString,$vRevSearch))"/>
      </xsl:when>
      <xsl:otherwise>0</xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="tReverseString">
    <xsl:param name="pString"/>
    <xsl:variable name="vLength" select="string-length($pString)"/>
    <xsl:choose>
      <xsl:when test="$vLength &lt; 2">
        <xsl:value-of select="$pString"/>
      </xsl:when>
      <xsl:when test="$vLength = 2">
        <xsl:value-of select="concat(substring($pString,2,1),substring($pString,1,1))"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="vMid" select="floor($vLength div 2)"/>
        <xsl:variable name="vHalf1">
          <xsl:call-template name="tReverseString">
            <xsl:with-param name="pString" select="substring($pString,1,$vMid)"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:variable name="vHalf2">
          <xsl:call-template name="tReverseString">
            <xsl:with-param name="pString" select="substring($pString,$vMid+1)"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:value-of select="concat($vHalf2,$vHalf1)"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="tPadRight">
    <xsl:param name="pInput"/>
    <xsl:param name="pPadChar" select="' '"/>
    <xsl:param name="pStringLength"/>
    <xsl:choose>
      <xsl:when test="string-length($pInput) &gt;= $pStringLength">
        <xsl:value-of select="$pInput"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="tPadRight">
          <xsl:with-param name="pInput" select="concat($pInput,$pPadChar)"/>
          <xsl:with-param name="pPadChar" select="$pPadChar"/>
          <xsl:with-param name="pStringLength" select="$pStringLength"/>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="tPadLeft">
    <xsl:param name="pInput"/>
    <xsl:param name="pPadChar" select="' '"/>
    <xsl:param name="pStringLength" select="string-length($pInput)"/>
    <xsl:choose>
      <xsl:when test="string-length($pInput) &gt;= $pStringLength">
        <xsl:value-of select="$pInput"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="tPadLeft">
          <xsl:with-param name="pInput" select="concat($pPadChar,$pInput)"/>
          <xsl:with-param name="pPadChar" select="$pPadChar"/>
          <xsl:with-param name="pStringLength" select="$pStringLength"/>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="EDTF-Date1">
    <xsl:param name="pEDTFDate"/>
    <xsl:choose>
      <xsl:when test="contains($pEDTFDate,'/')">
        <xsl:value-of select="substring-before($pEDTFDate,'/')"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$pEDTFDate"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="EDTF-Date2">
    <xsl:param name="pEDTFDate"/>
    <xsl:value-of select="substring-after($pEDTFDate,'/')"/>
  </xsl:template>
  <xsl:template name="EDTF-DatePart">
    <xsl:param name="pEDTFDate"/>
    <xsl:choose>
      <xsl:when test="contains($pEDTFDate,'T')">
        <xsl:value-of select="substring-before($pEDTFDate,'T')"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$pEDTFDate"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="EDTF-TimePart">
    <xsl:param name="pEDTFDate"/>
    <xsl:choose>
      <xsl:when test="contains(substring-after($pEDTFDate,'T'),'+')">
        <xsl:value-of select="substring-before(substring-after($pEDTFDate,'T'),'+')"/>
      </xsl:when>
      <xsl:when test="contains(substring-after($pEDTFDate,'T'),'-')">
        <xsl:value-of select="substring-before(substring-after($pEDTFDate,'T'),'-')"/>
      </xsl:when>
      <xsl:when test="contains(substring-after($pEDTFDate,'T'),'Z')">
        <xsl:value-of select="substring-before(substring-after($pEDTFDate,'T'),'Z')"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="substring-after($pEDTFDate,'T')"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="EDTF-TimeDiff">
    <xsl:param name="pEDTFDate"/>
    <xsl:choose>
      <xsl:when test="contains(substring-after($pEDTFDate,'T'),'+')">
        <xsl:value-of select="concat('+',substring-after(substring-after($pEDTFDate,'T'),'+'))"/>
      </xsl:when>
      <xsl:when test="contains(substring-after($pEDTFDate,'T'),'-')">
        <xsl:value-of select="concat('-',substring-after(substring-after($pEDTFDate,'T'),'-'))"/>
      </xsl:when>
      <xsl:when test="contains(substring-after($pEDTFDate,'T'),'Z')">+00:00</xsl:when>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="EDTF-to-033">
    <xsl:param name="pEDTFDate"/>
    <xsl:variable name="vEDTFDate" select="translate(translate(translate($pEDTFDate,'?',''),'~',''),'%','')"/>
    <xsl:variable name="vDatePart">
      <xsl:call-template name="EDTF-DatePart">
        <xsl:with-param name="pEDTFDate" select="$vEDTFDate"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="vTimePart">
      <xsl:call-template name="EDTF-TimePart">
        <xsl:with-param name="pEDTFDate" select="$vEDTFDate"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="vTimeDiffPart">
      <xsl:call-template name="EDTF-TimeDiff">
        <xsl:with-param name="pEDTFDate" select="$vEDTFDate"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="vYear">
      <xsl:variable name="vYear033">
        <xsl:choose>
          <xsl:when test="contains($vDatePart,'-')">
            <xsl:value-of select="translate(substring-before($vDatePart,'-'),'X','-')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="translate($vDatePart,'X','-')"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:choose>
        <xsl:when test="starts-with($vYear033,'Y') or starts-with($vYear033,'-') or (string-length($vYear033) != 4)">
          <xsl:text>----</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$vYear033"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vMonth">
      <xsl:variable name="vMonth033">
        <xsl:choose>
          <xsl:when test="substring-after(substring-after($vDatePart,'-'),'-') != ''">
            <xsl:value-of select="translate(substring-before(substring-after($vDatePart,'-'),'-'),'X','-')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="translate(substring-after($vDatePart,'-'),'X','-')"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:choose>
        <xsl:when test="(string-length($vMonth033) != 2) or ($vMonth033 &gt; 12)">
          <xsl:text>--</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$vMonth033"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vDay">
      <xsl:variable name="vDay033" select="translate(substring-after(substring-after($vDatePart,'-'),'-'),'X','-')"/>
      <xsl:choose>
        <xsl:when test="(string-length($vDay033) != 2) or ($vDay033 &gt; 31)">
          <xsl:text>--</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$vDay033"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vTime">
      <xsl:if test="$vTimePart != ''">
        <xsl:variable name="vTime033" select="translate(translate($vTimePart,'X','-'),':','')"/>
        <xsl:choose>
          <xsl:when test="string-length($vTime033) = 6">
            <xsl:value-of select="$vTime033"/>
          </xsl:when>
          <xsl:otherwise>------</xsl:otherwise>
        </xsl:choose>
      </xsl:if>
    </xsl:variable>
    <xsl:variable name="vTimeDiff">
      <xsl:if test="($vTimePart != '') and ($vTimeDiffPart != '')">
        <xsl:variable name="vTimeDiff033" select="translate(translate($vTimeDiffPart,'X','-'),':','')"/>
        <xsl:choose>
          <xsl:when test="string-length($vTimeDiff033) = 5">
            <xsl:value-of select="$vTimeDiff033"/>
          </xsl:when>
          <xsl:when test="string-length($vTimeDiff033) = 3">
            <xsl:value-of select="concat($vTimeDiff033,'00')"/>
          </xsl:when>
        </xsl:choose>
      </xsl:if>
    </xsl:variable>
    <xsl:value-of select="concat($vYear,$vMonth,$vDay,$vTime,$vTimeDiff)"/>
  </xsl:template>
  <xsl:template name="tScriptCode">
    <xsl:param name="pXmlLang"/>
    <xsl:if test="string-length($pXmlLang) &gt;= 4">
      <xsl:choose>
        <xsl:when test="string-length($pXmlLang)=4 and translate(substring($pXmlLang,1,1),0123456789,'') != ''">
          <xsl:value-of select="$pXmlLang"/>
        </xsl:when>
        <xsl:when test="string-length(substring-before($pXmlLang,'-'))=4 and translate(substring($pXmlLang,1,1),0123456789,'') != ''">
          <xsl:value-of select="substring-before($pXmlLang,'-')"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="tScriptCode">
            <xsl:with-param name="pXmlLang" select="substring-after($pXmlLang,'-')"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>
  <xsl:template name="tUriCode">
    <xsl:param name="pUri"/>
    <xsl:choose>
      <xsl:when test="contains($pUri,'://')">
        <xsl:if test="contains(substring-after($pUri,'://'),'/')">
          <xsl:call-template name="tUriCode">
            <xsl:with-param name="pUri" select="substring-after($pUri,'://')"/>
          </xsl:call-template>
        </xsl:if>
      </xsl:when>
      <xsl:when test="contains($pUri,'/')">
        <xsl:call-template name="tUriCode">
          <xsl:with-param name="pUri" select="substring-after($pUri,'/')"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:choose>
          <xsl:when test="contains($pUri,'?')">
            <xsl:value-of select="substring-before($pUri,'?')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$pUri"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="tToken2Subfields">
    <xsl:param name="pString"/>
    <xsl:param name="pSeparator" select="' '"/>
    <xsl:param name="pSubfieldCode"/>
    <xsl:choose>
      <xsl:when test="contains($pString,$pSeparator)">
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="$pSubfieldCode"/>
          </xsl:attribute>
          <xsl:value-of select="substring-before($pString,$pSeparator)"/>
        </marc:subfield>
        <xsl:call-template name="tToken2Subfields">
          <xsl:with-param name="pString" select="substring-after($pString,$pSeparator)"/>
          <xsl:with-param name="pSeparator" select="$pSeparator"/>
          <xsl:with-param name="pSubfieldCode" select="$pSubfieldCode"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <marc:subfield>
          <xsl:attribute name="code">
            <xsl:value-of select="$pSubfieldCode"/>
          </xsl:attribute>
          <xsl:value-of select="$pString"/>
        </marc:subfield>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="tGetMARCAuth">
    <xsl:param name="pUri"/>
    <xsl:param name="pForceSRULookup" select="false()"/>
    <xsl:variable name="vUrl">
      <xsl:choose>
        <xsl:when test="contains($pUri,'id.loc.gov/authorities/')                             and not('.marcxml.xml' = substring($pUri, string-length($pUri) - 11))">
          <xsl:choose>
            <xsl:when test="$pSRULookup='true' or $pForceSRULookup=true()">
              <xsl:variable name="vUriLccn">
                <xsl:call-template name="tUriCode">
                  <xsl:with-param name="pUri" select="$pUri"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:variable name="vLccnSearch">
                <xsl:variable name="vLccnNum">
                  <xsl:value-of select="translate($vUriLccn,translate($vUriLccn,'0123456789',''),'')"/>
                </xsl:variable>
                <xsl:variable name="vPrefix">
                  <xsl:value-of select="translate(substring($vUriLccn,1,3),'0123456789 ','')"/>
                </xsl:variable>
                <xsl:choose>
                  <xsl:when test="string-length($vLccnNum)=10">
                    <xsl:choose>
                      <xsl:when test="string-length($vPrefix) &lt; 2">
                        <xsl:value-of select="concat($vPrefix,'%20',$vLccnNum)"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$vUriLccn"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:choose>
                      <xsl:when test="string-length($vPrefix) &lt; 3">
                        <xsl:value-of select="concat($vPrefix,'%20',$vLccnNum)"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$vUriLccn"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:choose>
                <xsl:when test="contains($pUri,'names')">
                  <xsl:value-of select="concat('http://lx2.loc.gov:210/NAF?query=bath.lccn%3d',$vLccnSearch,'&amp;recordSchema=marcxml&amp;maximumRecords=1')"/>
                </xsl:when>
                <xsl:when test="contains($pUri,'subjects')">
                  <xsl:value-of select="concat('http://lx2.loc.gov:210/SAF?query=bath.lccn%3d',$vLccnSearch,'&amp;recordSchema=marcxml&amp;maximumRecords=1')"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$pUri"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <xsl:variable name="vPath">
                <xsl:value-of select="substring-after($pUri,'://id.loc.gov')"/>
              </xsl:variable>
              <xsl:value-of select="concat('https://id.loc.gov',$vPath,'.marcxml.xml')"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$pUri"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="vDoc" select="document($vUrl)"/>
    <xsl:choose>
      <xsl:when test="$vDoc">
        <xsl:copy-of select="$vDoc"/>
      </xsl:when>
      <xsl:otherwise>
        <marc:collection/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="tReadMarc382">
    <xsl:param name="pString"/>
    <xsl:param name="pSeparator" select="'$'"/>
    <xsl:choose>
      <xsl:when test="starts-with($pString,$pSeparator)">
        <xsl:if test="substring(substring-after($pString,$pSeparator),1,1) != '3'">
          <marc:subfield>
            <xsl:attribute name="code">
              <xsl:value-of select="substring(substring-after($pString,$pSeparator),1,1)"/>
            </xsl:attribute>
            <xsl:choose>
              <xsl:when test="contains(substring-after($pString,$pSeparator),$pSeparator)">
                <xsl:value-of select="substring-before(substring(substring-after($pString,$pSeparator),2),$pSeparator)"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="substring(substring-after($pString,$pSeparator),2)"/>
              </xsl:otherwise>
            </xsl:choose>
          </marc:subfield>
        </xsl:if>
        <xsl:choose>
          <xsl:when test="contains(substring-after($pString,$pSeparator),$pSeparator)">
            <xsl:call-template name="tReadMarc382">
              <xsl:with-param name="pString" select="concat($pSeparator,substring-after(substring-after($pString,$pSeparator),$pSeparator))"/>
              <xsl:with-param name="pSeparator" select="$pSeparator"/>
            </xsl:call-template>
          </xsl:when>
        </xsl:choose>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>
